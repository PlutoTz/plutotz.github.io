[{"title":"2021年安装deepin20.3和windows双系统","url":"/posts/140/","content":"前言​    如你所见deepin最近发布了它的社区版20.3，这次带来几个重要的更新：\n\n更强大的内核版本\n\n​    Stable内核升级到5.15版本，增强对Intel 12代U和NTFS文件系统的支持，系统兼容性进一步提升。深度操作系统支持选择双内核（LTS+Stable）进行安装，同时也可以手动升级内核版本。\n\n方便管理的相册\n\n​    照片批量选择更精准，同时支持快捷键操作。增加视频导入、预览、搜索功能，状态栏可以分开展示照片和视频数量。优化主要功能交互设计，带来更方便的照片、视频管理体验。\n\n更好用的截图录屏\n\n​    截图录屏增加滚动长截图功能，主要用于单页界面内容不能满足需求，需要手动翻页截取多张图片的场景，截图过程只需滚动就可以截出完整内容。在20.2.4版本已经上线的OCR功能，也支持在长截图场景下使用，更快捷的提取想要的文字内容。\n\n新增与优化\n更多详情请见官方更新日志：https://www.deepin.org/zh/2021/11/23/deepin-20-3/\n\n\n过程​    但是实际上，我本人第一次接触deepin是在2019年那个时候还是15.0的版本时代，当然界面和功能没有现在那么完善，当时使用也很不错，只是软件有点少而且更新慢。但安装在我家里的那台2012年生产的联想笔记本g470，运行还是十分的流畅，日常使用看视频和写稿子还是很不错，但是毕竟是很久之前的笔记本，硬件是很难跟的上,特别是低色域的TN屏幕，简直是不忍直视。所以说把deepin装在主力机上来使用的话，还是能迸发出很大生产力的。\n​    所以我打算趁着这个更新机会把它装进我现在的笔记本暗影骑士3上，本子的型号为Acer AN515-52。由于我已经有windows系统，所以主要看这个deepin的安装。\n​    这个篇文章主要是描述我遇到一些小==问题==和一个一个的小坑。以及我自己在网上搜查和摸索的解决方案！！太多比较简单的我就不再写，但是我尽量把细节说清楚。\n安装大体上步骤有下面这些：\n​    由于我都装好了所以可能会有图片不够的情况出现，所以我尽可能多写文字说明。\n下载deepin iso镜像镜像下载\n官方：http://cdimage.deepin.com/releases/20.3/deepin-desktop-community-20.3-amd64.iso\nOSDN：https://osdn.net/projects/deepin/storage/20.3\n百度网盘：https://pan.baidu.com/s/1F59owLkVL7CuSqpxmUfRwQ（提取码: 9rgm）\nGoogle Drive：https://drive.google.com/drive/folders/10_GPfQY6EhF0ZhB6htrWnMg5j5jTUP9F\nBT：https://www.mediafire.com/folder/5cy04ztpfj6m8/deepin_20.3\n准备一个U盘或者是移动硬盘​    U盘不要太小，8G往上不然两个镜像进去都满了。这个时候我们要把镜像刻进去，这里我们有两种方式：ventoy 和 官方自带的“ 深度启动盘制作工具”。但是我推荐使用第一种，真的是神仙u盘启动工具。\n​    使用教程：**新一代多系统启动U盘 Ventoy 使用指南**\n​                 不用PE的PE，使用Ventoy安装系统\n​    这种网上搜多的很，这里不再多说。大致上你制作好启动盘之后就把上面下载好的镜像拖进去。\n电脑硬盘分区工具是 Diskgenius，免费的绝对够用。\n​    网搜分区教程： http://www.360doc.com/content/17/1031/18/47597997_699788438.shtml\n分出空余的硬盘空间，这里我推荐分出80GB。\n草写不下去了。看人家的文章去，比我写的好！\n\n链接在这：双系统下Deepin的安装和卸载(Deepin20.2+Win10)——超详细小白教程\n注意硬盘按这个分，尽量按照这个思路来就好：\n​    交换分区一般是根据你自己的内存来安排，比如说16GB分8G或者16GB\n\n进BIOS和Boot Manager并启动U盘​    笔记本按F2或者其他按键，这个对应的品牌在下面：\n\n\n\nIBM\n冷开机按*F1*，部分新型号可以在重新启动时启动按*F1*\n\n\n\nHP\n启动和重新启动时按*F2*\n\n\nSONY\n启动和重新启动时按*F2*\n\n\nDell\n启动和重新启动时按*F2*\n\n\nAcer\n启动和重新启动时按*F2*\n\n\nToshiba\n冷开机时按*ESC*然后按*F1*\n\n\nCompaq\n开机到右上角出现闪动光标时按*F10*，或者开机时按*F10*\n\n\nFujitsu\n启动和重新启动时按*F2*\n\n\n大多数国产和台湾品牌\n启动和重新启动时按*F2*\n\n\n台式机\n进入*bios* 开机时候请多按*del*键*,*就可以进入*bios*\n\n\n​    事实上有笔记本没有在bios中开启==按F12进入boot manager== 你需要在bios中开启，也很简单。\n笔记本电脑按F12进入启动项\n​    进入boot manager,在下面的Boot Option Menu找到USB,U盘启动项，回车进入ventoy！\n\n\n​    找到自己拖进去的那个deepin iso镜像 ，按下回车键。\n​    会进入这里面：\n\n​    选择第一个（这是我网上找的图！！）但是大致上都一样的。\n​    接下来deepin的话一步一步往下安装，分区要注意，别分错了==按照之前==我们在win里面分好的选，可以参考下面的教程很简单！\n注意：如果你的笔记本有nvidia显卡，请==不要勾选==安装引导程序的 “安装闭源nvidia驱动”\n​                                        后面我们可以打上你的显卡对应的驱动！！\nCSDN很多教程：\nhttps://www.jianshu.com/p/7551b04b3941\nhttps://www.deepin.org/zh/installation/\n默认deepin是grub引导的，很不好看我们后面可以使用refind美化\n我主要讲我自己遇到的问题如何在win下面隐藏LInux分区​    正常情况下打开winsows文件管理器是不能读deepin系统盘的，没有容量显示，这是因为在Windows下ext4格式默认无法读，你可以借助第三方工具如diskgenius,Ext2Read,Ext2Fsd进行访问。\n​    隐藏的话看下面的图片：使用DiskGenius，选择标红的那一项！！\n\n在Linux下隐藏win分区这个有两个办法：\n​    第一个方法: 按Ctrl和Alt和T，打开终端\n#查询分区UUID：lsblk -f#找到你要隐藏分区的UUID复制下来#新建：90-hide_parts.rulessudo nano /etc/udev/rules.d/90-hide_parts.rules #添加内容：ENV&#123;ID_FS_UUID&#125;==&quot;XXXX&quot;, ENV&#123;UDISKS_IGNORE&#125;=&quot;1&quot;把XXXX换成要隐藏的分区uuid，保存重启生效\n\n这里进入是GNU nano：使用快捷Ctrl+X编辑，然后会提示输入Y保存修改\n​    这里终端下面会有提示一些操作方式，配合快捷键来操作！！\n第二个方法:使用软件disk\n​    方法参考：在Deepin系统的深度文件管理器侧栏中只显示挂载Windows分区的方法\n\n使用gparted分区增加硬盘容量大致上你去 gparted  下载 ISO镜像 拖放到上面我们制作好的U盘，依旧是使用Ventoy启动选择这个下载好的镜像，回车。\n 最简单的Linux虚拟机磁盘扩容方法\n​    Ubuntu使用GParted扩充分区（全网最详细）\n​    使用GParted调整ubuntu根目录空间大小\n这里是虚拟机使用gparted,大同小异！\n​    但是这里要注意你扩容或者缩减的两个分区是要相邻的，不相邻要自己移动调整。\n​        调整空间大小是在上面左右拖动下面的图条！！！\n\n这里由于我已经改好了，没有拍图片但是操作也不难。\n\n使用引导工具引导双系统refind引导在深度系统打开终端：\n#安装refind，提示输入密码sudo apt install refind#输完密码一路yes,出现图新界面也选择&#x27;是&#x27;，回车\n\n打开deepin文件管理器进入系统盘    \n\n对boot目录右键使用管理员权限，就是==以管理员身份打开== ，输入密码\n进去之后打开 efi目录在打开EFI目录，找到refind 目录\n编辑refind.conf文件\n\n可以把里面的全部删掉\n#无任何操作就是等待10秒关闭引导界面启动第一启动项，默认第一启动项是windowstimeout 10#不允许扫描其他的启动文件，大致上就这些dont_scan_dirs EFI/ubuntu,EFI/Boot,EFI/Microsoft,EFI/deepin#这里如果你使用主题的话你需要加上这段代码#include themes/rEFInd-xxx/theme.conf#使用时去掉注释,将xxx换成主题名字 如下面include themes/rEFInd-glassy/theme.conf\n\nrefind配置文件有很多选项这里不再多说，你可以去github或者是百度找，可以改分辨率和默认启动系统等等：\n​    refind 0.10.3 配置文件refind.conf简单分析\n​    配置refind config以去除不必要的选项\n​    注意：这里不使用 scan_all_linux_kernel false  是因为我们在上面屏蔽了deepin和windows的启动项文件，但是在boot目录下面能找到启动deepin和windows的文件名为==XXXX-amd64-desktop==的内核文件，启动它们更方便！！！\n使用refind主题美化1.主题我推荐两款：rEFInd-minimal  和  rEFInd-glassy\n​    下载解压放到上面refind文件夹内的themes文件内\n​        文件路径为../renfind/themes/rEFInd-xxx/… ==不要搞错！！！==（ “xxx“为主题名字）\n2.重启deepin 或者使用命令 sudo reboot\n3.进入bios界面，找到Secure boot 关掉它，选项应该是disabled，然后把refind启动项调整到最前面即可。\n​    注意有些笔记本需要设置bios密码才能设置这些选项，设置一个==自己记得住==的！！！\n或者你使用软件easyuefi进入windows调整。\n​    【双系统】win10 和 Ubuntu18.04 启动引导项管理 EasyUEFI\n\n还是有些迷糊就去百度，太多文章了。这里就不再赘述。\n按esc,选择exit项，按F10保存关机重启进入refind启动项\n效果图：​    我使用的是glassy主题，当然你可以去换背景图，在主题目录里面把==background.png==改成自己的图，但是名字还是这个名字。（当然你也可以去theme.conf改）\n\n\n注意：这个界面里你可能看到很多启动项，那就是上面那个refind.conf没有配置好\n​    解决办法就是你看启动项下面的图标所在boot目录中的文件位置信息，然后在使用dont_scan_dirs和dont_scan_files屏蔽它们就好。\nxorboot UEFI引导​    这里xorboot 这个引导程序是国人开发的，但是我觉得没有上面那个好看，但是我还是要推荐一下！！！我这里就不再多写，看下面文章就好。\n​    **xorboot多系统引导图文教程**（这个教程写的很详细）\n​    XORBOOT UEFI工具制作双系统启动引导\n外接显示器安装nvidia驱动程序​    Deepin 20 外接显示器配置\n​    Deepin安装NVIDIA显卡驱动\n集显与独显切换笔记本外出时使用集显可以节省电量，增长待机时间，可以使用插件：dde-dock-switch_graphics_card，安装后可以方便地在dock栏切换显卡。\n\n总结​    这样以来我们的deepin系统就安装好了，应该没有多大问题，日常写字编码开发还够用的。\n对了这里推荐下载第三方应用商店 星火商店,可以安装第三方软件如：小飞机Ng,Clash X\n\n\n​                                        在Deepin 20系统中下载及安装星火应用商店的方法\n​        可能技术有限写的文章有些乱，但是这覆盖了大多数人的问题,希望能帮你解决这些问题。也在此感谢那些在网上提供教程的人，正是因为你们的开源分享精神才让deepin更加的完美！\n","categories":["文章"],"tags":["deepin"]},{"title":"BT种子/磁力链接下载工具：Aria2一键安装管理脚本","url":"/posts/53458/","content":"安装这里只提到了搭建后端，前端可以使用我自己搭建好的：https://www.moerats.com/Aria2/，或者可以参考：一个Aria2新的更好用的Web前端：AriaNg安装教程。\n系统要求：CentOS 7+、Debian 6+、Ubuntu 14.04+\n执行下面的代码下载并运行脚本：\nwget -N --no-check-certificate https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ToyoDAdoubiBackup&#x2F;doubi&#x2F;master&#x2F;aria2.sh &amp;&amp; chmod +x aria2.sh &amp;&amp; bash aria2.sh#备用地址wget -N --no-check-certificate https:&#x2F;&#x2F;www.moerats.com&#x2F;usr&#x2F;shell&#x2F;Aria2&#x2F;aria2.sh &amp;&amp; chmod +x aria2.sh &amp;&amp; bash aria2.sh\n\n运行脚本后会出现脚本操作菜单，选择并输入1就会开始安装。\n使用说明进入下载脚本的目录并运行脚本：\n.&#x2F;aria2.sh\n\n然后选择你要执行的选项即可。\nAria2 一键安装管理脚本 [vx.x.x]-- Toyo  doub.io&#x2F;shell-jc4 -- 0. 升级脚本————————————1. 安装 Aria22. 卸载 Aria2————————————3. 启动 Aria24. 停止 Aria25. 重启 Aria2————————————6. 修改 配置文件7. 查看 日志信息———————————— 当前状态: 已安装 并 已启动 请输入数字 [0-7]:\n\n其他操作启动：service aria2 start停止：service aria2 stop重启：service aria2 restart查看状态：service aria2 status配置文件：/root/.aria2/aria2.conf（配置文件包含中文注释，但是一些系统可能不支持显示中文）下载目录：/usr/local/caddy/www/aria2/Download（该目录为Github下载安装的，而备用地址下载的默认为/usr/local/caddy/www/file）\n\n\n版权声明：本文为原创文章，版权归 Rat’s Blog 所有，转载请注明出处！\n本文链接：https://www.moerats.com/archives/251/\n\n","categories":["转载"],"tags":["aria2"]},{"title":"宝塔面板安装TCShare – 一款天翼云目录列表程序可以实现天翼云直链解析","url":"/posts/50649/","content":"由于某些原因我将不在提供任何AK SK信息，抱歉！！！！[toc]\n前言TCShare这个程序是天翼云API目录列表程序，这盘文章说说如何利用宝塔面板来部署TCShare。\n项目地址:\n参考我的安装环境: 宝塔面板 /Nginx1.16/PHP7.3，你也可以用自己的。可能也行吧?\n开始1.新建站点?\n找到配置文件把一下代码填入,可以解决列网盘图片 404??的问题\nlocation ~ .*\\.(gifjpgjpegpngbmpswf)$    &#123;        expires      30d;       error_log off;        access_log off;    &#125;\n\n2.在“网站设置”→“伪静态”中设置好伪静态，代码如下：\ntry_files $uri $uri&#x2F; &#x2F;index.php$is_args$args;location ~ &#x2F;\\.env &#123;    deny all;&#125;\n\n3.使用宝塔上传程序到网站根目录\n或者使用git命令和其他命令例如:\ncd &#x2F;www&#x2F;wwwroot&#x2F;yun.gitiu.comgit clone https:&#x2F;&#x2F;github.com&#x2F;xytoki&#x2F;TCShare.gitmv TCShare&#x2F;* .&#x2F;rm -rf TCShare\n\n4.最重要的一步进入网站根目录，新建一个空白文件，命名为.env，填入一下代码\nXS 是前缀#    -KEY 是配置种类，可选KEY，APP，SEC#     - -ct是key的ID（类似config.php）#     -  - something是配置名称#     -  -  - - - - value在等号右边#   XS_KEY_ct_something&#x3D;value    XS_KEY_ct&#x3D;ctyun   #必填，值为ctyun    XS_KEY_ct_FD&#x3D;     #应用文件夹名    XS_KEY_ct_AK&#x3D;     #AK    XS_KEY_ct_SK&#x3D;     #SK#   这里APP后面的可以是任意值，一般就123456下去#          ↓    XS_APP_1&#x3D;&#x2F;              #挂载路径    XS_APP_1_NAME&#x3D;TCShare   #网盘名称    XS_APP_1_THEME&#x3D;mdui     #界面主题    XS_APP_1_BASE&#x3D;&#x2F;         #网盘内路径    XS_APP_1_KEY&#x3D;ct         #对应上面Key的ID\n\n5.到软件商店里找到你下载的 PHP ，点击设置找到禁用函数，移除 putenv。不移除可能安装不了composer，?切换到程序目录?，然后执行composer install。注意国内的源可以切换到阿里的?。\ncomposer config repo.packagist composer https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;composer&#x2F;\n\n6.访问域名，点击 Click here to get a token。跳转登录，获取授权。\n7.，登录 天翼云盘 APP，在 我的应用 目录创建 safebox。可以把自己想分享的文件移动过来。\n8.访问域名即可看到文件list??\n重要提示??请每个月手动为每个网盘的token续期。如，你的网盘安装在http://tcshare.website/，你需要每个月访问一次http://tcshare.website/-renew。可以在宝塔的计划任务设置一下每月定时访问 /-renew ，以延长 token 的有效期。\n可能你有多个天翼账号想加多块盘的在之前的.env配置中加入一下代码，需要自己修改一些相关的内容\nXS_KEY_ct2&#x3D;ctyun   #必填，值为ctyunXS_KEY_ct2_FD&#x3D;     #应用文件夹名XS_KEY_ct2_AK&#x3D;     #AKXS_KEY_ct2_SK&#x3D;     #SK XS_APP_2&#x3D;&#x2F;disk2         #挂载路径XS_APP_2_NAME&#x3D;TCSecond  #网盘名称XS_APP_2_THEME&#x3D;mdui     #界面主题XS_APP_2_BASE&#x3D;&#x2F;         #网盘内路径XS_APP_2_KEY&#x3D;ct2        #对应上面Key的ID\n\n这里我们将第二个网盘挂载到/disk2，但是你只能通过/disk2访问。一个小技巧?是：在第一个网盘里新建一个disk2文件夹，就能点击进入了，以此类推，第三块第四块……\n注意：????除非你知道自己在做什么，不要把两个网盘或者多个网盘挂载到相同路径。\n多盘用户可根据挂载路径进行授权，续期token。比如授权访问http://tcshare.website/disk2/（改为你的域名就行，注意后面的路径不要忘记），续期也是一样在后面加入/-renew\n最后?关于AK SK FD天翼云盘已经关闭api开发者申请，目前能用的没有几个。而且极有可能后期api失效，感觉也是必然如果,实在有困难可以给我私密留言获取！！\n由于某些原因我将不在提供任何AK SK信息，抱歉！！！！","categories":["分享"],"tags":["TCShare","天翼云盘目录列表","程序"]},{"title":"宝塔面板搭建YOURLS(yourls)-私人短链接地址服务","url":"/posts/50773/","content":"1.前言其实很早之前我就发现了**YOURLS**，遗憾的是由于英文的干扰，迫使我很难有行动下去的动力。这阵子有点时间，遂就随手搭建了一下。\n官方文档：https://yourls.org\n项目：\n1.1什么是YOURLS？YOURLS stands for Your Own URL Shortener. It is a small set of PHP scripts that will allow you to run your own URL shortening service (a la TinyURL or Bitly).\nRunning your own URL shortener is fun, geeky and useful: you own your data and don’t depend on third-party services. It’s also a great way to add branding to your short URLs, instead of using the same public URL shortener everyone uses.\n大概意思就是说YOURLS，这个基于PHP开发的短链接服务，适用于私有，且不依赖第三方公共短链接生成。你只需要有一定的耐心和一个短域名，就可以感受到短链接生成的乐趣。\n1.2特点\n  免费而且开源\n  使用具有两面性：私有的（仅自己使用）或者生成公共的（每个人都可以创建短链接，适用于Intranet）\n  顺序排列(从1到n)或自定义URL关键字\n  十分方便的类书签模式记录，可轻松缩短和共享链接\n  出色的统计信息：历史点击报告，引荐来源跟踪，访问者地理位置\n  整洁的Ajaxed界面\n  出色的插件架构，可轻松实现新功能\n  支持开发人员API\n  全面的jsonp支持\n  安装十分友好\n  示例文件可创建您自己的公共界面等\n\n2.安装(这里以Centos7为例)环境说明：\n\n 至少PHP 5.6  如果要使用api  还需要有curl拓展，推荐7.2-7.3\n 至少MYSQL 5，推荐5.6\n\n2.1宝塔面板安装Centos安装脚本:\nyum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh\n然后登录宝塔面板，默认安装稍微改一下，按照上面的环境来！！！这里不多说。\n2.2新建站点主要就是填写你的域名，再设置添加一个mysql数据库\n\n2.3伪静态这一步重写路由，就是Rewrites（我这里是nginx）\n添加一下代码：\nlocation &#x2F; &#123;  try_files $uri $uri&#x2F; &#x2F;yourls-loader.php$is_args$args;&#125;\n\n\n倘若是 apache(1)配置里开启  mod_rewrite 模块\n(2)创建 .htaccess  文件（这里注意分安装路径）\n#.htaccess 文件内容，如果是根目录下  http:&#x2F;&#x2F;yoursite&#x2F; # BEGIN YOURLS&lt;IfModule mod_rewrite.c&gt;RewriteEngine OnRewriteBase &#x2F;RewriteCond %&#123;REQUEST_FILENAME&#125; !-fRewriteCond %&#123;REQUEST_FILENAME&#125; !-dRewriteRule ^.*$ &#x2F;yourls-loader.php [L]&lt;&#x2F;IfModule&gt;# END YOURLS#如果是二级目录下 http:&#x2F;&#x2F;yoursite&#x2F;somedir&#x2F;# BEGIN YOURLS&lt;IfModule mod_rewrite.c&gt;RewriteEngine OnRewriteBase &#x2F;somedir&#x2F;RewriteCond %&#123;REQUEST_FILENAME&#125; !-fRewriteCond %&#123;REQUEST_FILENAME&#125; !-dRewriteRule ^.*$ &#x2F;somedir&#x2F;yourls-loader.php [L]&lt;&#x2F;IfModule&gt;# END YOURLS\n\n2.4安装YOURLScd 你创建的根目录地址 如：&#x2F;www&#x2F;wwwroot&#x2F;XXXwget https:&#x2F;&#x2F;github.com&#x2F;YOURLS&#x2F;YOURLS&#x2F;archive&#x2F;1.7.6.tar.gztar -xvf YOURLS-1.7.6.tar.gz\n\n或者直接下载上传，解压。\n下载地址：\nhttps://github.com/YOURLS/YOURLS/releases\n2.4.1将user目录下的config-sample.php 重命名 为 config.php\n2.4.2修改config.php里面的配置参数\n以我这里的注释为例：\ndefine( &#39;YOURLS_DB_USER&#39;, &#39;数据库用户名&#39; );define( &#39;YOURLS_DB_PASS&#39;, &#39;数据库密码&#39; );define( &#39;YOURLS_DB_NAME&#39;, &#39;数据库名字&#39; );define( &#39;YOURLS_DB_HOST&#39;, &#39;localhost&#39; );define( &#39;YOURLS_DB_PREFIX&#39;, &#39;yourls_&#39; );&#x2F;&#x2F;上面是数据信息不用多说define( &#39;YOURLS_SITE&#39;, &#39;http:&#x2F;&#x2F;&#39; ); &#x2F;&#x2F;你自己服务器的域名 用最短的，短地址也是基于这个生成。define( &#39;YOURLS_HOURS_OFFSET&#39;, &#39;+8&#39;); 　　　&#x2F;&#x2F;时区偏移　define( &#39;YOURLS_LANG&#39;, &#39;&#39; ); 　　　　　&#x2F;&#x2F;这个语言默认是英文define( &#39;YOURLS_UNIQUE_URLS&#39;, true );　　　&#x2F;&#x2F;短地址是否唯一　define( &#39;YOURLS_PRIVATE&#39;, true );         &#x2F;&#x2F;是否私有，如果私有的，则进行api调用生成短地址时需要传递用户名和密码define( &#39;YOURLS_COOKIEKEY&#39;, &#39;A2C7&amp;H~r80pTps&#123;nIfI8VFpTxnfF3c)j@J#&#123;nDUh&#39; );&#x2F;&#x2F;加密cookie 去 http:&#x2F;&#x2F;yourls.org&#x2F;cookie 获取$yourls_user_passwords &#x3D; array(    &#39;admin&#39; &#x3D;&gt; &#39;123456&#39; &#x2F;* Password encrypted by YOURLS *&#x2F; ,  &#x2F;&#x2F;用户名&#x3D;&gt;密码  可填多个  登录成功后这里的明文密码会被加密，这里默认是没有的，我们为了安全加上一个，如我这里是用户名是admin，密码是123456    );define( &#39;YOURLS_DEBUG&#39;, false );　　　　　　&#x2F;&#x2F;是否开启调试　　define( &#39;YOURLS_URL_CONVERT&#39;, 62 );　　　　&#x2F;&#x2F;使用36进制 还是62进制  这个最好一开始设好不要修改，避免地址冲突，建议62进制$yourls_reserved_URL &#x3D; array(    &#39;porn&#39;, &#39;faggot&#39;, &#39;sex&#39;, &#39;nigger&#39;, &#39;fuck&#39;, &#39;cunt&#39;, &#39;dick&#39;,  &#x2F;&#x2F;排除一下短地址，这些地址是不会生成的);\n\n2.4.3添加中文语言包\n遗憾的是语言包停止更新了，现适用于此时的最新版本(1.7.3)。不过在1.7.6版本也能用。不知道作者后续会不会进行更新，可以关注一下。\n解压完毕上传到 user/languages 里面。\n3.访问浏览器 输入 http://域名/admin，然后选择安装即可安装成功。\n\n\n\n4.最后你可能遇到一些问题:\n4.1如果安装报错，或者不跳转，那有可能是你的php 或者 mysql 版本过低\n4.2.短链接后面从1开始，很不爽，可以推荐用时间戳来生成\n只需要修改 includes/functions.php  272行左右\n将 $id = yourls_get_next_decimal(); 改为 $id = time();\n\n4.3.一些YOURLS的拓展\n\n你可以使用官方自带的插件库：\nhttps://github.com/YOURLS/awesome-yourls#plugins\n多的吓人！！！从0-9到A-Z排列.\n4.4.api接口生成   \n可以参考\nhttps://yourls.org/#API\n请求地址：http://域名//yourls-api.php\n参数：username(用户名)、password（密码）、format（格式 json）、url（长地址）、action（功能，shorturl）\n返回（示例）：\n&#123;  &quot;url&quot;: &#123;    &quot;keyword&quot;: &quot;ozh&quot;,    &quot;url&quot;: &quot;http:\\&#x2F;\\&#x2F;ozh.org&quot;,    &quot;title&quot;: &quot;Ozh RICHARD \\u00ab ozh.org&quot;,    &quot;date&quot;: &quot;2014-10-24 16:01:39&quot;,    &quot;ip&quot;: &quot;127.0.0.1&quot;  &#125;,  &quot;status&quot;: &quot;success&quot;,  &quot;message&quot;: &quot;http:\\&#x2F;\\&#x2F;ozh.org added to database&quot;,  &quot;title&quot;: &quot;Ozh RICHARD \\u00ab ozh.org&quot;,  &quot;shorturl&quot;: &quot;http:\\&#x2F;\\&#x2F;sho.rt\\&#x2F;1f&quot;,  &quot;statusCode&quot;: 200&#125;\n\n上面的  shorturl 就是生成的短链接，也可以在后台直接生成指定的短链接。\n4.5.查看统计某个链接的点击情况\n可以在生成的每个短链接后面加上一个 +\n如：http://你的域名/j7fk2+ 进行访问\n\n","categories":["文章"],"tags":["YOURLS","短链接服务"]},{"title":"多种功能强大的BT离线下载程序Docker镜像及安装","url":"/posts/44574/","content":"安装Docker首先安装下面程序之前，需要在服务器上安装Docker环境，使用命令：\n#CentOS 6系统rpm -iUvh http:&#x2F;&#x2F;dl.fedoraproject.org&#x2F;pub&#x2F;epel&#x2F;6&#x2F;x86_64&#x2F;epel-release-6-8.noarch.rpmyum update -yyum -y install docker-ioservice docker startchkconfig docker on#CentOS 7、Debian、Ubuntu系统curl -sSL https:&#x2F;&#x2F;get.docker.com&#x2F;  shsystemctl start dockersystemctl enable docker\n\n安装Aria2镜像来源：https://hub.docker.com/r/onisuly/aria2-with-webui\n先安装Docker，然后执行以下命令：\ndocker run --restart&#x3D;always --name aria2-ariang -d \\-p 6060:80 \\-p 6800:6800 \\-e SECRET&#x3D;moerats \\-v ~&#x2F;aria2&#x2F;down:&#x2F;data \\-v ~&#x2F;aria2&#x2F;conf:&#x2F;conf \\onisuly&#x2F;aria2-with-webui\n\n安装完成后，相关信息如下：\nAriaNg地址：http:&#x2F;&#x2F;ip:6060aria2连接端口：6800aria2连接密匙：moerats下载&#x2F;配置目录：~&#x2F;aria2\n\nCentOS系统安装后，可能还需要开启相应的端口，大致如下：\n#CentOS 6iptables -I INPUT -p tcp --dport 6060 -j ACCEPTiptables -A INPUT -p tcp --dport 6800 -j ACCEPTservice iptables saveservice iptables restart#CentOS 7firewall-cmd --zone&#x3D;public --add-port&#x3D;6060&#x2F;tcp --permanentfirewall-cmd --zone&#x3D;public --add-port&#x3D;6800&#x2F;tcp --permanentfirewall-cmd --reload\n\n如果你不想用了，可以使用以下命令卸载：\n#删掉容器ContainerID&#x3D;&#96;docker psgrep onisuly&#x2F;aria2-with-webuiawk &#39;&#123;print $1&#125;&#39;&#96;docker kill $&#123;ContainerID&#125;docker rm $&#123;ContainerID&#125;docker rmi &#96;docker imagesgrep onisuly&#x2F;aria2-with-webuiawk &#39;&#123;print $3&#125;&#39;&#96;#删掉下载文件夹rm -rf ~&#x2F;aria2\n\n安装utorrent镜像来源：https://hub.docker.com/r/ekho/utorrent\n先安装Docker，然后执行以下命令：\ndocker run --restart&#x3D;always --name utorrent -d \\-p 8080:8080 \\-p 6881:6881 \\-v ~&#x2F;utorrent:&#x2F;utorrent&#x2F;data \\ekho&#x2F;utorrent\n\n安装完成后，相关信息如下：\nutorrent地址：http:&#x2F;&#x2F;ip:8080&#x2F;gui访问用户名：admin访问密码：为空下载目录：~&#x2F;utorrent\n\nCentOS系统安装后，可能还需要开启相应的端口，大致如下：\n#CentOS 6iptables -I INPUT -p tcp --dport 8080 -j ACCEPTiptables -A INPUT -p tcp --dport 6881 -j ACCEPTservice iptables saveservice iptables restart#CentOS 7firewall-cmd --zone&#x3D;public --add-port&#x3D;8080&#x2F;tcp --permanentfirewall-cmd --zone&#x3D;public --add-port&#x3D;6881&#x2F;tcp --permanentfirewall-cmd --reload\n\n如果你不想用了，可以使用以下命令卸载：\n#删掉容器ContainerID&#x3D;&#96;docker psgrep ekho&#x2F;utorrentawk &#39;&#123;print $1&#125;&#39;&#96;docker kill $&#123;ContainerID&#125;docker rm $&#123;ContainerID&#125;docker rmi &#96;docker imagesgrep ekho&#x2F;utorrentawk &#39;&#123;print $3&#125;&#39;&#96;#删掉下载文件夹rm -rf ~&#x2F;utorrent\n\n安装Deluge镜像来源：https://hub.docker.com/r/linuxserver/deluge\n先安装Docker，然后执行以下命令：\ndocker run --restart&#x3D;always --name deluge -d \\--net&#x3D;host \\-v ~&#x2F;deluge&#x2F;config:&#x2F;config \\-v ~&#x2F;deluge&#x2F;downloads:&#x2F;downloads \\linuxserver&#x2F;deluge\n\n安装完成后，相关信息如下：\ndeluge地址：http:&#x2F;&#x2F;ip:8112访问密码：deluge配置&#x2F;下载目录：~&#x2F;deluge\n\nCentOS系统安装后，可能还需要开启相应的端口，大致如下：\n#CentOS 6iptables -I INPUT -p tcp --dport 8112 -j ACCEPTservice iptables saveservice iptables restart#CentOS 7firewall-cmd --zone&#x3D;public --add-port&#x3D;8112&#x2F;tcp --permanentfirewall-cmd --reload\n\n进入界面后，记得点击上方的Preferences，将下载目录设置为/downloads。\n如果你不想用了，可以使用以下命令卸载：\n#删掉容器ContainerID&#x3D;&#96;docker psgrep linuxserver&#x2F;delugeawk &#39;&#123;print $1&#125;&#39;&#96;docker kill $&#123;ContainerID&#125;docker rm $&#123;ContainerID&#125;docker rmi &#96;docker imagesgrep linuxserver&#x2F;delugeawk &#39;&#123;print $3&#125;&#39;&#96;#删掉下载文件夹rm -rf ~&#x2F;deluge\n\n安装Transmission镜像来源：https://hub.docker.com/r/linuxserver/transmission\n先安装Docker，然后执行以下命令：\ndocker run --restart&#x3D;always --name transmission -d \\-e TRANSMISSION_WEB_HOME&#x3D;&#x2F;transmission-web-control&#x2F; \\-e USER&#x3D;moerats \\-e PASS&#x3D;moerats \\-p 9091:9091 \\-p 51413:51413 \\-p 51413:51413&#x2F;udp \\-v ~&#x2F;transmission&#x2F;config:&#x2F;config \\-v ~&#x2F;transmission&#x2F;downloads:&#x2F;downloads \\-v ~&#x2F;transmission&#x2F;watch:&#x2F;watch \\linuxserver&#x2F;transmission\n\n安装完成后，相关信息如下：\ntransmission地址：http:&#x2F;&#x2F;ip:9091访问用户名：moerats访问密码：moerats配置&#x2F;下载目录：~&#x2F;transmission\n\nCentOS系统安装后，可能还需要开启相应的端口，大致如下：\n#CentOS 6iptables -I INPUT -p tcp --dport 9091 -j ACCEPTiptables -A INPUT -p tcp --dport 51413 -j ACCEPTiptables -A INPUT -p udp --dport 51413 -j ACCEPTservice iptables saveservice iptables restart#CentOS 7firewall-cmd --zone&#x3D;public --add-port&#x3D;9091&#x2F;tcp --permanentfirewall-cmd --zone&#x3D;public --add-port&#x3D;51413&#x2F;tcp --permanentfirewall-cmd --zone&#x3D;public --add-port&#x3D;51413&#x2F;udp --permanentfirewall-cmd --reload\n\n如果你不想用了，可以使用以下命令卸载：\n#删掉容器ContainerID&#x3D;&#96;docker psgrep linuxserver&#x2F;transmissionawk &#39;&#123;print $1&#125;&#39;&#96;docker kill $&#123;ContainerID&#125;docker rm $&#123;ContainerID&#125;docker rmi &#96;docker imagesgrep linuxserver&#x2F;transmissionawk &#39;&#123;print $3&#125;&#39;&#96;#删掉下载文件夹rm -rf ~&#x2F;transmission\n\n安装Rutorrent镜像来源：https://hub.docker.com/r/linuxserver/rutorrent\n先安装Docker，然后执行以下命令：\ndocker run --restart&#x3D;always --name rutorrent -d \\-p 2222:80 \\-p 5000:5000 \\-p 51413:51413 \\-p 6881:6881&#x2F;udp \\-v ~&#x2F;rutorrent&#x2F;config:&#x2F;config \\-v ~&#x2F;rutorrent&#x2F;downloads:&#x2F;downloads \\linuxserver&#x2F;rutorrent\n\n安装完成后，相关信息如下：\nrutorrent地址：http:&#x2F;&#x2F;ip:2222配置&#x2F;下载目录：~&#x2F;rutorrent\n\nCentOS系统安装后，可能还需要开启相应的端口，大致如下：\n#CentOS 6iptables -I INPUT -p tcp --dport 2222 -j ACCEPTiptables -A INPUT -p tcp --dport 5000 -j ACCEPTiptables -A INPUT -p tcp --dport 51413 -j ACCEPTiptables -A INPUT -p udp --dport 6881 -j ACCEPTservice iptables saveservice iptables restart#CentOS 7firewall-cmd --zone&#x3D;public --add-port&#x3D;2222&#x2F;tcp --permanentfirewall-cmd --zone&#x3D;public --add-port&#x3D;5000&#x2F;tcp --permanentfirewall-cmd --zone&#x3D;public --add-port&#x3D;51413&#x2F;tcp --permanentfirewall-cmd --zone&#x3D;public --add-port&#x3D;6881&#x2F;udp --permanentfirewall-cmd --reload\n\n如果你不想用了，可以使用以下命令卸载：\n#删掉容器ContainerID&#x3D;&#96;docker psgrep linuxserver&#x2F;rutorrentawk &#39;&#123;print $1&#125;&#39;&#96;docker kill $&#123;ContainerID&#125;docker rm $&#123;ContainerID&#125;docker rmi &#96;docker imagesgrep linuxserver&#x2F;rutorrentawk &#39;&#123;print $3&#125;&#39;&#96;#删掉下载文件夹rm -rf ~&#x2F;rutorrent\n\n安装Qbittorrent镜像来源：https://hub.docker.com/r/linuxserver/qbittorrent\n先安装Docker，然后执行以下命令：\ndocker run --restart&#x3D;always --name qbittorrent -d \\-p 6881:6881 \\-p 6881:6881&#x2F;udp \\-p 8080:8080 \\-v ~&#x2F;qbittorrent&#x2F;config:&#x2F;config \\-v ~&#x2F;qbittorrent&#x2F;downloads:&#x2F;downloads \\linuxserver&#x2F;qbittorrent\n\n安装完成后，相关信息如下：\nqbittorrent地址：http:&#x2F;&#x2F;ip:6666用户名：admin密码：adminadmin配置和&#x2F;下载目录：~&#x2F;qbittorrent\n\nCentOS系统安装后，可能还需要开启相应的端口，大致如下：\n#CentOS 6iptables -I INPUT -p tcp --dport 8080 -j ACCEPTiptables -A INPUT -p tcp --dport 6881 -j ACCEPTiptables -A INPUT -p udp --dport 6881 -j ACCEPTservice iptables saveservice iptables restart#CentOS 7firewall-cmd --zone&#x3D;public --add-port&#x3D;8080&#x2F;tcp --permanentfirewall-cmd --zone&#x3D;public --add-port&#x3D;6881&#x2F;tcp --permanentfirewall-cmd --zone&#x3D;public --add-port&#x3D;6881&#x2F;udp --permanentfirewall-cmd --reload\n\n如果你不想用了，可以使用以下命令卸载：\n#删掉容器ContainerID&#x3D;&#96;docker psgrep linuxserver&#x2F;qbittorrentawk &#39;&#123;print $1&#125;&#39;&#96;docker kill $&#123;ContainerID&#125;docker rm $&#123;ContainerID&#125;docker rmi &#96;docker imagesgrep linuxserver&#x2F;qbittorrentawk &#39;&#123;print $3&#125;&#39;&#96;#删掉下载文件夹rm -rf ~&#x2F;qbittorrent\n\n这里顺便推荐个磁力链接聚合搜索magnetW，有兴趣的可以下载Windows/Mac端应用程序，下载地址→传送门。\n最后这里只列举简单的安装，更深层次的可以访问镜像地址使用，如果还有其它好用没有列举的，可以留言提下。\n\n\n本文链接：https://www.moerats.com/archives/1015/\n\n","categories":["转载"],"tags":["BT离线下载、","Docker镜像"]},{"title":"解决宝塔面板安装php拓展失败的问题","url":"/posts/46585/","content":"[toc]\n前言作为一个只有一点基础，甚至没有基础的Linux初学者来说使用宝塔面板无疑是一个更好的选择，方便实施管理预览，安装一些常用的软件环境，部署一些项目快速，当然缺点还是有的，比如说对小内存机器不友好，不去设置后台甚至不安全，但是总的来说，使用起来还是很稳定。\n问题其中我们对于安装php拓展时会遇到编译出错，运行日志报错，这甚至十分常见。\n比如说安装fileinfo， exif ，imagemagick， memcached 等等\n\n\n可能会去多安装几次，但是显示成功实际上并未安装成功。\n\n思考解决多半是编译环境有问题，比如说安装 memcached 时，可能就是服务器编译器的问题，你可以试试这些代码\nyum -y install gcc-c++yum -y install glibc-headersyum -y install m4yum -y install autoconf\n\n这时多半就会解决问题\n\n\n也可以通过phpinfo查看\n\n","categories":["文章"],"tags":["btpanel","memcached安装失败","php拓展","宝塔面板"]},{"title":"最新CloudreveV3以及Go语言安装教程","url":"/posts/51310/","content":"\nCloudreve 是个公有网盘程序，你可以用它快速搭建起自己的网盘服务，公有云/私有云都可。作者用了六个月的时间，把 Cloudreve 用 Go 语言重构了一遍，除了修复 V2 版本被诟病很多的 Bug 外，还增加了很多令人兴奋的新特性：\n\n\n\n  支持本机、从机、七牛、阿里云 OSS、腾讯云 COS、又拍云、OneDrive (包括世纪互联版) 作为存储端\n  上传/下载 支持客户端直传，支持下载限速\n  可对接 Aria2 离线下载（支持所有存储策略，下载完成后自动中转）\n  在线 压缩/解压缩、多文件打包下载（支持所有存储策略）\n  覆盖全部存储策略的 WebDAV 协议支持\n  拖拽上传、目录上传、流式上传处理\n  文件拖拽管理\n  多用户、用户组\n  创建文件、目录的分享链接，可设定自动过期\n  视频、图像、音频、文本、Office 文档在线预览\n  自定义配色、黑暗模式、PWA 应用、全站单页应用\n  All-In-One 打包，开箱即用\n\n这篇文章就来尝鲜这个最新go版本的Cloudreve，老规矩还是用宝塔面板来部署。\n具体的安装和部署\n\n1、前言\n  官网：https://cloudreve.org/\n  下载：https://github.com/cloudreve/Cloudreve/releases\n  安装文档：https://docs.cloudreve.org/getting-started/install\n  演示：https://demo.cloudreve.org\n\n2、准备安装之前你需要准备好环境：\n\n 宝塔面板安装好\n nginx安装好\n mysql安装好\n 域名准备一个\n 新建网站\n\n3、安装go语言环境安装 ：安装环境：CentOS Linux 7.6、宝塔面板6.9.3、golang：go1.12.5.linux-amd64.tar.gz\n这篇文章就来水一下如何在宝塔面板Linux环境下安装Go语言环境和程序的如何运行。\n一：简介下载之前先去官网溜达下，点击【download go】就可进入下载页面：\n\n官网：https://golang.google.cn/\n下载：https://dl.google.com/go/go1.12.5.linux-amd64.tar.gz\n\n根据自己的系统环境下载相应的版本，这里选择的是go1.12.5.linux-amd64.tar.gz。\n二：下载安装宝塔面板可以直接在面板里面下载安装，这里为了方便，直接就在命令环境下面下载安装配置了。\n2.1下载\nSSH工具连接服务器开始操作：\ncd &#x2F;www&#x2F;server &amp;&amp; wget -O golang.tar.gz https:&#x2F;&#x2F;dl.google.com&#x2F;go&#x2F;go1.12.5.linux-amd64.tar.gz\n\n这些可以直接在面板环境里操作，也很方便。\n\n2.2解压\n下载好之后解压：\nar -xzvf golang.tar.gz\n\n2.3添加环境变量\n添加环境变量，使用vim 打开/etc/profile 文件。\nvim &#x2F;etc&#x2F;profile\n\n在profile 最底部添加：\nexport GOROOT&#x3D;&#x2F;www&#x2F;server&#x2F;goexport GOBIN&#x3D;$GOROOT&#x2F;binexport GOPKG&#x3D;$GOROOT&#x2F;pkg&#x2F;tool&#x2F;linux_amd64export GOARCH&#x3D;amd64export GOOS&#x3D;linuxexport GOPATH&#x3D;&#x2F;www&#x2F;wwwroot&#x2F;Golangexport PATH&#x3D;$PATH:$GOBIN:$GOPKG:$GOPATH&#x2F;bin\n\n丢一张图：\n\n添加好之后，保存退出，然后执行如下命令使其生效：\nsource &#x2F;etc&#x2F;profile\n\n2.4测试是否生效\n使用如下命令来测试Go语言环境是否安装成功。\ngo version\n\n丢一张图：\n\n图上所示，我们已经安装成功了。\n三：创建GOROOT目录使用如下命令来创建，不过我们可以用面板环境来可视化操作：\nmkdir &#x2F;www&#x2F;wwwroot&#x2F;Golang\n\n丢一张图看看：\n\n以上就完全安装好go了，因为是宝塔面板的环境以上所以操作都可直接在面板里操作。\n四：go run我们可以测试一段代码来验证go语言的运行。我们到Golang里面新建一个文件命名为test.go\ntouch test.go\n\n之后用vi简单编辑下，也可以直接到宝塔面板里新建编辑：\nvi test.go\n\n复制一段代码进去：\npackage main import &quot;fmt&quot; func main() &#123;   &#x2F;* 这是我的第一个简单的程序 *&#x2F;   fmt.Println(&quot;Hello, 大鸟博客!&quot;)&#125;\n\n丢一张图看看：\n\n代码保存好之后，我们执行 Go 程序，如何执行呢，打开命令行，并进入程序文件保存的目录中。\ngo run test.go\n\n我们看图：\n\n成功执行了这一段代码，输出了“hello，大鸟博客！”\n第二种快速安装方法：环境：centos7\n1.下载安装包，选择如下版本Linux 2.6.23 or later, Intel 64-bit processor\nwget https:&#x2F;&#x2F;dl.google.com&#x2F;go&#x2F;go1.12.5.linux-amd64.tar.gz\n\n2.校验官网给出的SHA256 Checksum是 aea86e3c73495f205929cfebba0d63f1382c8ac59be081b6351681415f4063cf\n自己校验看看是否正确\nsha256sum go1.12.5.linux-amd64.tar.gz\n\n3.解压安装包\nsudo tar -C &#x2F;usr&#x2F;local -xzf  go1.12.5.linux-amd64.tar.gz\n\n4.添加环境变量\n编辑~/.bash_profile文件\nvim ~&#x2F;.bash_profile\n\n添加\nexport PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;go&#x2F;bin\n\n加载新的环境变量\nsource ~&#x2F;.bash_profile\n\n5.测试安装结果\nmkdir -p ~&#x2F;go&#x2F;src&#x2F;hello#编辑文件hello.govim ~&#x2F;go&#x2F;src&#x2F;hello&#x2F;hello.go\n\n添加\npackage mainimport &quot;fmt&quot;func main() &#123;   fmt.Printf(&quot;Hello, World\\n&quot;)&#125;\n\n构建hello.go文件\ncd ~&#x2F;go&#x2F;src&#x2F;hellogo build\n\n运行测试\n.&#x2F;hello\n\n如果有输出Hello, World表示Go安装成功。\n五：总结整个环境的安装和简单的测试运行代码就说完了，希望对想学习Go语言的同学能有一点帮助。\nGo 是一个开源的编程语言，它能让构造简单、可靠且高效的软件变得容易。\nGo是从2007年末由Robert Griesemer, Rob Pike, Ken Thompson主持开发，后来还加入了Ian Lance Taylor, Russ Cox等人，并最终于2009年11月开源，在2012年早些时候发布了Go 1稳定版本。现在Go的开发已经是完全开放的，并且拥有一个活跃的社区。\nGo 语言特色\n\n  简洁、快速、安全\n  并行、有趣、开源\n  内存管理、数组安全、编译迅速\n\nGo 语言用途\n\n Go 语言被设计成一门应用于搭载 Web 服务器，存储集群或类似用途的巨型中央服务器的系统编程语言。\n 对于高性能分布式系统领域而言，Go 语言无疑比大多数其它语言有着更高的开发效率。它提供了海量并行的支持，这对于游戏服务端的开发而言是再好不过了。\n\n安装Cloudreve，安装命令如下：cd &#x2F;optwget https:&#x2F;&#x2F;github.com&#x2F;cloudreve&#x2F;Cloudreve&#x2F;releases&#x2F;download&#x2F;3.0.0-rc1&#x2F;cloudreve_3.0.0-rc1_linux_amd64.tar.gztar -zxvf cloudreve_3.0.0-rc1_linux_amd64.tar.gz   #解压获取到的主程序chmod +x .&#x2F;cloudreve  #赋予执行权限.&#x2F;cloudreve   #启动 Cloudreve\n\n分别复制命令回车执行，安装成功截图如下：\n\nCloudreve 在首次启动时，会创建初始管理员账号，请注意保管管理员密码，此密码只会在首次启动时出现。如果您忘记初始管理员密码，需要删除同级目录下的“cloudreve.db”，重新启动主程序以初始化新的管理员账户。\nCloudreve 默认会监听“5212”端口。你可以在浏览器中访问“http://服务器IP:5212”进入 Cloudreve。如果宝塔面板需要在安全中放行“5212”端口。注意用默认的管理账号和密码登录。\n4、进程守护以上步骤操作完后，最简单的部署就完成了。你可能需要一些更为具体的配置，才能让Cloudreve更好的工作，宝塔面板我们可以使用Supervisor管理器来设置进程守护，具体流程请参考下面的配置流程。\n4.1 安装Supervisor管理器软件商店→系统工具 ，找到Supervisor管理器安装即可。\n\n4.2 添加守护进程打开Supervisor管理器添加守护进程，看图：\n\n注意：路径修改为自己的。添加完成后，守护进程就会启动成功，如图：\n\n注意：设置守护进程之前，请先停止掉命令模式。\n5、域名访问新建网站，之后在网站设置中，配置反向daili，如图：\n\n6、效果展示现在就可以用域名打开Cloudreve 访问了：\n\n管理面板：\n支持的存储策略：\n添加oneindex存储策略时详细的引导：\n创建WebDAV：\n注意：目前 V3 仍处于 RC 版本阶段，V2版本的升级措施会随着正式版一起发布。\n7、一些细节首次启动时，Cloudreve 会在同级目录下创建名为“conf.ini”的配置文件，你可以修改此文件进行一些参数的配置，保存后需要重新启动 Cloudreve 生效。\n默认情况下，Cloudreve 会使用内置的 SQLite 数据库，并在同级目录创建数据库文件“cloudreve.db”，如果您想要使用 MySQL，请在配置文件中加入以下内容，并重启 Cloudreve。\n[Database]#数据库类型，目前支持 sqlite  mysqlType &#x3D; mysql#用户名User &#x3D; root#密码Password &#x3D; root#数据库地址Host &#x3D; 127.0.0.1#数据库名称Name &#x3D; v3#数据表前缀TablePrefix &#x3D; cd\n\n注意：更换数据库配置后，Cloudreve 会重新初始化数据库，原有的数据将会丢失。\n8、最后从使用体验来看，效果很不错，功能强大，支持存储种类也多，唯一不足的地方竟然不支持Google Drive 。作者更是说目前不支持，未来也不会支持。\n安装真的是很简单了，比之前的v2版本安装简单的多。不过目前还是测试版，所以有bug是很正常的。\n场景使用：可以使用 Cloudreve 搭建个人用网盘、文件分享系统，亦或是针对大小团体的公有云系统。\n摘自： https://www.daniao.org/8544.html https://www.daniao.org/5094.html\n在此感谢，有部分删改\n","categories":["转载"],"tags":["Cloudreve V3","网盘"]},{"title":"无语。。。","url":"/posts/3566/","content":"\n","categories":["分享"],"tags":["cc","ddos"]},{"title":"dislike - 专为“管理日常生活琐事”而设计的待办事项提醒工具 APP","url":"/posts/64717/","content":"[toc]几乎每个人手机上都会装一个待办事项 (Todo) 或日程安排类的工具 APP，应用市场上也充斥着各种各样基于 GTD、番茄钟、四象限等时间管理理论的软件应用。\n大多数此类应用的初衷都是为“提升工作效率”而设计的，而 dislike 这款 App 的不同之处在于，它是专为「生活事务处理」这一场景设计的，可以说是“为提升生活效率而生”。它比起一般的任务清单类工具，有着更多适合日常生活小事记录与提醒的贴心特性……\ndislike 与一般的待办列表工具有什么不同？「dislike」 是一款日常生活事务待办及提醒工具。在现实中，我们除了工作任务以外，其实日常生活上也有着非常多琐碎但又不得不去做的事情，dislike 就是为了解决这些琐事而设计的。\n在官网上 dislike 用一句话简单又准确地概括出了它的作用与定位——“把不喜欢的琐事都交给 /dislike/。你清空思绪，去关心真正的生活”。那么，我们来看看 dislike 有哪些专门为生活事物打造的特性吧。\n极具特色的“生活事务订阅”功能初次上手 dislike，直观上跟一般的时间管理类软件最大的不同点可能就在于这个“订阅”模块了。dislike 在订阅模块里内置了很多常见的日常生活事务，如：信用卡还款、驾照清分、三个月换牙刷、定期体检、汽车年检、居住证签注之类的生活小事。\n使用普通的待办任务清单工具，你需要事无巨细地为这些繁杂又不得不做的“小事”一个个去添加创建对应的待办项目和提醒，而 dislike 的“订阅”功能则可以让你从这些琐碎中解放出来。而且订阅之后，它还会根据事情重要性的不同，提醒的行为也不一样。\n\n  比如你订阅的是「信用卡还款」，如果到了还款日当天你还没有去标记完成，则 App 会每小时反复提醒，直至你标记完成为止，以防止出现逾期还款的情况。\n  而如果订阅的是「生日提醒」，除了在他人生日当天会有提醒之外，dislike 还会非常贴心地为你创建一个“提前一周购买生日礼物”的提醒，无论是京东、淘宝下单一般都能到，完全避免到了生日那天才发现赶不及买礼物的尴尬。\n\ndislike 应用截图：[ dislike - 日常生活事务待办及提醒工具 iPhone 版截图 ]\n\n\n\n\n\n\n\n\n\n待办、日程合二为一不知道你有没有这种感觉：有时候有点小事，需要随手记一下，使用待办列表就很方便；但有时又有些特定的日程安排，比如每周五写周报之类，用日程类的 App 就更合适一些。\n待办列表胜在简单易用，不需要设置明确的日期。日程则胜在事务安排上比较有控制感，哪天要做哪些事情一目了然。\n但同时在 2 个不同 App 上记录实在是很不方便。dislike 解决了这个问题，用一种巧妙的方式实现了待办列表和日程规划的无缝融合。在 dislike 里没有待办和日程的概念，有什么事情随手记录即可。如果事件设置了发生日期，就会出现在相应的时间线或日历上；如果没设置，那么事件就会一直跟随出现在「今天」。\n简单不失趣味的 UI 设计dislike 在设计上走的是极简的路子，整个界面看起来非常整洁干净。同时也匹配了 iOS 和 macOS 最新推出的“夜间模式”。\n但它的极简并不寡淡无趣，比如 App 为节假日及一些特殊事件设计了精美的标识图标，替代一般待办常用的勾选符号。\n其中包括传统二十四节气，常见的西方节日（母亲节、父亲节、情人节等），生日祝福等比较常用的图标。\n最后dislike 完全免费，目前无内购无广告。现在仅支持 iOS 端，还没有推出对应的 Android 版，不过安卓用户也可以使用「微信小程序」版本。\n总的来说，dislike 并不是一款典型意义上的效率工具，不适合对日程规划和事务管理有着极致效率追求的人。但如果你需要的是一款更多「用于管理日程生活琐事」的工具，那么 dislike 可能就非常适合你。还是那句话：“把生活上不喜欢的事交给 dislike”就好了。\n相关文件下载地址官方网站：访问软件性质：免费\n声明这仅是一篇测试文章转载iplaysoft.com\n","categories":["转载","测试"],"tags":["dislike"]},{"title":"(╯#-_-)╯~~颜文字","url":"/posts/62116/","content":"“颜文字”是一种非常流行的表情符号，是通过各种字符、数字、符号所组成的，用以表达话语者的心情与表情的字符画。颜文字极大地丰富了话语者的情绪、语气、心情、动作、或者面部表情，深受以年轻用户为核心的二次元群体喜爱。\n颜表情最初原型只有一个 :) ，后来创造出各种不同形式的符号表情包，用「*」、「^」、「-」等符号作眼睛，「_」、「.」、「o」等符号放在中间成为口部，做出「^_^」、「*_*」、「^o^」、「^_~」之类的笑脸，也有在笑脸旁边加上别的符号作为修饰物，表现更为丰富的表情，如「-_-」表示类似漫画中尴尬的面部，(ฅ´ω`ฅ) 表示卖萌猫爪动作，「-_-b」表示人物脸上滴下汗水等等。\n因此，当你生气、伤心、高兴时你可以使用这些颜表情 (╯°口°)╯︵ ┻━┻ 掀凳子、 o(╥﹏╥) 痛哭流涕、 o(〃＾▽＾〃)o. 开怀大笑这些颜文字非常适合表达你的心情。所以不必苦苦寻求可爱颜文字表情怎么打，颜文字大全就有你想要的一切！\n小伙伴击掌/打招呼 ╭(●｀∀´●)╯╰(●’◡’●)╮ (●’◡’●)ﾉ ヾ(*´▽‘*)ﾉ 手拉手╭(′▽`)╭(′▽`)╯ 好困呀（揉眼睛 ( ‘-ωก̀ ) 已阅留爪 (ฅ´ω`ฅ) 勾手指可萌啦 ( ｡ớ ₃ờ)ھ 开心 ♪（＾∀＾●）ﾉｼ （●´∀｀）♪ 爱你么么哒 ( ˘ ³˘)♥ ( ˘ ³˘) •́ε•̀)ฅ (๑•́ ₃•̀๑٥) (๑ºั ³ ˘๑)♥ (๑ơ ₃ ơ)ﻌﻌﻌ♥ (ㆀ˘･з･˘)ε٩(๑&gt; ₃ &lt;)۶з 爱心眼 ( •́ .̫ •̀ ) (´?ω?`) (●′ω`●) (´,,•ω•,,‘) (´；ω；‘) (´?н?‘) (›´ω`‹ ) (๑•ั็ω•็ั๑)( ˘•ω•˘ ) (●´ϖ`●) ( •̀∀•́ ) 疑问： ◔ ‸◔？ （⊙.⊙） 逃跑 ε=ε=ε=ε=ε=ε=┌(;￣◇￣)┘ 撒花 ｡:.ﾟヽ(｡◕‿◕｡)ﾉﾟ.:｡+ﾟ 瞥眼： (¬､¬) (￢_￢) 叮： ≖‿≖✧ o‿≖✧(๑•̀ㅂ•́)و✧ 中老年人/脸红系列： ( ˙灬˙ ) (´•灬•‘) ε٩ (๑&gt; 灬 &lt;)۶з ( ˘•灬•˘ )(´-灬-‘) (๑´灬`๑) ٩(๑`灬´๑)۶ (•̅灬•̅ ) (๑ơ 灬 ơ) (ง •̀灬•́)ง 加油！ (ง •̀_•́)ง (*•̀ㅂ•́)و 无奈： ╮(๑•́ ₃•̀๑)╭ 猫爪 ฅ’ω’ฅ ฅ(๑˙o˙๑)ฅ ٩(๛˘³˘)۶♥ ฅ(๑*д*๑)ฅ ฅ(๑˙o˙๑)ฅ ʕ•̀ω•́ʔ✧ (๑•̀ㅁ•́ฅ)ฅʕ•̫͡•ʔฅ ʕ•͡-•ʔ 伸懒腰： ٩(๑´0`๑)۶ 害羞： （//▽//） 委屈：(,,•́ . •̀,,) (๑•́ ₃•̀๑) (๑•́ ₃ •̀),,Ծ‸Ծ,, 着急/救命系列： ﾍ(;´Д｀ﾍ) (/ﾟДﾟ)/ (*゜ロ゜)ノ Σ( ￣д￣；) ！！！ Σ(っ °Д °;)っ ( •̀д•́) Σ( ° △ °)︴ =´Å‘= 各种哭法：π__π T.T ε(┬┬＿┬┬)3 ╥﹏╥ ┬＿┬ (╥╯^╰╥) 冒汗皱眉系列：(;¬_¬) ( ´◔ ‸◔`) (눈_눈) ( ∙̆ .̯ ∙̆ ) (;￢д￢) (“▔□▔) 呆子：(•ิ_•ิ) 认真状 (..•˘_˘•..) 咩 ꒰๑´•.̫ • `๑꒱ 喂喂 ((٩(//̀Д/́/)۶)) 盖被子： (:3[▓▓] (:3[▓▓▓▓▓▓▓▓▓] (¦3[▓▓] 爬地：_(:з」∠)_ _(:qゝ∠)_ _(?ω?｣ ∠)_ 嘿嘿嘿：๑乛◡乛๑ (●´∀｀●) 闭眼满足 (｡￫‿￩｡) （๑￫‿ฺ￩๑）（=ˇωˇ=）（⺻▽⺻ ）&lt;(￣︶￣)&gt;(•‾̑⌣‾̑•)✧˖° (๑˘ ˘๑) ♥(｡￫v￩｡)♥ 哇呀：&gt;ㅂ&lt; (๑&gt;m&lt;๑) o(&gt;ω&lt;)o ≥▽≤ 噜啦啦系列：(づ￣ 3￣)づ ( ˙ε ˙ ) 乛 з乛 (￣ε￣) (｡◕ฺˇε ˇ◕ฺ｡）(๑¯ิε ¯ิ๑) ( ´´ิ∀´ ) 流口水： ԅ(¯﹃¯ԅ) （¯﹃¯） 好次 (๑´ڡ`๑) (๑＞ڡ＜)☆ 带花 ︶ε╰✿ ✿◡‿◡ 生气 (｀д′) (￣^￣) 哼！ &lt;(｀^′)&gt; 瞪眼 ٩͡[๏̯͡๏] 掀桌子颜文字 无表情掀桌 ( ╯-_-)╯┴—┴ (ノ—_—)ノ┴————┴ （╯－＿－）╯╧╧ （ノ*-_-*)ノ┴—┴ 娇蛮掀桌 (/= _ =)/┴┴ 无语掀 （╯#-_-)╯╧═╧ ( ╯#-_-)╯┴—┴ (╯#-_-)╯~~~~~~~~~~~~~~~~~╧═╧ 大力掀 抓狂掀桌 (╯￣Д￣)╯╘═╛ (ノ=Д=)ノ┻━┻ （╯#-皿-)╯╧═╧ (╯’ – ‘)╯︵ ┻━┻ 再他妈的掀一次 (╯°Д°)╯︵ ┻━┻ (｀□′)╯┴┴ ┴—┴ ╰(｀□′╰) 泪奔掀桌 ～～((ノ*T_T*)ノ┴—┴ (┙&gt;∧&lt;)┙へ┻┻ 摆好 （\\#-_-)\\┯━┯ 桌放好 ┬─┬ ノ( ‘ – ‘ノ) 摆好摆好 其它 ╭(￣▽￣)╯╧═╧ 单手掀 ╧═╧(-_-)╧═╧ 桌子飞人 卖萌颜文字·moe (•‾̑⌣‾̑•)✧˖° (๑¯ิε ¯ิ๑) (๑•́ ₃ •̀๑) ( ∙̆ .̯ ∙̆ ) (๑˘ ˘๑) (●′ω`●) ︶ε╰✿ ✿◡‿◡ (●･̆⍛･̆●) ♫ ♫♬♪♫ ヾ(。◕ฺ∀◕ฺ)ノ♫♬ 。ﾟ+.ﾟヽ(●´ω｀●)ﾉ。 （●´3｀）♪ （●&gt;∀&lt;●）ィェ━ィ★彡 ♥♥(o￫ܫ￩o)♫ (〃＾∇＾)ぇ∧∧∧っ *゜✲ฺ(✿◕ฺ ∀◕ฺ)ฺノ†゜* （●´д｀）.。o ヽ(.◕ฺˇд ˇ◕ฺ;)ﾉ ((٩(//̀Д/́/)۶)) (´；ω；`) ( `)3′)▃▃▃▅▆▇▉ v(ﾟｰﾟ) =≡Σ((( つ•̀ω•́)つ (；′⌒`) ╰(*´︶`*)╯ ( ´´ิ∀´ิ` ) (´∩｀。) ( ื▿ ื) (｡ŏ_ŏ) ( •ิ _ •ิ ) ヽ(*΄◞ิ౪◟ิ‵ *)ﾉ ( ˘ ³˘) (๑&gt;m&lt;๑) (; ´_ゝ`) (*ˉ﹃ˉ) (◍’౪`◍)ﾉﾞ (｡◝‿◜｡) (ಠ .̫.̫ ಠ) (´◞⊖◟`) (。≖ˇェˇ≖｡) ℰ⋆‿⋆ℰ (ಠ .̫.̫ ಠ) p(´⌒｀｡q) ┗(´D`* (´D`*(´D`*)┛ &lt;(▰˘◡˘▰)&gt; (?ω&lt; )★ (*ﾟｪﾟ*) ✧ (≖ ‿ ≖)✧ (◕ܫ◕) (｀◕‸◕´+) (▼ _ ▼) ( ◉ืൠ◉ื) ㄟ(◑‿◐ )ㄏ (●’◡’●)ﾉ♥ (｡◕ˇ∀ˇ◕） ~Ⴚ(●ტ●)Ⴢ ⊙.⊙ ( ◔ ڼ ◔ ) ( ´◔ ‸◔`) (☍﹏⁰) (♥◠‿◠)ﾉ ✪ω✪ ʅ(‾◡◝)ʃ (๑°3°๑) ლ(?◡?ლ ) இwஇ (๑꒪◞౪◟꒪๑) (๑◕ܫ￩๑)b (*☉౪⊙*)　ヾ(o゜_,゜o)ノ ლↀѡↀლ (｡▰´◞◟｀▰｡) ( ͡° ͜ʖ ͡°) 　( ͡° ͜ʖ ͡°)✧ (*゜ロ゜)ノ 　 ( ´･∀･｀) °(°ˊДˋ°) ° (つ﹏⊂) –\\(˙&lt;&gt;˙)/- 心情好颜文字·满足表情 ლ(´ڡ`ლ) (*≧m≦*) (*･ω･) ヾ(｡･ω･｡) (=ﾟωﾟ)ﾉ (○’ω’○) (´?ω?`) (。-`ω´-) (。⌒∇⌒)。(ﾉ≧∀≦)ﾉ(￣ω￣;) (◡‿◡✿) (◕‿◕✿) ♪(^∇^*) o(^▽^)o (●´▽｀●) (=￣ω￣=) o(*￣▽￣*)ブ (￣ε￣*) ( o｀ω′)o((&gt;ω&lt; ))o o(〃’▽’〃)o (＠゜▽゜) (*＾-゜)v ＼( ^▽^ )／ (｡?`ω´･) o(*////▽///ω＼*）(´இωஇ｀)゜(´∀｀)♡ (ღ˘⌣˘ღ) ヽ(○´∀`)ﾉ♪ (*´∀`*) ( ´･◡･` ) 心情不好颜文字 (→_←) (︶︹︺) （ﾉ´д｀）(･_-｡ ) ˋ(′～‵”)ˊ(　TロT)σ ( T﹏T ) (; ´_ゝ`) (,,Ծ‸Ծ,,) (ಥ_ಥ) ( ꈨຶ ˙̫̮ ꈨຶ )(;´༎ຶД༎ຶ`) (＞人＜) (°̥̥̥̥̥̥̥̥-°̥̥̥̥̥̥̥̥ ) థ౪థ இдஇ p(´⌒｀｡q) ( ´•︵•` ) (´-ι_-｀) (┳◇┳) ( &gt;﹏&lt;。)～ ( ̤இॕ⌓இॕ ̤) °(ಗдಗ。)° (´இ皿இ｀)゜(´；ω；｀) ｡：ﾟ(｡ﾉω＼｡)ﾟ･｡(;*△*;) ( ཀ͝ ∧ ཀ͝ ) 呆呆的颜文字·无奈和汗颜表情 ?(￣△￣?) (?￣△￣)? (*｡_｡) (；￣Д￣）(´Д｀) (*￣m￣) （￣～￣;） (￣ェ￣;) (￣◇￣;)┐(─__─)┌ (*´Д`) （＝＿＝）(￣ー￣* (-_-メ) (￣ ‘i ￣;) (￣ε(#￣) ( ¯▽¯；) (*ﾟｪﾟ*) (。≖ˇェˇ≖｡)(◒｡◒) ( ᖛ ̫ ᖛ )ʃ) ヽ(´o｀；（；￣ェ￣）( ´Д`)y━･ 搞怪的颜文字 ヘ(￣ω￣ヘ) ♪(┌?。?)┌ (－ｏ⌒) ☆～（ゝ。∂）╮(╯▽╰)╭ (￣︶￣)ψ (ˉ﹃ˉ) ೭(˵¯̴͒ꇴ¯̴͒˵)౨_(:з」∠)_ ( ◉ืൠ◉ื) 罒ω罒 (☝ ՞ਊ ՞)☝⃔⌄ ⃔ ─=≡Σ((( つ•̀ω•́)つ ٩꒰⍢ ꒱۶⁼³₌₃ Σ(￣。￣ﾉ)ﾉ ฅ(*ơ ₃ơ)ฅ”(｢･ω･)｢ (。･o･｡)ﾉ ◟꒰⁺᾽ ऀืົཽ ˡ̼̮ ऀืົཽ⁺̥̥̥̥̥꒱◞~ (o´?`o) ( • ̀ω ⁃᷄)✧ (ФwФ) ( ื▿ ื) ◐/v/◐ （ゝω?）(੭ु ‾̑ω‾̑)੭ु⁾⁾(ू ͒•‧̫•ू⑅ ͒) ᕦ(ò_óˇ)ᕤ ( ͡° ͜ʖ ͡°) 斜眼颜文字·鄙视状颜表情文字 (ਛ_≻ਛ) ( ﹁ ﹁ ) (¬д¬。) ( ¬､¬) (;¬_¬) (；¬д¬) (′д｀σ)σ .╮(﹀_﹀”)╭ 认真样子的颜文字 (`･ω･´)ゞ(๑•̀.̫•́๑) ( ‾ʖ̫‾) ( •̀ .̫ •́ )✧ (๑•̀_•́๑) (ง •̀_•́)ง (｀◕‸◕´+) ( ∙̆ .̯ ∙̆ ) (•ิ_•ิ) 惊恐担心的颜文字 (,,#ﾟДﾟ) (」゜ロ゜)」 (;° ロ°) ヽ（゜ロ゜；）ノ (￣口￣)!! ┌(。Д。)┐(⊙ˍ⊙) Σ( ° △ °)︴（⊙＿⊙；）… (っ °Д °;)っ щ(゜ロ゜щ) 不满傲娇状的颜文字 (￣^￣) o(´^｀)o （￣へ￣）φ(￣ー￣ ) ╮(～▽～)╭ b(￣▽￣)d （￣ c￣）y▂ξ (ˉ▽￣～)o(一︿一+)o ε＝（＞ε＜）ˋ﹏ˊﾉ(≖ A ≖))ﾉ =3=3=3 (‵▽′)/ 气愤颜文字 （╬￣皿￣） ヽ(ｏ`皿′ｏ)ﾉ ヽ(≧Д≦)ノ （＞д＜） （;≧皿≦） ヽ(#`Д´)ﾉ [○･｀Д´･○] ヽ( ｀0´)ﾉΣ(-`Д´-ﾉ；)ﾉ o(-`д´- ｡) ヽ(●-`Д´-)ノ （｀＾´）ノ (╯‵□′)╯︵ ┴─┴ （╯－＿－）╯╧╧ ┗｀O′┛(o#゜ 曲゜)o (╯‵□′)╯···*～● 凸(艹皿艹 ) (ʘдʘ╬) ╰（‵□′）╯ s(?｀ヘ´?;)ゞ 山(≧皿≦)山(ノ｀Д´)ノ (┙&gt;∧&lt;)┙へ┻┻ 双人 (●ゝω)ノヽ(∀＜●) o(╬￣皿￣)=○# (￣#)3￣) ╭(′▽`)╭(′▽`)╯(￣ε(#￣)☆╰╮o(￣皿￣///)( *￣▽￣)((≧︶≦*) (～￣▽￣)→))*￣▽￣*)o (┘￣︶￣)┘└(￣︶￣└) (〃￣︶￣)人(￣︶￣〃)&lt;( ‵□′)───C＜─___-) └(￣ ￣└)(┘￣ ￣)┘ ( *￣▽￣)((≧︶≦*) └│∵│┐┌│∵│┘ヽ(*´∀｀)八(´∀｀*)ノ \\(“▔□▔)/\\(“▔□▔)/ （*＾ω＾）人（＾ω＾*）(((*°▽°*)八(*°▽°*)))♪ヽ(＾▽＾)人(＾▽＾)人(＾▽＾)ﾉ｡*:★(´?ω?人?ω?`)｡:゜★｡ヽ(∀゜ )人( ゜∀)ノ 花痴脸 cheering ಠ౪ಠ ಥ_ಥ (/≥▽≤/) ヾ(o◕∀◕)ﾉ ヾ(o◕∀◕)ﾉ ヾ(o◕∀◕)ﾉ✪ω✪ *★,°*\\:.☆\\(￣▽￣)/$\\:*.°★* ヾ (o ° ω ° O ) ノ? ╰(*°▽°*)╯ (｡◕ˇ∀ˇ◕） o(*≧▽≦)ツ ≖‿≖✧ &gt;ㅂ&lt; ˋ▽ˊ ✪ε✪ ✪υ✪ (╭￣3￣)╭♡ (☆ﾟ∀ﾟ) ʅ（´◔౪◔）ʃ (｡☉౪ ⊙｡) o(*≧▽≦)ツ┏━┓ 拍桌狂笑 Smiling(●’◡’●)ﾉ♥ &lt;(▰˘◡˘▰)&gt; ｡◕‿◕｡ (｡?`ω´･) (♥◠‿◠)ﾉ ʅ(‾◡◝) (≖ ‿ ≖)✧ （´∀｀*) （＾∀＾） (o^∇^o)ﾉ ヾ(=^▽^=)ノ (*￣∇￣*)(*´∇｀*) (*ﾟ▽ﾟ*) (｡･ω･)ﾉﾞ (≡ω≡．) (｀･ω･´) (´･ω･｀)(●´ω｀●)φ 哭泣,,Ծ‸Ծ,, π__π （/TДT)/ 掀桌(/= _ =)/┴┴ (/“≡ _ ≡)/┴┴ (╯‵□′)╯︵┻━┻ (┙&gt;∧&lt;)┙へ┻┻ （╯－＿－）╯╧╧ fuuuuuuuuu(╬▔皿▔) (╬￣皿￣)凸 (｀･д･´) (ノ｀Д´)ノ (ﾟ皿ﾟﾒ) (＃｀皿´) ( -д-)ﾉ 惊！（°ο°） Σ( ° △ °\\\\\\)︴　 ∑(っ °Д °;)っ (°□°；) (⊙□⊙) ( ° ▽、° ) ⊙▂⊙ ミ ﾟДﾟ彡 无奈黑线╮(╯▽╰)╭ ╮(╯_╰)╭ (￣▽￣”) （￣工￣lll） (﹁”﹁) ( ＿ ＿)ノ｜ 扶墙ㄟ( ▔, ▔ )ㄏ (*´Д｀*) 得意 &lt;(￣︶￣)&gt; 乾杯 [](￣▽￣)* 滿足 (￣ˇ￣) 沒睡醒 (￣﹏￣) 狡猾(‵﹏′) 被打一巴掌 (￣ε(#￣) 無言 (￣.￣) 無奈 ╮(￣▽￣)╭ 裝傻 (￣▽￣)* 驚訝 (⊙ˍ⊙) 發現(￣.￣)+ 驚嚇 Σ( ° △ °)︴ 冷 (￣▽￣)” 沒辦法 ╮(╯▽╰)╭ 貓咪臉 (=￣ω￣=) 疑惑 (￣３￣)a 阿達 (￣0 ￣)y 重創 (。_。) 不 (＞﹏＜) 懷疑 (→_→) 睏 (￣o￣) . z Z 崇拜 m( _ _ )m 我想想 (ˇˍˇ) 生氣 &lt;(￣ ﹌ ￣)&gt; 就是你 &lt;(￣ ﹌ ￣)@m Orz 挫折系列顏文字（經典） 大頭 Orz 小頭 orz 翹XXXXX Or2 放大版 ○￣_ 雙手撐地 ORZ 有表情 囧rz變化形 OTL 換邊 STO 換邊(小) _no 動物顏文字（不容易懂的顏文字就不收錄了） 豬頭 ( ¯(∞)¯ ) 蝸牛 “\\@ 章魚 (:◎)≡ 蟑螂 ((( ●&lt; 毛毛蟲 (‧‧)nnn 蝌蚪 (: )～ 顏文字組合 使用時可加 ( ) 例： ˙﹏˙ → (˙﹏˙）˙ˍ˙ ˙０˙ ˙︿˙ ˙ε ˙ ˙ 3˙ ˙ω˙ ˙﹏˙ ˙△˙ ˙▽˙ 小眼睛 ⊙ˍ⊙ ⊙０⊙ ⊙︿⊙ ￣ε ￣ ￣ 3￣ ⊙ω⊙ ⊙﹏⊙ ⊙△⊙ ⊙▽⊙ 大眼睛 ￣ˍ￣ ￣０￣ ￣︿￣ ￣ε ￣ ￣ 3￣ ￣ω￣ ￣﹏￣ ￣△￣ ￣▽￣ 瞇瞇眼 ∩ˍ∩ ∩０∩ ∩︿∩ ∩ε ∩ ∩ 3∩ ∩ω∩ ∩﹏∩ ∩△∩ ∩▽∩ 微笑眼 ∪ˍ∪ ∪０∪ ∪︿∪ ∪ε ∪ ∪ 3∪ ∪ω∪ ∪﹏∪ ∪△∪ ∪▽∪ 悲傷眼 ˋˍˊ ˋ０ˊ ˋ︿ˊ ˋε ˊ ˋ 3ˊ ˋωˊ ˋ﹏ˊ ˋ△ˊ ˋ▽ˊ 生氣眼 ＞ˍ＜ ＞０＜ ＞︿＜ ＞ε ＜ ＞ 3＜ ＞ω＜ ＞﹏＜ ＞△＜ ＞▽＜ 緊閉眼 ˇˍˇ ˇ０ˇ ˇ︿ˇ ˇε ˇ ˇ 3ˇ ˇωˇ ˇ﹏ˇ ˇ△ˇ ˇ▽ˇ 不爽眼 ╯ˍ╰ ╯０╰ ╯︿╰ ╯ε ╰ ╯ 3╰ ╯ω╰ ╯﹏╰ ╯△╰ ╯▽╰ 無奈眼 ≧ˍ≦ ≧０≦ ≧︿≦ ≧ε ≦ ≧ 3≦ ≧ω≦ ≧﹏≦ ≧△≦ ≧▽≦ 嬉皮眼 ◑ˍ◐ ◑０◐ ◑︿◐ ◑ε ◐ ◑ 3◐ ◑ω◐ ◑﹏◐ ◑△◐ ◑▽◐ 鬥雞眼 ◐ˍ◑ ◐０◑ ◐︿◑ ◐ε ◑ ◐ 3◑ ◐ω◑ ◐﹏◑ ◐△◑ ◐▽◑ 金魚眼 ●ˍ● ●０● ●︿● ●ε ● ● 3● ●ω● ●﹏● ●△● ●▽● 外星人 ＋ˍ＋ ＋０＋ ＋︿＋ ＋ε ＋ ＋ 3＋ ＋ω＋ ＋﹏＋ ＋△＋ ＋▽＋ 小丑眼 日系顏文字精選（都是一些一看就很容易懂的圖） (๑￫ܫ￩) (｡?`ω´･) (?(ｪ)?) (σ｀?д･)σ (oﾟωﾟo) 日系顏文字系列（怕解釋的不夠好，乾脆不作解釋） 小眼睛 ( ?ˍ?) (?ˍ?*) （p?_q） (〃?ｏ?〃) (*^?_?) (。?ˍ?。) (*?０?) (?ε?●) (｡･ω･) (。?д?。) (?∀?) （／ˍ?、） (?□?、*) (?－?。) (?▽?。) (?_?。)(?O?。) (ノ△?。) (＠?ˍ?) (*??*) 人(?ε?；) (? o ?) (?ェ?o) (′?∀?『) 瞇瞇眼 (* ￣ー￣) (￣ー￣〃) (＠￣ー￣＠) (* ￣︿￣) (*￣∇￣*) &lt;(ˍ ˍ*)&gt;(￣(●●)￣) (￣??￣) (ー∀ー) (￣ｏ￣) (￣、￣) (*￣△￣*) (￣へ￣) (￣□￣) (￣～￣；) (。-ˍ-。 ) (￣ε￣；) (￣┬￣；) (￣∀￣) (ノへ￣、) (*￣ro￣)(ー人ー) (*￣ｍ￣) 日系小眼睛 (′▽`〃) ( ′ｏ`) (′ェ`) (′ε` ) (=′ー`) ( ′θ`) (′○` ) ( ′－`) (′∀`=)(*′▽`) (*′ノ0`) ( ′ロ` ) (′～`；） (′ ︿ `) (*′∇`*) (′ｍ`） (′0ノ`*)(＠。ε。＠) (=′∇`=） (●′ω`●) (′～`●) (′へ`、 ) (〃′o`) ( ；′⌒`) 日系大眼睛 (ΘΘ) (Θ～Θ〃) (ΘｏΘ) (ΘェΘ) (Θ∀Θ＃) (ΘдΘ；) (Θ皿Θメ) (ΘーΘ*)(Θ０Θ●) (Θ▽Θ) (ΘεΘ◎) (Θ◇Θ。) (ΘへΘ) (ΘˍΘ＝) (Θ、Θ) (Θ△Θ＠)(Θ３Θ) 圓珠眼 (°ー°〃) (＃°Д°) (。□。) (*。∀。) (*。∇^*) (* ^ー。)(＠。ー。 ＠) (。∇^☆) (ｏ。◇。) ( 。 ▽ 。) (＃。ε。＃) (。∇^d) (。?。；) (。皿。メ) (* 。 ３ ^) (〃。 ｏ 。〃) ( °◇ °) ( 。⊿。) (°□°；) ( ロ)。 。 (。Д。 ；) (*。ノO。) (； 。。) 緊閉眼 (&gt;&lt;) (;&gt;&lt;) (&gt;_&lt;) (&gt;.&lt;) (&gt;o&lt;) （＞▽＜） (＞Ｏ＜) (o&gt;▽&lt;) (&gt;◇&lt; ) (&gt;▽&lt;) (;&gt;△&lt;) (&gt;з&lt;) (o&gt;ェ&lt;) (＞д＜) (&gt;皿&lt;) (&gt;_&lt;、) (/_＜。) (&gt;。；) (&gt;。ヘ) (ノ_&lt;) (＞。☆) (&gt;y&lt;;) 小狗嘴 (-ω- ) (+ω+) (*ω* ) ( ^ω^) (;ω;) (。ω。) (『ω′) (?ω?=) (￣ω￣)(〃ω〃) (≧ω≦) (。?ω?) (=?ω?=) ( ＞ω＜) (′?ω?`) (/ω＼) (/ω?＼)(/?ω?＼) (ΘωΘ) (ΦωΦ) 悲傷眼 (ＵＵ＊) (ｕｕ〃) (ｕｏｕ〃) (Ｕ３Ｕ*) (●Ｕ_Ｕ●) (ｕ～ｕ=)(＠Ｕ▽Ｕ＠) (ＵAＵ＊) (Ｕ△Ｕ●) (ｕДｕ〃) (Ｕ◇Ｕ◎) (○ｕAｕ○)(ｕ▽ｕ＃) (＠Ｕ～Ｕ＠) (ｕ△ｕ＊) (ｕ◇ｕ〃) (ＵДＵ◎) (＝ｕ３ｕ＝)(ｕ_ｕ＃) (ＵｏＵ＊) /) /) ฅ(• - •)ฅ 喜欢就留个赞啵 ฅʕ•̫͡•\n\n颜文字原文地址\n\n","categories":["分享"],"tags":["颜文字"]},{"title":"翻篇-很早以前的读书笔记","url":"/posts/55339/","content":"大概是因为博客之前崩掉了，所以心情不是特别的好，之前发布的东西都很难在弄上。算了不谈这事了，想起以前自己写的一篇读书笔记，就当图个乐吧，纪念一下以前，大约也是这段时间。题目就是翻篇 哈哈哈\n\n翻篇\n读《直到那一天》有感 \n    以“翻篇”为题，对于像我这样年龄的人来说，简直事不言而喻。况且现在正值12月，也快到月底了，而这又让我想起了一些难以释怀的事……二十四节气的大雪过后，天气也越来越冷，周围的花草树木也尽显荒凉萧条，于是人也变得无精打采，而有活力的人总会在深秋以前，懂得怀旧的却在寒冬。 \n    印象中记得这么一句话：“处于17、18岁的人呐，这个时候的你们不应再把思绪拉到过往，而是时刻准备着待发，开始新的旅程。若是真正到了年迈的那天，才会发现往昔的岁月，是多么的沉淀。”我理解也同意他的说法，只是对于现实生活中的我们来说有些不大可能，脱离现实的人，其结果也可想而知。但记忆中的某一瞬间，注定要定格在漫长的人生路上，还需我们独自去回忆，去铭记。 \n    我一直认为，哪怕是和自己的好朋友，不管是在何种地方，什么时候，彼此打开心扉，相互分享彼此有意义、珍贵、刻骨的经历。在自己以前的那种经历得到的感悟，始终不能从口中说出半分，他们也不会从中得到一丝藉慰。况且我是这么想的。因为现实中我所遇到的，似乎都是这样。 \n    罗曼罗兰曾说“有一种英雄主义，是在认清生活的真相之后，依然热爱生活，”过多的话只能尽显我的消极。只是当你能从我的思考中得到一点安慰，我也是知足的。况斯人已逝，苟活在这世上的人们，还在挣扎，还在抗争。 \n    过去需要回忆，也需要你去封藏。 \n    做人不能只从别人的话中听经历，也要做自己，否则那样的自己会很空洞。翻篇，这首歌，在16年的前夕依旧有人在听，而这之后，仍然会有人带着怀念，只是有些时候它还会在我脑中响起。 \n    朋友！这又是一年，未来的路还很漫长，还需要我们坚强去走。过去不仅仅代表过去，回忆还需回忆。翻过一篇，人生的卷宗还会有下一篇。不管你愿不愿意，时间却很乐意。 \n    钟楼上的钟声太过悠长，天花板上还有细小的轻尘漫舞。短短数十载，在踏入社会之前，学会了人生路上的行走。因为我知道未来已悄然伸出她的手，携我向前。——后记\n","categories":["分享","日志"],"tags":["读书笔记"]},{"title":"部署Free-HLS – 视频切片后自动上传至国内免费CDN","url":"/posts/24613/","content":"[toc]\nFree-HLS是一个免费的 HLS 视频解决方案，即所谓的视频床。该项目提供一整套集成化解决方案，囊括了各环节所需的切片、转码、上传、即时分享等套件。让你可以以更方便、更低廉的方式分享你的视频到任意地方。\n这个项目需要搭建服务端和客户端，当然你可以都放到一起。这篇教程就来说说如何利用宝塔面板来搭建一个自己的视频床。\n1、前言\nGithub地址：\n参考视频部署：https://sxyz.gitee.io/free-hls/usage.html\n2.安装2.1安装python项目管理器（软件商店里安装）宝塔面板默认的python版本是python2，但是这个教程是需要python3来部署的，如何解决呢？这里提供一个思路。\n1.首先安装python项目管理器，这个自己在软件商店里自行安装。\n2.版本管理中安装python3.7.2。\n\n2.2随便添加一个项目随便添加一个项目，项目添加好后，宝塔会给我们生成一个虚拟环境这个虚拟环境默认就是python3的环境，所以问题就解决了。比如说我们就添加free-hls这个项目。先进入命令模式git项目，如下：\ngit clone https:&#x2F;&#x2F;github.com&#x2F;sxyazi&#x2F;free-hls.git\n\n之后，我们进入到python项目管理新建一个项目，具体如图：\n\n2.3 进入虚拟环境安装项目建立之后，会给我们生成一个虚拟环境，进入方法如下，在命令行输入 ：\nsource 项目路径&#x2F;项目名_venv&#x2F;bin&#x2F;activate如：source &#x2F;data&#x2F;python&#x2F;project1_venv&#x2F;bin&#x2F;activate比如这个案列进入方法：source &#x2F;www&#x2F;wwwroot&#x2F;ee.daniao.org&#x2F;OneList&#x2F;666666_venv&#x2F;bin&#x2F;activate\n\n截图：\n\n这样就解决了python的版本问题，而且还是一个单独的虚拟环境，折腾坏了也不影响啥。\n2.4也可以选择命令安装 安装最新的 Python3，以及必要包：apt install -y ffmpeg python3 python3-pippip3 install requests python-dotenv\n\n3.搭建服务端服务端位于项目的 web 目录，负责向客户端提供视频发布所必要的 API 接口。以及最终目标视频的播放服务。\n3.1 安装依赖\nps: 这里命令输入是接着上面，你需要进入到python3的虚拟环境里面执行（这里的命令是centos7系统。）！！！\nyum install -y python3 python3-pipyum install Flask gunicorn python-dotenv\n\n3.2 ** 启动服务**\ncd webgunicorn app:app -b 0.0.0.0:3395 --workers&#x3D;5 --threads&#x3D;2 -D\n\n3.3访问你的IP:3395当看到“hello，world”表示客户端已经搭建成功。\n4.注册语雀点击进入 语雀官网\n先前往语雀官网注册一个账号，然后获取ctoken和session的值，这里说下大概获取方法，以谷歌浏览器为例。\n登录后，F12进入控制台选择Network，点击dashboard，再选择Cookies即可看到所需要的2个参数。\n5.搭建服务端这里注意： 服务端可以在自己电脑上，也可以在服务器上，这就以服务器搭建为列。\n5.1安装依赖\n依赖包括ffmpeg、python3、python-dotenv，因为在上面我们已经安装过了依赖，唯一的ffmpeg没有安装，这里说下宝塔安装ffmpeg的方法，如下：\nwget http:&#x2F;&#x2F;download.bt.cn&#x2F;install&#x2F;ext&#x2F;ffmpeg.sh &amp;&amp; sh ffmpeg.sh安装完后可输入以下命令是否安装成功。ffmpeg -version\n\n在PHP设置中取消掉禁用scandir，exec、system、shell_exec函数\n安装方法2\n1.编译安装升级yumcd &#x2F;rootyum -y update2.安装命令如下：#下载ffmpeg（x64二进制文件）wget https:&#x2F;&#x2F;johnvansickle.com&#x2F;ffmpeg&#x2F;builds&#x2F;ffmpeg-git-amd64-static.tar.xz #解压文件tar xvf ffmpeg-git-*-static.tar.xz &amp;&amp; rm -rf ffmpeg-git-*-static.tar.xz#将ffmpeg和ffprobe可执行文件移至&#x2F;usr&#x2F;bin方便系统直接调用mv ffmpeg-git-*&#x2F;ffmpeg  ffmpeg-git-*&#x2F;ffprobe &#x2F;usr&#x2F;bin&#x2F; #也可以使用ffmpeg一键自动安装包，安装FFMPEG和相关依赖。（如果使用二进制文件，此步略过）#https:&#x2F;&#x2F;www.ffmpegtoolkit.com&#x2F;#CentOS 7.* 64bit Latestyum install git wget -y cd &#x2F;optgit clone https:&#x2F;&#x2F;github.com&#x2F;hostsoft&#x2F;ffmpegtoolkit.git ffmpegtoolkitcd ffmpegtoolkitsh latest.sh\n\n安装的过程非常漫长，你需要慢慢等待。安装成功后可以用命令“ffmpeg”或者“ffmpeg -version”来测试是否安装成功\n**5.**2配置语雀将 .env.example 更名为 .env，修改其中的 YUQUE_CTOKEN、YUQUE_SESSION 配置。操作步骤：\n\n 登录语雀；\n 打开 Chrome 的开发者工具（F12），切换到 Network 面板；\n 刷新页面，从 Cookie 中抓取 ctoken、_yuque_session，复制并替换到 .env 文件中；\n 将你服务器的域名或 IP 地址修改到 .env 中的 APIURL 配置项。\n\n\n6.使用准备好目标视频文件，输入如下指令开始切片、上传：\npython3 up.py test.mp4               #默认标题python3 up.py test.mp4 测试哦         #自定义标题python3 up.py test.mp4 test 5        #自定义分段大小python3 up.py test.mp4 test LIMITED  #限制码率（需重编码）python3 ls.py    #列出已上传视频python3 ls.py 3  #列出已上传视频（第3页，50每页）\n\n比如视频在root目录中命名为test,输入 python3 up.py /root/test.mp4开始上传\n成功之后，会显示地址\n最后的下载地址域名绑定使用宝塔面板反向代理IP:3396\n7.最后推荐在自己的电脑上设置服务器，不然长时间压缩切片造成服务器资源占用太高，会被服务商关机。\n你要切片视频的话你得上传一个视频到你的服务器，或者自己从别地方download一个过来。\n同样还有很多项目：\n\n  https://github.com/sxzz/free-hls.js\n  https://github.com/sxzz/free-hls-live\n  https://github.com/MoeClub/Note/tree/master/ffmpeg\n\n教程绝大部分参考https://www.daniao.org/8407.html 有部分修改\n","categories":["转载"],"tags":["Free-HLS","视频切片","视频床"]},{"title":"安装ffsend命令行客户端通过FireFox Send分享文件-[超详细]","url":"/posts/125/","content":"1.前言Linux 用户偏爱使用 scp 或 rsync 来进行文件或目录的复制拷贝。不过在 Linux 上正出现了许多新的可选方式，因为 Linux 是开源的，所以任何人都可以为 Linux 开发一个安全软件。 于此同时有  OnionShare、Magic Wormhole、Transfer.sh 和 Dcp – Dat Copy这些可用的工具。\n但是今天我们来认识ffsend ，它是 Firefox Send 的命令客户端。 允许用户通过命令行来传递和接收文件或目录。 甚至可以允许我们通过一个安全、私密、加密的链接，使用一个简单的命令来轻易安全地分享文件。\n2.了解Firefox Send\nFireFox Send 与传统的网盘不太一样，它是一种类似“阅后即焚”的简单且私密的临时个人文件共享工具 (网络服务)，用户只需通过任意浏览器 (包括 Chrome、Edge、火狐等) 即可快速上传一个或多个文件与他人分享。 匿名用户可以上传最大 1GB、最长 1 天的临时文件、被下载 1 次后自动删除文件；而注册用户 (同样完全免费) 则最大可以上传 2.5 GB 文件、最长可以保留 7 天的时间、最多允许 100 次下载次数。\n目前已经推出Android端，可在Google Play商店下载体验！！\n2.1 FireFox Send的特点\n  简单安全的一次性临时文件分享服务\n  跨平台、跨设备\n  完全开源\n  通过源代码「自己架设一套私人专属的 FireFox Send 网盘」\n\n[mdx_github author=”mozilla” project=”send”][/mdx_github]\n3.引出ffsend得益于 FireFox Send 完全开源 (基于 Node.js 开发)，甚至还有开发者推出了命令行版本的工具，可以通过命令一键上传并分享文件ffsend ，这对于运维或开发人员，可以非常方便地通过服务器传输文件或者编写脚本整合到自己的工作流中去。\n[mdx_github author=”timvisee” project=”ffsend”][/mdx_github]\n3.1 ffsend 的特点：\n  全功能且使用友好的命令行工具\n  可以安全地上传和下载文件与目录\n  总是在客户端加密\n  可用额外的密码进行保护、密码生成和可配置下载次数限制\n  内置的文件或目录的打包和解压\n  可以轻松地管理你的历史分享记录\n  能够使用你自己的 Send 主机\n  审查或者删除共享文件\n  精准的错误报告\n  低内存消耗，用于加密或上传下载\n  无需交互，可以集成在脚本中\n\n\n3.2安装 ffsend#下载压缩包$  wget https:&#x2F;&#x2F;github.com&#x2F;timvisee&#x2F;ffsend&#x2F;releases&#x2F;download&#x2F;v0.2.59&#x2F;ffsend-v0.2.59-linux-x64.tar.gzPS:注意最新版版本号的修改这里是v0.2.59#解压 tar 包$  tar -xvf ffsend-v0.2.59-linux-x64.tar.gz#查看你的 PATH 环境变量echo $PATH&#x2F;home&#x2F;daygeek&#x2F;.cargo&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;default&#x2F;bin:&#x2F;usr&#x2F;bin&#x2F;site_perl:&#x2F;usr&#x2F;bin&#x2F;vendor_perl:&#x2F;usr&#x2F;bin&#x2F;core_perl#将这个可执行文件放置到 PATH 环境变量中的某个目录中$  sudo mv ffsend &#x2F;usr&#x2F;local&#x2F;sbin#直接运行ffsend$  ffsend\n\n这里就可以获取其基本使用信息了\nffsend 0.2.59Usage: ffsend [FLAGS] ...Easily and securely share files from the command line.A fully featured Firefox Send client.Missing subcommand. Here are the most used: ffsend upload ... ffsend download ...To show all subcommands, features and other help: ffsend help [SUBCOMMAND]\n\n当然也有Windows,MacOS,nupkg版\n\n下载发布地址： https://github.com/timvisee/ffsend/releases\n3.3 Debian/Ubuntu系统$  wget https:&#x2F;&#x2F;github.com&#x2F;timvisee&#x2F;ffsend&#x2F;releases&#x2F;download&#x2F;v0.2.59&#x2F;ffsend_0.2.59_amd64.deb$  sudo dpkg -i ffsend_0.2.59_amd64.deb\n\n甚至是 Arch Linux系统的用户， 可以简单地借助 AUR 助手来安装它，因为这个包已经在 AUR 软件仓库中了 。\nyay -S ffsend\n\n4.使用 ffsend4.1 上传语法： ffsend upload [/Path/to/the/file/name]\n比如我上传一个名为BasicAuth.png的图片\n#输入上传文件的名称$  ffsend upload BasicAuth.png --copy#下面会提示上传完成，出现唯一的 URLUpload completeShare link: https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;11e17b4ea7c45d48&#x2F;#jcN-NJh5m6O2oVkJiHqPLA\n\n4.2 下载语法： ffsend download [Generated URL]\n例如我要下载一个文件，只需要把文件URL改一改就好了\n#输入命令加入下载文件的URL$  ffsend download https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;11e17b4ea7c45d48&#x2F;#jcN-NJh5m6O2oVkJiHqPLA#提示下载成功Download complete\n\n4.3 那么同样的对于某个目录文件的直接上传语法： ffsend upload [/Path/to/the/Directory] –copy\n在下面的例子中，我们将上传一个名为 test 的目录：\n$  ffsend upload &#x2F;home&#x2F;daygeek&#x2F;test --copy#出现提示You&#39;ve selected a directory, only a single file may be uploaded.Archive the directory into a single file? [Y&#x2F;n]: y   #这里输入 y 回车Archiving...Upload completeShare link: https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;90aa5cfe67&#x2F;#hrwu6oXZRG2DNh8vOc3BGg\n\n同样是下载这个目录文件,通过链接URL：\n$  ffsend download https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;90aa5cfe67&#x2F;#hrwu6oXZRG2DNh8vOc3BGgYou&#39;re downloading an archive, extract it into the selected directory? [Y&#x2F;n]: yExtracting...Download complete\n\n5.为文件添加密码上面已经通过安全、私密和加密过的链接来发送了文件，这里是继续操作的命令。\n#输入命令：$  ffsend upload file-copy-rsync.sh --copy --passwordPassword:Upload completeShare link: https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;0742d24515&#x2F;#P7gcNiwZJ87vF8cumU71zA\n\n下载该文件时，它将要求你输入密码：\n$  ffsend download https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;0742d24515&#x2F;#P7gcNiwZJ87vF8cumU71zAThis file is protected with a password.Password:Download complete\n\n6. 限制文件被下载的次数$ ffsend upload file-copy-scp.sh --copy --downloads 10Upload completeShare link: https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;23cb923c4e&#x2F;#LVg6K0CIb7Y9KfJRNZDQGw\n\n下载同上一样\n7.查看下载链接的各种信息语法： ffsend info [Generated URL]\n#输入命令$ ffsend info https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;23cb923c4e&#x2F;#LVg6K0CIb7Y9KfJRNZDQGwID: 23cb923c4eName: file-copy-scp.shSize: 115 BMIME: application&#x2F;x-shDownloads: 3 of 10Expiry: 23h58m (86280s)\n\n8.查看传输历史语法： ffsend history\n#输入命令：$  ffsend history# LINK EXPIRY1 https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;23cb923c4e&#x2F;#LVg6K0CIb7Y9KfJRNZDQGw 23h57m2 https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;0742d24515&#x2F;#P7gcNiwZJ87vF8cumU71zA 23h55m3 https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;90aa5cfe67&#x2F;#hrwu6oXZRG2DNh8vOc3BGg 23h52m4 https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;a4062553f4&#x2F;#yy2_VyPaUMG5HwXZzYRmpQ 23h46m5 https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;74ff30e43e&#x2F;#NYfDOUp_Ai-RKg5g0fCZXw 23h44m6 https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;69afaab1f9&#x2F;#5z51_94jtxcUCJNNvf6RcA 23h43m\n\n9.删除分享链接语法：ffsend delete [Generated URL]\n$ ffsend delete https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;69afaab1f9&#x2F;#5z51_94jtxcUCJNNvf6RcAFile deleted","categories":["文章"],"tags":["ffsend","Firefox Send"]},{"title":"【Hellohao图床】基于Sping Boot开发的图床站，纯粹的响应式图片存放驿站","url":"/posts/16604/","content":"\n这是一个基于多家对象存储源的Spring Boot开源图床项目。系统使用 Spring Boot 搭建, 针对用户更方便的管理自己的图片管理拓展功能, 目前已经支持对接本地、网易，阿里，又拍，七牛、腾讯，FTP对象存储.\n前言本源码是有java语言基于springboot开发的图床站，并且毫无保留的把它开源了出来。\n主要功能支持：\n  支持 图片拖拽、截图软件直接(Ctrl+V)和图片URL地址上传。\n  对接本地、网易、阿里、又拍、七牛、腾讯、FTP等各大对象存储平台。\n  图片定期暂存（到期自动删除）\n  支持画廊分享模式(用户可把自己当前上传的图片以图片集的形式批量分享给好友)\n  支持上传者IP记录，并可配置IP黑名单操作\n  支持链接生成二维码。\n  支持开启/关闭API接口。\n  设置用户可用容量\n  扩容码生成（用户可使用扩容码进行容量扩充）\n  分发群组（配置用户群组，不同群组分发图片到不同对象存储）\n  首页背景动态/静态，以及简约模式设置\n  URL列表、缩略图。查看原图等功能。\n  图片鉴黄配置（开启后，每天固定时间进行非法图片监测）\n  游客、用户的上传管理\n  邮箱注册激活。\n  站点样式设置和上传规则配置等。\n  等等~~\n\n地址向导Github开源:https://github.com/Hello-hao/Tbed\n在线文档: http://doc.wwery.com/\n主站地址: http://tc.hellohao.cn/\n体验地址: http://129.28.173.126:8088/（用户名/密码均为admin）\n更新日志2019-11-29\n\n  √ 新增ip黑名单功能。\n  √ 再次优化上传前后台验证。\n  √ 提高首页打开速度。\n\n开发者交流群群名称： Hellohao图床开发者交流群\n群 号： 864800972\n系统预览\n\n\n\n\n\n运行环境\n  JDK 1.8\n  MySQL 5.5+\n\n详细部署教程\n部署教程分为：1.一键部署；2.手动部署。任选一种部署即可（手动能力强的推荐：手动部署）\n\n前言部署依赖于java环境：\nyum install java-1.8*\n\n一，自动部署创建数据库：创建mysql数据库picturebed，并导入picturebed.sql文件建表。\n执行如下命令，按步骤操作即可。yum install -y wget &amp;&amp; wget -O hellohao.sh http:&#x2F;&#x2F;www.hellohao.cn&#x2F;gg&#x2F;hellohao.sh &amp;&amp; bash hellohao.sh\n\n\n该方法简单粗暴，包括java环境，不需要去下载jar包，不需要自己去写命令运行。也不需要screen或者nohub之类的后台命令，让用户傻瓜式操作。\n注意事项：\n  安装：等项目完全部署成功后且确认图床可以访问，在控制台按Ctrl+C后退出即可。（若内有java环境，先在选择界面安装java环境，然后重新执行以上命名安装图床）\n  如果之前存在脚本安装过的图床：请先根据提示按3停止然后再按2卸载，才可以重新安装。\n  如果重启了服务器，则需要重新部署。没有开机自启。\n\n二，手动部署先下载编译包：**https://github.com/Hello-hao/Tbed/releases**，做准备并进行如下操作。\n全平台支持：Linux/Windows/unix（这里以linux宝塔环境举例子）：\n导入数据库\n\n创建数据库picturebed, 字符集选择 utf8后导入picturebed.sql  \n在应用商店搜索tomcat选择tomcat8版本下载安装（这里说明一下，其实我们并不需要tomcat，只是因为宝塔下载tomcat8自带java环境，而这个java环境正是我们需要的）\n配置文件打开 application.properties 修改 MySQL 和 服务器端口 等连接信息改成你服务器的信息.（端口号改不改都行，前提是保证其他程序没有被占用）\n#数据库账号picturebedspring.datasource.username&#x3D;root#数据库密码spring.datasource.password&#x3D;root#数据库链接地址spring.datasource.url&#x3D;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;picturebed?useUnicode&#x3D;true&amp;characterEncoding&#x3D;utf8&amp;serverTimezone&#x3D;GMT%2B8#端口server.port&#x3D;8088#鉴黄周期表达式 下方表达式为每天七点半执行#不懂请勿乱修改。具体可以参考官方文档http:&#x2F;&#x2F;doc.wwery.comExpression&#x3D;0 30 04 * * ?#下边的配置项不需要修改。mybatis.configuration.map-underscore-to-camel-case&#x3D;truemybatis.mapper-locations&#x3D;classpath:mapper&#x2F;*.xmllogging.level.cn.hellohao.dao&#x3D;debugspring.jackson.date-format&#x3D;yyyy-MM-dd HH:mm:ssspring.jackson.time-zone&#x3D;GMT+8spring.datasource.driver-class-name&#x3D;com.mysql.jdbc.Driverspring.datasource.type&#x3D;com.alibaba.druid.pool.DruidDataSourcespring.thymeleaf.cache&#x3D;falsemultipart.maxFileSize&#x3D;10240KBmultipart.maxRequestSize&#x3D;10240KBspring.thymeleaf.mode &#x3D; LEGACYHTML5spring.http.multipart.location&#x3D;&#x2F;data&#x2F;upload_tmp\n\n部署\njdk1.8和mysql数据库、还有配置文件，我们都改好了。接下来开始部署吧。在系统目录/home下新建一个javaweb目录把Tbed.jar和application.properties放到服务器你刚才新建的目录下：/home/javaweb，注意这两个文件必须要在同一目录下不能分开。\n启动项目在完成了上述步骤后，然后xshell链接你的服务器，进入你刚才的目录，然后执行一下命令.进入你的目录：\n[root@VM_0_15_centos ~]# cd &#x2F;home&#x2F;javaweb\n\n部署jar编译包：\n[root@VM_0_15_centos javaweb]# java -jar Tbed.jar\n\nok!等项目跑起来即可，如图：\n\n这里注意：记得把项目所需要的端口（8088）放行，否则访问不了！！\n启动后访问地址为：http://服务器IP:8088 , 8088就是你配置server.port=8088的端口.这样，你的站点就启动了。注意:启动后命令行是不能关闭的，否则你的站点就会不能访问。可以用nohup或者screen之类的命令后台运行。\n初始用户名：admin初始邮箱：admin初始密码admin\n视频教程全套部署视频：https://www.bilibili.com/video/av79137056/\n\n原创作者：Hellohao\n本文链接： http://www.hellohao.cn/?p=201\n\n","categories":["转载"],"tags":["hellohao图床"]},{"title":"goorm.io一款来自韩国的免费在线Web IDE平台","url":"/posts/40018/","content":"前言对于类似的在线的WEB IDE之前也介绍过几款Cloud9 ,Coding.net ！这里给大家分享一款韩国思密达的一款Web IDE！\n[toc]\n\n官网地址https://www.goorm.io/\n账号登录：https://accounts.goorm.io/signup\n登录地址：https://accounts.goorm.io/login\n控制面板：https://ide.goorm.io/my\n免费额度CPU使用率： 低\n内存：1GB\n储存：10GB\n容器数量：5\n协作者：5个/容器\n宾客：3/容器\n域名：3/容器\n虚拟化：KVM\n同时在线运行1个容器\n不支持永久在线运行\n不支持自定义域名\n付费套餐：https://ide.goorm.io/pricing\n操作步骤1）访问【注册地址】，填写相关信息注册账号！\n先需要邮箱接受验证URL，然后完成注册。\n2）访问【控制面板】，点击【New container】可以新建一个容器！\n3）填写相关内容！直接创建即可！\nRegion ：美国，韩国，德国，印度\nStack：包含目前主流的开发语言以及框架！\n支持添加Mysql，MangoDB！\n\n\n4）点击容器右上角的【⚙】可以看见的配置信息！\nBasic Information（基本信息）\n\nSetting（设置信息）\n\n网络端口映射设置\n\n剩下的是一些协作的配置，这里不多做说明了！\n4）终端中可以编写代码了~\n测试命令\npython -m http.server 443\n\n然后访问域名机可以了！\n\n测试IP54.180.119.192 （韩国）\n性能跑分----------------------------------------------------------------------CPU model            : Intel(R) Xeon(R) Platinum 8175M CPU @ 2.50GHzNumber of cores      : 2CPU frequency        : 2500.000 MHzTotal size of Disk   : 77.9 GB (63.0 GB Used)Total amount of Mem  : 7687 MB (2408 MB Used)Total amount of Swap : 8191 MB (18 MB Used)System uptime        : 0 days, 2 hour 24 minLoad average         : 0.38, 0.80, 1.20OS                   : Ubuntu 18.04.2 LTSArch                 : x86_64 (64 Bit)Kernel               : 4.4.0-1102-aws----------------------------------------------------------------------I&#x2F;O speed(1st run)   : 68.2 MB&#x2F;sI&#x2F;O speed(2nd run)   : 51.2 MB&#x2F;sI&#x2F;O speed(3rd run)   : 45.5 MB&#x2F;sAverage I&#x2F;O speed    : 55.0 MB&#x2F;s----------------------------------------------------------------------Node Name                       IPv4 address            Download SpeedCacheFly                        204.93.150.152          53.0MB&#x2F;sLinode, Tokyo2, JP              139.162.65.37           75.5MB&#x2F;sLinode, Singapore, SG           139.162.23.4            24.6MB&#x2F;sLinode, London, UK              176.58.107.39           9.25MB&#x2F;sLinode, Frankfurt, DE           139.162.130.8           8.87MB&#x2F;sLinode, Fremont, CA             50.116.14.9             17.6MB&#x2F;sSoftlayer, Dallas, TX           173.192.68.18           14.6MB&#x2F;sSoftlayer, Seattle, WA          67.228.112.250          17.6MB&#x2F;sSoftlayer, Frankfurt, DE        159.122.69.4            4.93MB&#x2F;sSoftlayer, Singapore, SG        119.81.28.170           25.5MB&#x2F;sSoftlayer, HongKong, CN         119.81.130.170          37.0MB&#x2F;s----------------------------------------------------------------------\n\n最后说明该免费的WEBIDE适合测试学习使用，不太适合酸酸等！CPU使用率不能太高，否则有封号的风险！\n容器能在线多久？目测是只要你链的终端就不会离线！\n摘自：goorm.io一款来自韩国的免费在线Web IDE平台 在此感谢\n","categories":["转载"],"tags":["goorm.io","Web IDE平台"]},{"title":"非华为笔记本安装华为share一碰传功能","url":"/posts/5585/","content":"软硬件要求：电脑端系统win10，支持无线网卡（5GWIFI）和蓝牙。手机端系统EMUI 9.0/Magic UI 2.1,多屏协同需要EMUI10.0，处理器980以上。NFC标签可以用NTAG213、215、216。\n1.伪装SN码按下win+X，选择使用管理员权限打开powershell\n\n输入wbemtest回车\n\n点连接=》再点连接=》点击勾选启用所有特权=》打开类Win32_BIOS=》增加属性Seria1Number， 数值选非NULL，填5EKPM18320000397,然后点保存对象。\n\n\n\n\n2.安装电脑管家打开文件夹，双击PCManager_Setup_10.0.2.59.exe运行安装电脑管家程序，复制一份要替换的文件。右键点击任务栏，选择任务管理器，找到MateBookService.exe右键选择打开文件所在位置，然后粘贴，选择替换目标中的文件，点击继续提供管理员权限，然后这时系统会提示文件正在占用是否重试，这再次找到MateBookService.exe右键点击。先点击结束任务后迅速点击重试，替换成功后重启电脑（原教程里面没有重启电脑这一项，但是我在安装的时候，MateBookService.exe没办法自动重启，所以我通过重启电脑来让这个程序重启。\n\n\n\n3.制作NFC标签按下WIN+R键，输入cmd回车.\n\n输入ipconfig /all回车\n\n记录蓝牙网络连接的物理地址，比如我的就是这个48-E2-44-BC-7B-F6。然后把它填在\nSN=5EKPM18320000397MAC=？？？？？？？？MODELID=00000505中间的“MAC=“后面，删去“-“，填充后就变成了\nSN=5EKPM18320000397MAC=48E244BC7BF6MODELID=00000505。再把这串字符通过二维码转换字符转换一下，比如使用草料二维码。\n\n使用手机安装一碰传助手APP，然后用APP扫描一下这个二维码，根据提示用手机NFC扫一下准备好的NFC标签激活就可以正常使用了。\n4.完成展示\n5.所需软件资源https://pan.baidu.com/s/1MAdRdN6AE9b7yqHZU0Ce4A密码：it46\n","categories":["分享"],"tags":["huaweishare"]},{"title":"一款由Java开发优秀的尤娜博客-（una-boot）系统","url":"/posts/35104/","content":"简介​ 尤娜(una-boot)是一款基于Spring Boot 2.0构建的国产Java博客系统，在此之前，我不断的尝试使用过不同的博客系统，如基于PHP的WordPress、基于Node.js的静态博客系统Hexo、基于Java的CMS系统JEECMS和MCMS等，这些系统都有着不错的表现，能够满足绝大多数的需求场景。那问题来了，我为什么还要重复性的造一个“轮子”呢？一个简单的比喻，前面提到的系统都很强大，有的像“卡车轮子”，有的像“坦克履带”，有的像“跑车轮子”,它们的性能，功能都很强大。然而，作为一个经常写博客文章的我，我现在需要的是小巧的“电摩轮子”。基于这样的一个需求，也参考了上述诸多优秀CMS系统的设计，站在“巨人”的肩膀上，完成了尤娜博客系统的设计和开发。\n​ 尤娜的初衷是提供一个极简的内容创作平台，给热爱技术，热爱写作的小伙伴一个简洁，易用的写作软件。因此，尤娜博客系统在设计之初就只保留了一个博客网站最核心的几个功能模块，它们分别是栏目、文章、主题、友链、标签、归档、存储和评论，共计八个主要核心功能。为了尽可能的降低尤娜的使用门槛，尤娜基于Freemarker模板引擎开发了一套内置的博客标签，通过使用这些标签，对于不能熟练使用Java编程语言的小伙伴，也能快速的构建出一套漂亮的博客主题。尤娜会自动根据各类标签加载对应的博客数据，完成主题的渲染。\n[toc]\n主要特点\n  完全开源：基于AGPL-3.0协议开源\n  快速初始化：通过安装向导，快速完成站点初始化工作\n  标签化建站：尤娜内置了内容标签和内容函数，可以快速的完成模板的制作\n  多主题：支持多个主题自由切换，快速改变站点风格，而不需重新编译后台代码\n  Markdown支持: 内置markdown编辑器\n  文件存储：支持本地存储和CDN存储\n  评论支持：内置了Gitalk评论函数，只需设置相关的Gitalk参数即可拥有评论功能\n  Spring Boot: 基于Spring Boot 2.0版本进行构建\n\n开发环境​ 建议您使用下面推荐的环境与尤娜玩耍，以避免版本不一致所带来的困扰\n\n  OS: Windows 7/10,Linux\n  IDE: Eclipse，IntelliJ IDEA(推荐)\n  DB：MySQL 5.6+\n  JDK: JDK8+\n  Web Server: Apache Tomcat 8+\n  Maven: Maven 3.0+\n\n技术框架尤娜所使用的开发框架明细：\n框架\n说明\n官网\nSpring Framework\n轻量级(相对而言)的Java开发框架\nhttps://spring.io/projects/spring-framework\nSpring Boot\nJava Web开发脚手架\nhttps://spring.io/projects/spring-boot\nApache Shiro\n安全控制框架\nhttps://shiro.apache.org\nHibernate\n对象关系映射框架\nhttp://hibernate.org\nFreemarker\n视图模板引擎\nhttps://freemarker.apache.org\nLog4J\n日志记录组件\nhttps://logging.apache.org\nDruid\n数据库链接池\nhttps://druid.apache.org\nFastJSON\nJSON解析库\nFastJson\nEhCache\n基于Java的进程内缓存框架\nhttp://www.ehcache.org\npinyin4j\n中文转拼音的Java库\nhttps://sourceforge.net/projects/pinyin4j/\nMaven\n项目构建\nhttps://maven.apache.org\nlombok\n代码生成器\nhttps://projectlombok.org\n快速开始​ 你可以按照下列的方式来获取并运行尤娜博客系统。\n获取源代码​ 你可以使用git工具从Github或者Gitee上获取尤娜博客最新的源代码：\ngit clone https:&#x2F;&#x2F;github.com&#x2F;ramostear&#x2F;UnaBoot-Pro.git\n\ngit clone https:&#x2F;&#x2F;gitee.com&#x2F;ramostear&#x2F;UnaBoot-Pro.git\n\n除此之外，我还提供了可在Tomcat中运行的war包，你可以访问https://gitee.com/ramostear/UnaBoot-Pro/releases/una-boot-v1.2.0或者https://github.com/ramostear/UnaBoot-Pro/releases/tag/una-boot-v1.2.0 下载最新的war到本地运行。\n\nGitee下载\n\nGithub下载\n编译源代码​ 如果你是直接下载项目war包，请跳过此步骤。代码克隆到本地后，你可以使用命令行工具或者IDEA对项目源码进行编译，命令如下：\nmvn compile -Dmaven.test.skip&#x3D;true\n\n待项目编译完成后，便可执行打包操作。\n\n注意：\n如果使用IDE自带的Maven工具对项目进行编译时，请检查你的IDE是否安装了Lombok插件，如果缺少Lombok插件，项目编译将会失败。\n\n项目打包​ 项目编译完成后，需要对项目进行打包才能运行，如果你使用的是IntelliJ IDEA或者STS等工具，可以直接运行UnaBootProApplication.java文件中的main()方法来启动项目。如果你想将项目放到外部的Tomcat中运行，请参照下面的打包命令：\nmvn clean package -Dmaven.test.skip&#x3D;true\n\n打包成功后，你可以在项目的target目录中找到一份名为una-boot-pro-1.2.0.war的文件包，此文件就是运行项目的最终文件。\n启动项目​ 将打包好的或者下载的una-boot-pro-1.2.0.war文件拷贝到Apache Tomcat安装目录下的webapps目录中，然后启动Apache Tomcat。\n\n注意：\n尤娜博客系统需要在Apache Tomcat 8及以上的版本中运行\n\n\n拷贝war文件到tomcat\n\n启动Apache Tomcat\nApache Tomcat启动完成后，在浏览器中按照下列的格式输入访问地址并访问\nhttp:&#x2F;&#x2F;[localhost127.0.0.1]:[8080&#x2F;你自己的tomcat端口号]&#x2F;una-boot-pro-1.2.0&#x2F;unaboot&#x2F;install.html\n\n提示\n如果是第一次启动并访问尤娜博客系统，请在MySQL数据库管理系统中创建一个空的数据库，该数据库在的名称在初始化博客时需要使用。如本次演示所使用的db_una_boot_pro_demo.\n\n安装并初始化尤娜安装向导​ 以我在本地演示为例，浏览器中输入http://localhost:8080/una-boot-pro-1.2.0/unaboot/install.html ,访问成功后，你将看到入下的安装向导界面：\n\n请阅读UnaBoot的许可协议，并勾选同意按钮后，点击“下一步”按钮，填写数据库相关的信息。\n数据库信息​ 阅读完许可协议并同意后，你可进入数据库配置界面。在此界面中，你需要提供MySQL数据的主机地址（例如localhost或127.0.0.1），数据库的端口号(默认端口号为3306)，存储尤娜博客数据的数据库名称(例如在上一步中创建的db_una_boot_pro_demo数据库)，数据库的访问账号以及访问密码。\n\n网站信息​ 在完成数据库配置后，你可以进入站点信息配置界面，配置站点的名称，站点域名，管理员账号以及管理员登录密码，界面如下：\n\n信息确认无误后，点击“确认”按钮，开始初始化博客系统。\n\n提示\n请牢记你的站点管理员账号和密码\n\n系统初始化成功后，你将收到如下的系统提示信息：\n\n点击“确定”按钮，系统将跳转到后台登录页面，输入此前配置的管理员账号和密码，登录系统后台。\n\n自此，整个博客的初始化工作完成。接下来，你可以使用自己的管理员账号和密码登录尤娜博客后台，对博客系统进行管理。\n\n重要提示\n如果你在安装初始化的过程中，没能成功初始化系统，请检查war包中的WEB-INF/lib/目录下有无ibatis-common-2.2.0.jar文件，如果没有，请将WEB-INF/lib-provided/目录下的ibatis-common-2.2.0.jar文件拷贝到WEB-INF/lib/目录中，然后重启Apache Tomcat。\nPs:如果你下载的是war包，一定要检查这一点，不然会显示系统初始化失败。\n\n尤娜博客后台管理系统一览​ 在此小结中，我将对尤娜博客后台管理系统做一个简要的介绍。\n后台主页​ 博客后台主页不要包括了常用功能的快捷入口，如文档地址，接口地址，写作入口，栏目管理入口，网站设置入口，主题管理入口，全文检索设置按钮，缓存清理按钮等。界面如下：\n\n尤娜后台管理系统将功能分为了三个板块，分别时内容管理，配置管理和系统管理，下面将分别介绍。\n内容管理​ 内容管理板块包含了用户管理，栏目管理，博客管理，主题管理，友链管理和标签管理，其相应的界面如下：\n\n用户管理\n\n栏目管理\n\n博客管理\n\n写作页面\n\n主题管理\n\n友情连接管理\n\n标签管理\n配置管理​ 配置管理板块主要包括网站常规配置(如站点名称，域名，描述，关键词，Logo，Favicon，邮箱，备案号，主题等)，存储配置（分为本地存储或七牛云存储）,评论配置(关闭评论或开启Gitalk评论插件)。\n\n网站常规配置\n\n文件存储配置\n\nGitalk评论插件配置\n系统管理​ 系统管理主要时针对尤娜博客的系统级别的管理，包括定时任务管理，API管理，系统实时日志管理和Druid监控。\n\n自定义定时任务管理\n\n基于Swagger的API管理\n\n系统实时日志\n\n数据源监控\n来自:https://www.ramostear.com/blog/2020/03/22/m763440m.html 在此感谢作者无私的开源\n","categories":["测试"],"tags":["una-boot","尤娜博客系统"]},{"title":"漫画赏析：Linux 内核到底长啥样","url":"/posts/45392/","content":"今天，我来为大家解读一幅来自 TurnOff.us 的漫画 “InSide The Linux Kernel” 。 TurnOff.us 是一个极客漫画网站，作者Daniel Stori 画了一些非常有趣的关于编程语言、Web、云计算、Linux 相关的漫画。今天解读的便是其中的一篇。\n在开始，我们先来看看这幅漫画的全貌！\n\n这幅漫画是以一个房子的侧方刨面图来绘画的。使用这样的一个房子来代表 Linux 内核。\n地基作为一个房子，最重要的莫过于其地基，在这个图片里，我们也从最下面的地基开始看起：\n\n地基\n地基（底层）由一排排的文件柜组成，井然有序，文件柜里放置着“文件”——电脑中的文件。左上角，有一只胸前挂着 421 号牌的小企鹅，它表示着 PID（进程 IDProcess ID） 为 421 的进程，它正在查看文件柜中的文件，这代表系统中正有一个进程在访问文件系统。在右下角有一只小狗，它是看门狗watchdog ，这代表对文件系统的监控。\n\n一层（地面层）\n一层（地面层）看完了地基，接下来我们来看地基上面的一层，都有哪些东西。\n\n进程表\n在这一层，最引人瞩目的莫过于中间的一块垫子，众多小企鹅在围着着桌子坐着。这个垫子的区域代表进程表。\n左上角有一个小企鹅，站着，仿佛在说些什么这显然是一位家长式的人物，不过看起来周围坐的那些小企鹅不是很听话——你看有好多走神、自顾自聊天的——“喂喂，说你呢，哇塞娃（171），转过身来”。它代表着 Linux 内核中的初始化（init）进程，也就是我们常说的 PID 为 1 的进程。桌子上坐的小企鹅都在等待状态wait中，等待工作任务。\n\n看门狗\n瞧瞧，垫子（进程表）两旁有两只小狗，它会监控小企鹅的状态（监控进程），当小企鹅们不听话时，它就会汪汪地叫喊起来。\n\nhttp 进程\n在这层的左侧，有一只号牌为 1341 的小企鹅，守在门口，门上写着 80，说明这个 PID 为 1341 的小企鹅负责接待 80 端口，也就是我们常说的 HTTP （网站）的端口。小企鹅头上有一片羽毛，这片羽毛大有来历，它是著名的 HTTP 服务器 Apache 的 Logo。喏，就是这只：\n\napache logo\n向右看，我们可以看到这里仍有一扇门，门上写着 21，但是，看起来这扇门似乎年久失修，上面的门牌号都歪了，门口也没人守着。看起来这个 21 端口的 FTP 协议有点老旧了，目前用的人也比以前少了，以至于这里都没人接待了。\n\n无人看守的 FTP 进程\n而在最右侧的一个门牌号 22 的们的待遇就大为不同，居然有一只带着墨镜的小企鹅在守着，看起来好酷啊，它是黑衣人叔叔吗？为什么要这么酷的一个企鹅呢，因为 22 端口是 SSH 端口，是一个非常重要的远程连接端口，通常通过这个端口进行远程管理，所以对这个端口进来的人要仔细审查。\n\nSSH 守护进程\n它的身上写着 52，说明它是第 52 个小企鹅。\n\n到达文件系统\n在图片的左上角，有一个向下台阶。这个台阶是底层（地基）的文件系统中的，进程们可以通过这个台阶，到文件系统中去读取文件，进行操作。\n\nCron 任务\n在这一层中，有一个身上写着 217 的小企鹅，他正满头大汗地看着自己的手表。这只小企鹅就是定时任务（Crontab），他会时刻关注时间，查看是否要去做某个工作。\n\n管道\n在图片的中部，有两个小企鹅扛着管道（PipeLine）在行走，一只小企鹅可以把自己手上的东西通过这个管道，传递给后面的小企鹅。不过怎么看起来前面这种（男？）企鹅累得满头大汗，而后面那只（女？）企鹅似乎游刃有余——喂喂，前面那个，裤子快掉了~\n\nWine\n在这一层还有另外的一个小企鹅，它手上拿着一杯红酒，身上写着 411，看起来有点不胜酒力。它就是红酒（Wine）小企鹅,它可以干（执行）一些来自 Windows 的任务。\n跃层在一层之上，还有一个跃层，这里有很多不同的屏幕，每个屏幕上写着 TTY（这就是对外的终端）。比如说最左边 tty4 上输入了“fre”——这是想输入“freshmeat…”么 ：d ；它旁边的 tty2 和 tty3 就正常多了，看起来是比较正常的命令；tty7 显示的图形界面嗳，对，图形界面（X Window）一般就在 7 号终端；tty5 和 tty6 是空的，这表示这两个终端没人用。等等，tty1 呢？\n\n跃层\ntty（终端）是对外沟通的渠道之一，但是，不是每一个进程都需要 tty，某些进程可以直接通过其他途径（比如端口）来和外部进行通信，对外提供服务的，所以，这一层不是完整的一层，只是个跃层。\n好了，我们有落下什么吗？\n\n小丑？\n这小丑是谁啊？\n啊哈，我也不知道，或许是病毒？你说呢？\n英文：Daniel Stori，解读：LCTT - HuanCheng Bai 转载： https://linux.cn/article-8290-1.html\n","categories":["文章"],"tags":["Linux内核"]},{"title":"linux下使用screen或则nohup将任务放到后台运行","url":"/posts/12937/","content":"1、简介Screen是一款由GNU计划开发的用于命令行终端切换的自由软件。用户可以通过该软件同时连接多个本地或远程的命令行会话，并在其间自由切换。GNU Screen可以看作是窗口管理器的命令行界面版本。它提供了统一的管理多个会话的界面和相应的功能。\n在Screen环境下，所有的会话都独立的运行，并拥有各自的编号、输入、输出和窗口缓存。用户可以通过快捷键在不同的窗口下切换，并可以自由的重定向各个窗口的输入和输出。\n2、语法$&gt; screen [-AmRvx -ls -wipe][-d &lt;作业名称&gt;][-h &lt;行数&gt;][-r &lt;作业名称&gt;][-s ][-S &lt;作业名称&gt;]\n-A 　将所有的视窗都调整为目前终端机的大小。-d &lt;作业名称&gt; 　将指定的screen作业离线。-h &lt;行数&gt; 　指定视窗的缓冲区行数。-m 　即使目前已在作业中的screen作业，仍强制建立新的screen作业。-r &lt;作业名称&gt; 　恢复离线的screen作业。-R 　先试图恢复离线的作业。若找不到离线的作业，即建立新的screen作业。-s 　指定建立新视窗时，所要执行的shell。-S &lt;作业名称&gt; 　指定screen作业的名称。-v 　显示版本信息。-x 　恢复之前离线的screen作业。-ls或–list 　显示目前所有的screen作业。-wipe 　检查目前所有的screen作业，并删除已经无法使用的screen作业。3、常用screen参数screen -S yourname -&gt; 新建一个叫yourname的sessionscreen -ls -&gt; 列出当前所有的sessionscreen -r yourname -&gt; 回到yourname这个sessionscreen -d yourname -&gt; 远程detach某个sessionscreen -d -r yourname -&gt; 结束当前session并回到yourname这个session4、在Session下，使用ctrl+a(C-a) C-a ? -&gt; 显示所有键绑定信息C-a c -&gt; 创建一个新的运行shell的窗口并切换到该窗口C-a n -&gt; Next，切换到下一个 windowC-a p -&gt; Previous，切换到前一个 windowC-a 0..9 -&gt; 切换到第 0..9 个 windowCtrl+a [Space] -&gt; 由视窗0循序切换到视窗9C-a C-a -&gt; 在两个最近使用的 window 间切换C-a x -&gt; 锁住当前的 window，需用用户密码解锁C-a d -&gt; detach，暂时离开当前session，将目前的 screen session (可能含有多个 windows) 丢到后台执行，并会回到还没进 screen 时的状态，此时在 screen session 里，每个 window 内运行的 process (无论是前台/后台)都在继续执行，即使 logout 也不影响。C-a z -&gt; 把当前session放到后台执行，用 shell 的 fg 命令则可回去。C-a w -&gt; 显示所有窗口列表C-a t -&gt; time，显示当前时间，和系统的 loadC-a k -&gt; kill window，强行关闭当前的 windowC-a [ -&gt; 进入 copy mode，在 copy mode 下可以回滚、搜索、复制就像用使用 vi 一样C-b Backward，PageUpC-f Forward，PageDownH(大写) High，将光标移至左上角L Low，将光标移至左下角0 移到行首$ 行末w forward one word，以字为单位往前移b backward one word，以字为单位往后移Space 第一次按为标记区起点，第二次按为终点Esc 结束 copy modeC-a ] -&gt; paste，把刚刚在 copy mode 选定的内容贴上5、常用操作创建会话（-m 强制）：\nscreen -dmS session_name\nsession_name session名称关闭会话：\nscreen -X -S [session # you want to kill] quit查看所有会话：\nscreen -ls进入会话：\nscreen -r session_name\n如何安装 screenscreen 在一些流行的发行版上已经预安装了。你可以使用下面的命令检查是否已经在你的服务器上安装了。\nscreen -v Screen version 4.00.03 (FAU)  \n\n如果在 Linux 中还没有 screen，你可以使用系统提供的包管理器很简单地安装它。\nCentOS/RedHat/Fedora\nyum -y install screen \n\nUbuntu/Debian\napt-get -y install screen\n\n1、screen使用举例1.1、创建一个新screen窗口\n[root@imzcy ~]# screen -S jboss-blog[root@imzcy ~]# java -jar blog-imzcy.jar[root@imzcy ~]# \n\n1.2、使用Ctrl + A + D组合键退出screen窗口\n[detached from 9832.jboss-blog][root@localhost ~]# \n\n1.3、列出已经创建的screen窗口\n[root@localhost ~]# screen -lsThere is a screen on:        9832.jboss-blog (Detached)1 Socket in &#x2F;var&#x2F;run&#x2F;screen&#x2F;S-root. [root@imzcy ~]# \n\n1.4、恢复到指定的screen窗口\n[root@imzcy ~]# screen -r jboss-blog[root@imzcy ~]# screen -r 9832\n\n1.5、退出并删除当前screen窗口\nscreen -S session_name -X quit\n\n[root@localhost ~]# exitexit [screen is terminating][root@localhost ~]# screen -lsNo Sockets found in &#x2F;var&#x2F;run&#x2F;screen&#x2F;S-root. [root@localhost ~]# \n\n常用选项：-ls ：列出所有screen窗口-S ：自定义一个名称，创建一个新的screen窗口并自动切换进去-r ：进入到指定screen窗口，可以指定窗口名称或窗口ID-d ：将screen窗口与在连接的会话分离并重新连接到当前会话Ctrl + A + D ：退出当前screen窗口exit ：退出并删除当前的screen窗口\nscreen使用中常见问题之：There is no screen to be resumed matching jboss-blog.  正常创建的screen窗口没有被使用的话，使用screen -ls查出来的状态是(Detached); 如果你创建的screen窗口被其他连接到当前服务器的用户使用了，那么查出来的状态是(Attached)。这个时候你直接使用screen -r 窗口名称是进不去该窗口的。必须先使用-d选项将screen窗口和对方的会话断开。才能继续使用。\n[root@imzcy ~]# screen -lsThere is a screen on:        9849.jboss-blog (Attached)        &#x2F;&#x2F;可以看到当前状态是Attached，说明可能正在被其他人使用1 Socket in &#x2F;var&#x2F;run&#x2F;screen&#x2F;S-root. [root@imzcy ~]# [root@imzcy ~]# screen -r jboss-blog        &#x2F;&#x2F;这个使用直接使用screen -r是进入不到这个窗口的，会报下面的错误There is a screen on:        9849.jboss-blog (Attached)There is no screen to be resumed matching jboss-blog.[root@imzcy ~]#   [root@imzcy ~]# screen -d jboss-blog        &#x2F;&#x2F;使用screen -d将制定screen窗口与会话分离[9849.jboss-blog detached.][root@imzcy ~]# [root@imzcy ~]# screen -r jboss-blog        &#x2F;&#x2F;这个是后就可以使用screen -r进入窗口了   [remote detached from 9849.jboss-blog]        &#x2F;&#x2F;对方那边会提示screen窗口被远程分离了[root@imzcy ~]# \n\n2、nohup使用举例将jar包放到后台运行，并且重定向其错误输出和标准输出到当前目录下的blog.log文件中\n[root@imzcy ~]# nohup java -jar blog-imzcy.jar &gt;blog.log 2&gt;&amp;1 &amp;[1] 9900[root@imzcy ~]# 使用tail -f查看运行状态[root@imzcy ~]# tail -f blog.log  查看nohup运行jar包的进程号[root@imzcy ~]# ps -ef grep &quot;\\-jar&quot;\n\n参考原文链接：Linux中的screen命令使用\nlinux下使用screen或则nohup将任务放到后台运行\n","categories":["转载"],"tags":["nohup","screen"]},{"title":"首款iOS虚拟机UTM-免越狱在iPhone iPad 上安装 Windows/Linux/安卓系统","url":"/posts/32512/","content":"[toc]\n话说在 iPad、iPhone (iOS) 上安装和运行 Windows / Linux / Android 系统一直是很多人的梦想。以前我们只能通过“远程桌面控制”的方式来曲线圆梦，但这始终没那味儿。\n在 Mac 和 PC 上，我们知道有 Parallels Desktop 和 VMWare 等虚拟机软件，能让我们轻松安装并模拟运行各种不同操作系统的软件和游戏。而苹果的 iOS 设备尽管性能卓越，却一直缺少了虚拟机这样的神器，直到「UTM 虚拟机」的出现，iOS 终于被赋予了新的能力…\n1. UTM 虚拟机 - 在 iPhone、iPad 上安装 Windows！作为业界性能第一梯队的移动设备，苹果的 iPhone 和 iPad 用途和生产力一直在被发掘和拓展，而这次可爱的开发者们又为大家带来了一款梦寐以求的工具——iOS 上的 UTM 虚拟机软件！这应该也是 iOS 有史以来首款具有操作实用性的模拟器软件了，他们真的做到了！\nUTM 虚拟机基于 QEMU 项目开发而来，完全免费开源。它能让你在 iPhone、iPad 等 iOS 设备上安装其他操作系统，包括 Windows、Linux，甚至是 Android 安卓系统！而且 UTM 还不需要 iOS 越狱就能安装 (但要想办法给 .ipa 签名)，使用难度和门槛都比较低，适合广大喜欢搞机的朋友折腾。\n\niPad 使用 UTM 虚拟机安装运行 Windows7\n而虚拟机软件不像“刷固件”或原生安装系统那样，它不会对原有设备的系统造成任何修改和影响，腻了就删掉 APP 即可，所以随意玩玩也不会有什么后果，不必担心把手机或 iPad 搞坏。\n\nUTM 虚拟机在 iPhone 上安装运行 Windows 10\n看到这里，你的 iPhone 和 iPad 是不是已经在蠢蠢欲动了呀？！毕竟 iOS 这次终于可以真正安装和运行 .exe 了！ 那下面我们看看实测情况怎么样吧。\n2. iOS UTM 虚拟机运行速度 - 已具有可用性实际上手测试 UTM 虚拟机，无论是安装过程还是运行 Windows7、XP 等系统都已经具有“可用性”了，甚至也能装上 Windows 10！虽不能说它有多快多流畅，但“基本能用”就已经让无数人泪流满面了吧，这也是 iOS 虚拟化跨出的伟大一步啊，下面我们看看运行效果如何。\n3. iPad 用 UTM 虚拟机运行 WinXP 玩 CS 游戏 (半条命 / Half-Life) 演示视频：当然，由于 iOS 设备本身缺少了硬件虚拟化的支持，它没办法完全利用好自己全部的硬件性能，很多时候无硬件加速，因此虚拟机的运行速度一般，与 Parallels Desktop、VMWare 之流的肯定没法比，也无法直接使用 KVM 之类的虚拟化解决方案。\n4. iPad 安装 Windows 7点击开始播放视频\nUTM 官方表示，由于代码上的限制目前非越狱版本的 UTM 最多仅能利用硬件 70% 的性能，如果日后推出越狱版的 UTM，或许可以 100% 利用硬件性能。目前官方推荐你使用 UTM 虚拟机跑一些分辨率低且 UI 较为简单的系统 (比如 Linux 命令行) 来获得更好的体验。\n从视频可以看出，用 UTM 在新款的 iOS 设备上运行 Windows 和 Linux 都勉强能算可一用，但似乎还无法联网有点可惜。而比较贪心的朋友还想在 iPhone 上流畅运行 Android 系统，但因为 UTM 仅能跑 x86 版的安卓系统，目前跑是能跑起来，但速度比较感人，视频来自一銘劉學珄。\n5. 在 iPhone 上安装运行 Android 系统点击开始播放视频\n总之，有条件的，尽量用最新款的 iPhone 和 iPad 测试以获得最佳的运行效果，老旧的型号性能肯定会吃力一些。另外，玩虚拟机时，也需要确保设备有足够的剩余存储空间 (比如 Windows 可能要预留 30GB) 来保存镜像和虚拟机使用哦。\n6. iOS 安装 UTM 虚拟机方法教程：由于 UTM 虚拟机涉及到版权和代码问题，是无法上架 AppStore 的，因此只能通过其他方法安装。有两种方法，要么是给 iOS 设备越狱，要么需要第三方签名工具。\n选择 1：iOS 越狱刚好之前已有黑客团队发布了 iOS 13.1 的越狱工具 unc0ver，如果你的设备符合条件，而你又是个越狱党的话，那么给 iPhone / iPad 越狱了，再借助 Cydia Impactor 和 ReProvision 等工具来安装未签名的 ipa，就能使用 UTM 的安装包了。\n选择 2：使用开发者证书给 .ipa 签名对于没有越狱的设备，只能通过给 .ipa 安装包签名的方式将 UTM 安装到你的设备上了。但这里也有门槛，按「正常途径」来说，你需要注册为“苹果开发者”(区分免费账号和支付$99/每年的付费账号)，才能获得“开发者证书”来给 IPA 签名。\n\n  免费苹果开发者账号，给 IPA 签名一次有效 7 天，之后需要续签才能继续运行\n  付费苹果开发者账号，给 IPA 签名一次有效 1 年，之后需要续签才能继续运行\n  注意：iOS 13.3.1 加了限制，免费开发者已无法签名，如果你还是 13.3 并希望使用免费帐号签名，那么请不要升级！已升 13.3.1 的同学只能用付费账号签名。\n\n当有开发者证书之后，你就可以使用 iOS App Signer 工具给 UTM .ipa 安装包签名，就能愉快地使用了。当然，如果你有朋友是付费开发者，也可以让别人帮自己签名，大家各显神通吧。\n选择 3：使用第三方签名工具如果你没有开发者账号/证书，也不想越狱，那还可以考虑试试网上其他的一些“第三方 iOS 签名工具/服务”，比如 AppCake。这类工具涉及到版权和安全性问题，他们会记录你的设备 UDID 或收集一些统计数据什么的，不好说会否影响系统安全或有没任何其他副作用，只能说见仁见智了，反正就像使用盗版一样，自己斟酌呗。\nAppCake 就像一个“黑市版”的商店（类似 PP 助手之类的），它本身无需越狱即可安装，你可以借助它来安装其他未签名的 IPA。首先使用 iOS 设备去下载 AppCake.ipa 进行安装。之后，就可以通过 AppCake 的 APP 来安装 UTM 虚拟机了。\n立即安装 AppCake (iOS)请使用 iOS 设备点击此按钮\n注意：AppCake 需要信任描述文件后才能使用，大家可以参考的欢喜糖伈同学的制作的视频教程进行操作。\n通过 AppCake 免越狱 iOS 安装 UTM 虚拟机教程：点击开始播放视频\n另一英文版教程，同样是通过 AppCake 安装 UTM：点击开始播放视频\niOS 安装 UTM 虚拟机总结：总之，iOS 安装 UTM 虚拟机最麻烦的地方在于给 ipa 签名，否则不越狱是无法安装使用的。最安全合规的做法是使用“付费的开发者账号”给 UTM 签名，这毕竟是苹果官方的途径，可靠性最高，只是 iOS 13.3.1 上会有成本 (iOS 13.3 可以免费 7 天不断重签)。而使用第三方的签名工具虽然免费，但安全性就只能由大家斟酌了。\n写在后面：目前 UTM 虚拟机还只是预览版，可能闪退 Bug 还比较多，性能优化也还有很长的路要走。但毕竟这是第一个具有可用性的 iOS 虚拟机软件，而且开源免费，确实还是值得一赞的。\n当然，iOS 除了玩虚拟机外，其实以往“远程”的方式也有很多可玩性，除常见的控制电脑桌面，你甚至还能使用 Moonlight、Steam Link 等让 iPad / iPhone 远程串流玩 PC 游戏。\n甚至 PS4、XBox 游戏机也都各自推出了串流客户端可让 iOS 设备作为显示器无线游玩，加上新版 iOS 还能连接蓝牙手柄了，所以可折腾的乐趣还是很多的。\n本文链接：https://www.iplaysoft.com/utm.html\n相关文件下载地址官方网站：访问软件性质：免费开源\nUTM ipa文件下载\n","categories":["转载"],"tags":["iOS虚拟机","UTM"]},{"title":"使用MOVER.IO文件迁移服务互通OneDrive/GoogleDrive/Dropbox等网盘","url":"/posts/62355/","content":"简介可能在大家手里面早就有了几个OneDrive的号，有个人号，E5管理号，A1子号，A1P子号，世纪互联子号，可是都是空的，也不敢存太多东西，要是能够转存资源就好了，刚好发现了一个比较优秀的网站，可以转存多种主流网盘(注:国外的)，当然也包括OneDrive不同域之间的转存，最重要的是，完全免费，只有一点小限制，而它这就是 mover.io。\n[toc]\n\n这个网站之前就是网盘搬家类的，就在去年2019年10月21号，被微软收购了(巨硬有钱任性)，现在用于将云文件迁移到OFFICE365(包括谷歌网盘，亚马逊等)，只进不出，接下来简单介绍一下!\n官网地址https://mover.io\n账号注册使用任意邮箱即可注册，注册过程会验证邮箱​，需要去邮箱点击验证，电话号码不会验证！\n\n连接器Mover 将十几个云服务提供商、web服务和数据库链接到Office 365，包括OneDrive和SharePoint Online。我们亲切地称这些链接为我们的连接器。\n你为什么要用我们的连接器？以下是我们最喜欢的两个理由：\n\n  快速、方便、安全地将多个用户和大数据量迁移到Microsoft。\n  通过我们基于web的服务复制文件而不是使用桌面同步工具来节省带宽。\n\n主持列表Mover Agent / Amazon S3 / Amazon WorkDocs / Microsoft Azure / Box / Dropbox / Egnyte / FTP / Google Drive / Office 365 / OneDrive / SFTP / SharePoint Online / WebDAV\n\n使用方法注册成功后，进入网页，务必使用​电脑打开网页，手机打开网页可能会被折叠，导致文件夹打不开，如下图，电脑打开网页和手机打开的网页(手机Chrome已开启桌面版网页)。\n\n数据源数据源基本上 连接器 支持的云服务商都支持！只要授权登录即可！非常方便！\n目的地目前仅支持微软家族的存储服务！\nAzure Blob Storage / Office 365 (OneDrive/SharePoint Admin) / OneDrive Consumer / OneDrive for Business (Single User)\n\n账号选择？我的微软的账号，到底选择哪个授权登录呢？其实多试几次就知道了！\nOneDrive Consumer  : 普通的微软账号\nOneDrive for Business (Single User) ： A1 / A1P / E3 /E5 等商业版账号\nOffice 365 (OneDrive/SharePoint Admin) ：A1 / A1P / E3 /E5 等商业版全局管理账号以及SharePoint账号\n数据迁移操作比较简单，只需要将 复制源(Source) 和 目标(Destination) 都授权了，就能愉快的玩耍了！\n传输的速度也是非常快的！！\n我只测试了 OneDrive -&gt; OneDrive 和 Google Drive -&gt; OneDrive ，一般速度大概每分钟传输1-2GB。\n更多功能自行探索(其实功能就那几个，多试试)​~~\n\n\n\n使用缺点\n 团队盘(A1，E5，A1P等等)限制单文件大小15G。\n 个人盘限制单文件大小10g(我也不知道怎么回事，可能是网站规则限制吧)。\n 生成的任务删除不了，只能暂停。\n 只能转存到OneDrive，不能转到其他地方。\n 无法自动同步更新，只能手动点击。\n\n使用优点\n 免费(不知道什么时候会收费，现在没有)。\n 不限制网盘数，不限制总流量。\n 可以自动跳过同目录重复文件。\n 支持不同域的OneDrive。\n 官宣是使用的Windows Azure来传输的。\n\n其他说明发现这个平台还支持FTP传输！这个可以用来做一些FTP备份使用，比如网站数据/数据库的备份！\n摘自： https://51.ruyo.net/15587.html 有部分删改 感谢\n","categories":["转载"],"tags":["网盘","Dropbox","GoogleDrive","MOVER.IO","onedrive","文件迁移"]},{"title":"Linux umount命令","url":"/posts/8600/","content":"Linux umount命令用于卸除文件系统。 umount可卸除目前挂在Linux目录中的文件系统。\n语法umount [-ahnrvV][-t &lt;文件系统类型&gt;][文件系统]\n参数：\n\n  -a 卸除/etc/mtab中记录的所有文件系统。\n  -h 显示帮助。\n  -n 卸除时不要将信息存入/etc/mtab文件中。\n  -r 若无法成功卸除，则尝试以只读的方式重新挂入文件系统。\n  -t&lt;文件系统类型&gt; 仅卸除选项中所指定的文件系统。\n  -v 执行时显示详细的信息。\n  -V 显示版本信息。\n  [文件系统] 除了直接指定文件系统外，也可以用设备名称或挂入点来表示文件系统。\n\n实例下面两条命令分别通过设备名和挂载点卸载文件系统，同时输出详细信息：\n# umount -v /dev/sda1          通过设备名卸载/dev/sda1 umounted # umount -v /mnt/mymount/      通过挂载点卸载/tmp/diskboot.img umounted \n如果设备正忙，卸载即告失败。卸载失败的常见原因是，某个打开的shell当前目录为挂载点里的某个目录：\n# umount -v /mnt/mymount/umount: /mnt/mymount: device is busyumount: /mnt/mymount: device is busy\n","categories":["分享"],"tags":["Linux umount"]},{"title":"NAS  群晖安装第三方 qBittorrent 套件","url":"/posts/9217/","content":"双十一期间入了一款入门级白裙DS220+，考虑到下载问题以及还差不多能用但是后台挖矿的“玩物下载”，就迫不得已玩起来PT，遂就找到了一篇教程，权当是备份，然后转载补充一波，这几个月来越来越懒的写文章了！照例还是一篇有内容的水文，哈哈\n下面是正文 来自 NAS 群晖安装 qBittorrent 套件并优化设置、替换 UI（非 docker 安装 )\n 有部分删改，在此感谢！\n本文你将看到：\n\n  Download Station、Transmission、qBittorrent 三款软件的对比\n  qBittorrent 套件的安装和配置\n  qBittorrent 替换 WebUI\n\nDownload Station\nDownload Station\nemmm，这货一言难尽吧，用的比较少一言难尽吧。这货其实就是个套着壳的 Tr。\n优点：\n\n  群晖自带，安装简单\n  有着原生 GUI 界面，适合新手\n  自带管理软件 DS get\n\n缺点：\n\n  看不到啥详细数据，数据控难受啊\n\nTransmission\nTransmission_WebUI\n保种神器，占用资源小，是几乎所有 PT 站点保种首选\n优点：\n\n  非常适合保种，万种大佬就是用的它\n\n缺点：\n\n  不能跳过校验\n  校验时不能下载\n  多站点辅种时，文件块不对会爆红，挺烦的\n\n权限有人反映 tr 无法下载到其他磁盘，表现为没有下载速度，这其中有权限不对的锅。这里简单说下权限问题\n\n\ntr 权限\ntracker 替换教程站点有时会更换 tracker 服务器，经常见小伙伴们询问怎样批量替换 tracker，这里就说一下\n\n获取当前 tracker，若无属性选项卡，点击右下角即可展开  此处记得完整复制 ↓ ，不要只复制个开头！！！ \n替换 tracker  此功能要求字段完全匹配，所以必须完整复制过来 \n点击确定，等待完成即可\n\n\n若种子较多，替换时间较长，此时 WebUI 将无响应不要乱动。\n替换后红种为正常现象，请耐心等待。若几 h 还是红种状态，手动暂停重开试试，若还是有问题注意关注站点公告\n\nqBittorrent热种抢上传必备神器，推荐使用 4.1.x (4.1.7) 版本\n下载地址这里的版本适配 DSM6.2.x，x86 架构 CPU，其他自测\n\n已更新至 4.2.5，后面带 + 为增强版，个人建议 pt 慎用\n\n软件名称\n下载地址\nqBittorrent(4.1.x)\n点击下载 r532\nqBittorrent(4.2.x)\n点击下载 a1hm\n国旗数据\n点击下载 27g2\n个人使用时间最长，感觉最稳定的版本为 4.1.7，四个月守株待兔上传了 18T+，仅供参考\n4.1.x 版本也是可以修改高级参数的，有一定的动手能力即可\n\n4.2.x 版本不是同一个作者编译，安装过以前版本（4.1.x）的用户记得卸载以前版本，并删除 /homes/admin/.config 里的 qBittorrent 文件夹，再安装\n实测卸载老版本装上 4.2.x 后，种子信息都在，放心更新\n卸载后设置都会重置，默认用户及密码：admin/adminadmin\n4.1.x 的作者地址→点击前往\n感谢隔壁网 Auska大佬编译 4.2.x 版本\n\n注意升级到 4.2.x 后再卸载降级到 4.1.x，会强制重新校验所有种子文件4.2.x 版本若出现种子信息界面无信息，请清空浏览器缓存，不建议使用修改版，出现问题的话，后果自负\n关于 HTTPS4.2.x 版本，已经由以前的复制证书内容改为文件路径的模式，所以请将证书文件上传后填入完整的路径请确保 qb 对证书文件拥有读取权限，所以建议放置到 qb 的配置文件夹路径，如 /homes/admin/.config/qBittorrent 下\n安装方法\n首先确认已启动 admin 用户。此套件默认运行用户为 admin，所以不启用可能会导致安装后无法运行。  确认 admin 用户已经开启\n开启家目录。因为套件的配置文件、种子文件、校验文件等都是默认存放在家目录  启用家目录\n检查家目录下的 admin 文件夹权限是否正确。不放心的小伙伴可以在权限选项卡再确认下 admin 是否拥有完全控制的权限  检查权限\n在套件中心手动安装 qBittorrent 套件 \n\n安装完后，在套件列表里点击即可打开网页控制界面（或者手动使用 8085 端口访问）。默认用户名 admin密码 adminadmin\n[alert] 这里一定要访问注意端口号后的’ / ‘,一定不能忘记[/alert]\n如：127.0.0.1:8085/\n若8085端口打不开使用 8999 端口\n[alert]去掉斜杠的干扰，请在qBittorrent web页面中修改，在设置-web用户界面-关闭启用跨站点请求伪造(CSRF)保护[/alert]\n\n权限设置有小伙伴反应，使用套件安装的 qBittorrent 下载无速度，这是因为软件读写需要文件夹拥有 admin 权限，所以给文件下载路径相应的权限即可\n\n国旗数据因为 GeoIP 修改过规则，导致 qb 无法自动下载相应数据，这时只需要在 /homes/admin/.local/share/data/qBittorrent 目录新建 GeoIP 文件夹，将国家数据 GeoLite2-Country.mmdb 拷贝进去，重启 qb 即可\n\n替换 WebUI目前备用 UI 尚不完善，对我而言仅仅是多了个方便分类查看 tracker 的功能，不推荐使用，当然随便尝鲜\n这里提供两个大佬的项目\n[github author=”CzBiX” project=”qb-web” /] [github author=”miniers” project=”qb-web”/]\n\n若出现乱码，在地址栏后面加入 /api/v2/app/setPreferences?json=%7B%22alternative_webui_enabled%22:false%7D 进行返回原本 UI\n乱码解决方式，查看自己路径是否正确\n\n1. 下载备用 WebUI\n\n2. 解压文件至群晖找到所在位置\n\n在 Web 用户界面启用备用 Web UI\n补充 这里是解压后public 所在的上一级目录 然后至根目录 路径 比如是/volume1/xx/xx/xx/  最后要有’ / ‘\n\n保存即可大功告成啦\n\nqBittorrent 高级参数设置qBittorrent4.2.x 版本已经支持网页上修改高级参数了配置文件目录：/volume3/homes/admin/.config/qBittorrent/qBittorrent.conf\n种子文件目录：/volume3/homes/admin/.local/share/data/qBittorrent/BT_backup\n\n请根据自己情况自己调整文件路径\n\n默认的 web 界面很多参数都无法修改，尤其是想修改磁盘缓存。打开配置文件，在 [Preferences] 字段新增一行 Downloads\\DiskWriteCacheSize=XXXX，其中 XXXX 是缓存大小，单位是 MB。\n\n内存溢出若出现内存溢出现象，可以尝试禁用系统缓存\n找到 Advanced\\osCache 设置为 false没有的话就手动添加 Advanced\\osCache=false\n\n\n记得设置为 false，不是图片上的 true\n\n","categories":["文章","转载"],"tags":["Nas","qBittorrent"]},{"title":"超详细的NetData-轻量的性能监控工具安装教程","url":"/posts/19026/","content":"前言对于服务器监控我相信对于一些人来说是感兴趣的，相比于繁琐的 Grafana + Zabbix（白猫的docker安装教程）对于服务器资源的占用，较为轻便监控之全面的NetData，它的优势就显现出来了。还有之前部署过 uptime-status一款漂亮的网站监控面板 就开始显得单一，不过后者对多站点多服务器更加友好。\nhttps://www.gitiu.com/share/uptime-status/\n介绍NetData 是一个用于系统和应用的分布式实时性能和健康监控工具。它提供了对系统中实时发生的所有事情的全面检测。你可以在高度互动的 Web 仪表板中查看结果。使用 Netdata，你可以清楚地了解现在发生的事情，以及之前系统和应用中发生的事情。你无需成为专家即可在 Linux 系统中部署此工具。NetData 开箱即用，零配置、零依赖。只需安装它然后坐等，之后 NetData 将负责其余部分。\n它有自己的内置 Web 服务器，以图形形式显示结果。NetData 非常快速高效，安装后可立即开始分析系统性能。它是用 C 编程语言编写的，所以它非常轻量。它占用的单核 CPU 使用率不到 3％，内存占用 10-15MB。我们可以轻松地在任何现有网页上嵌入图表，并且它还有一个插件 API，以便你可以监控任何应用。\n特点\n\n  interactive bootstrap dashboards, 酷炫\n  所有请求每个metreic都在0.5ms内响应，即便是一台烂机器\n  非常高效，每秒采集数千个指标，但仅占cpu单核1%，少量MB的内存以及完全没有磁盘IO\n  提供复杂的、各种类型的告警，支持动态阈值、告警模板、多种通知方式等\n  可扩展，使用自带的插件API（比如bash, python, perl, node.js, java, go, ruby等）来收集任何可以衡量的数据\n  零配置：安装后netdata会自动的监测一切\n  零依赖：netdata有自己的web server， 提供静态web文件和web API 零维护：只管跑上！\n  支撑多种时间序列后端服务，比如graphite, opentsdb, prometheus, json document DBs\n\nNetData在Linux中的监控列表\n  CPU 使用率\n  RAM 使用率\n  交换内存使用率\n  内核内存使用率\n  硬盘及其使用率\n  网络接口\n  IPtables\n  Netfilter\n  DDoS 保护\n  进程\n  应用\n  NFS 服务器\n  Web 服务器 （Apache 和 Nginx）\n  数据库服务器 （MySQL），\n  DHCP 服务器\n  DNS 服务器\n  电子邮件服务\n  代理服务器\n  Tomcat\n  PHP\n  SNP 设备\n\n开始部署当然有最简单的安装 Netdata 的方法 ，那就是一键脚本适用于任何LInux发行版系统中。\nbash &lt;(curl -Ss https:&#x2F;&#x2F;my-netdata.io&#x2F;kickstart-static64.sh)\n\n\n输入脚本命令\n\n回车输入 y 确定安装\n通过 Web 浏览器访问 NetData打开 Web 浏览器，然后打开 http://127.0.0.1:19999 \n或者 http://localhost:19999/ \n或者 http://ip-address:19999\n若不能访问请开放19999端口在 Ubuntu&#x2F;Debian 中： sudo ufw allow 19999在 CentOS中： sudo firewall-cmd --permanent --add-port&#x3D;19999&#x2F;tcp             sudo firewall-cmd --reload\n\n当然有些用户可能不想在没有研究的情况下将某些东西直接注入到 Bash。如果你不喜欢此方法，可以按照以下步骤在系统上安装它\n系统环境：Centos7\n下载安装netData# 下载项目代码 git clone https:&#x2F;&#x2F;github.com&#x2F;firehol&#x2F;netdata.git# 安装变异所需要的包 yum -y install zlib-devel libuuid-devel libmnl-devel gcc make git autoconf autogen automake pkgconfig# 运行自带的安装启动脚本 cd .&#x2F;netdata .&#x2F;netdata-installer.sh\n\n安装启动脚本时，提示netData安装的详细目录，按下Enter键执行。\n\n安装启动脚本\n启动和配置安装完成后，脚本输出一段信息，包括：KSM、端口、启动命令\n开启 KSM 以节省储存占用如果有下列信息，说明你的系统有 KSM，但是未启用，可以按照说明执行两句echo命令，节省 40-60% 的储存空间。\n --- Check KSM (kernel memory deduper) ---Memory de-duplication instructionsYou have kernel memory de-duper (called Kernel Same-page Merging,or KSM) available, but it is not currently enabled.To enable it run:    echo 1 &gt;&#x2F;sys&#x2F;kernel&#x2F;mm&#x2F;ksm&#x2F;run    echo 1000 &gt;&#x2F;sys&#x2F;kernel&#x2F;mm&#x2F;ksm&#x2F;sleep_millisecsIf you enable it, you will save 40-60% of netdata memory.\n\nweb端口配置默认的web访问端口为19999。\nnetdata by default listens on all IPs on port 19999,so you can access it with:  http:&#x2F;&#x2F;this.machine.ip:19999&#x2F;\n\n\n 如果修改端口，需要编辑配置文件/etc/netdata/netdata.conf 中的 # default port = 19999。去掉注释符号#，端口尽量改掉默认的19999 !!!\n 修改端口后重启生效。\n 如果有防火墙，需开放端口。\n\n\n修改web端口\n对于 Ubuntu / Debian安装所需的依赖项： sudo apt-get install zlib1g-dev uuid-dev libuv1-dev liblz4-dev libjudy-dev libssl-dev libmnl-dev gcc make git autoconf autoconf-archive autogen automake pkg-config curlGit 克隆 NetData 仓库： git clone https:&#x2F;&#x2F;github.com&#x2F;netdata&#x2F;netdata.git --depth&#x3D;100PS:上面的命令将会在当前工作目录中创建一个名为 netdata 的目录切换到 netdata 目录： cd netdata&#x2F;使用命令安装并启动 NetData： sudo .&#x2F;netdata-installer.sh\n\n最后会输出：\n\n最后的补充启动／关闭netData# 停止systemctl stop netdata# 启动systemctl start netdata# 重启 systemctl restart netdata# 开机启动 systemctl enable netdata\n\n卸载# 卸载.&#x2F;netdata-uninstaller.sh --force或者sudo .&#x2F;netdata-uninstaller.sh --force\n\n可以随时打开 http://localhost:19999/netdata.conf 来下载和/或查看 NetData 默认配置文件。\n\nNetdata 配置文件\n更新 NetData切换到 netdata 目录：$ cd netdata拉取最新更新：$ git pull使用命令重新构建并更新它：$ sudo .&#x2F;netdata-installer.sh\n\n考虑到安全个人使用的私密性，对于netdata没有帐号密码体系，为保护服务器隐私，我们要使用nginx反向代理配置域名访问，并使用账号密码授权\n使用Nginx配置域名访问，设置账号密码授权准备：\n\n  如果服务器没有Nginx，安装: yum install nginx\n  netdata的域名，如: netdata.example.com\n\n对于域名的绑定可以使用caddy或者是宝塔面板反向代理\n可以参考：利用 Caddy 轻松实现反向代理/镜像（支持自签SSL证书）\n生成Nginx密码文件# 密码文件存放位置自定义，路径需记录下来，放在Nginx配置中。printf &quot;netdata:$(openssl passwd -apr1)&quot; &gt; &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;htpasswd\n\n配置nginx.conf在 ...nginx/conf.d 中创建netdata.conf文件，写入如下内容，适当修改端口号、域名、auth_basic_user_file。\nupstream backend &#123;    # the netdata server，请修改具体端口号    server 127.0.0.1:19999;    keepalive 64;&#125;server &#123;    # nginx listens to this    listen 80;    # the virtual host name of this，请求改具体域名    server_name netdata.example.com;      # auth password   auth_basic &quot;netdata Login&quot;;   #  上一步生成的密码文件路径   auth_basic_user_file &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;htpasswd;    location &#x2F; &#123;        proxy_set_header X-Forwarded-Host $host;        proxy_set_header X-Forwarded-Server $host;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        proxy_pass http:&#x2F;&#x2F;backend;        proxy_http_version 1.1;        proxy_pass_request_headers on;        proxy_set_header Connection &quot;keep-alive&quot;;        proxy_store off;    &#125;&#125;\n\n重启nginx# 密码文件存放位置自定义，路径需记录下来，放在Nginx配置中。 systemctl reload nginx\n\n重启Nginx后，可以直接通过域名netdata.example.com访问，并且需要输入账号和密码。但是依然可以通过http://IP:Port的方式访问，接下来禁用IP访问。\nNetData禁用外部IP请求打开NetData配置文件：/etc/netdata/netdata.conf，web项的 bind to修改如下：\n[web]    bind to &#x3D; 127.0.0.1 ::1\n\n重启NetData： systemctl restart netdata\n建议[toc]\n在Netdada的Dasherboard中使用Node ,通过Google或者Github账号注册登录可以使用同步服务，假设你再多台VPS上部署，可以绑定网址到云端上，查看十分方便。\n\n\n\n","categories":["日志"],"tags":["NetData","性能监控工具"]},{"title":"如何在CentOS7使用rclone挂载OneDrive网盘","url":"/posts/41826/","content":"Rclone是一个多平台可以挂载OneDrive/Google Drive/Amazon Drive等云存储的软件，平台可以在Windows、Mac OS、Linux上进行使用。这篇文章主要分享CentOS7使用Rclone挂载OneDrive的过程，其它系统或者挂载其它网盘原理和方法大致相同。\n注意：服务器最好是KVM的，OpenVZ需要给你的服务商发TK告诉他们开一下FUSE，如果没有FUSE是没办法挂载的。\n首先我们需要先获取到onedrive的access_token\n获取方式：先到https://rclone.org/downloads/下载win版本的Rclone\n\n下载后解压，把文件夹更名为rclone\n\n使用CMD打开运行以下命令\ncd &#x2F;d d:\\rclone rclone authorize &quot;onedrive&quot;\n\n运行后会自动打开浏览器，然后登录帐号，登录后会跳转到授权成功的页面。\n\n授权成功后回到CMD窗口，会看到如下：\n\n把{}括号里面的内容复制下来保存好，后面需要用到（包含括号一起复制保存）\n到这里我们都win下面就操作完了，现在需要到服务器去操作下。\n准备先安装一下基本组件\nyum -y install wget unzip screen fuse fuse-devel\n\n\n使用官方的一键安装命令即可，输入下面的命令：\ncurl https:&#x2F;&#x2F;rclone.org&#x2F;install.sh  sudo bash\n\n\n安装完成后会提示\nrclone v1.48.0 has successfully installed.Now run “rclone config” for setup. Check https://rclone.org/docs/ for more details.\n这样我们就可以直接使用rclone config命令在设置\n配置接着就输入以下命令进行rclone设置\nrclone config\n\n输入命令后\n\n 2019/08/02 10:55:49 NOTICE: Config file “/root/.config/rclone/rclone.conf” not found - using defaults\n No remotes found - make a new one\n n) New remote\n s) Set configuration password\n q) Quit config\n n/s/q&gt; n\n\n这里我们选择n，创建一个新的。\n然后输入名字，回车\nname&gt; onedrive\n\n这个名字随意就行，自己记住就好了\n选择需要挂载的网盘\n\n Type of storage to configure.\n Enter a string value. Press Enter for the default (“”).\n Choose a number from below, or type in your own value\n 1 / A stackable unification remote, which can appear to merge the contents of several remotes\n \\ “union”\n 2 / Alias for an existing remote\n \\ “alias”\n 3 / Amazon Drive\n \\ “amazon cloud drive”\n 4 / Amazon S3 Compliant Storage Provider (AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, etc)\n \\ “s3”\n 5 / Backblaze B2\n \\ “b2”\n 6 / Box\n \\ “box”\n 7 / Cache a remote\n \\ “cache”\n 8 / Dropbox\n \\ “dropbox”\n 9 / Encrypt/Decrypt a remote\n \\ “crypt”\n 10 / FTP Connection\n \\ “ftp”\n 11 / Google Cloud Storage (this is not Google Drive)\n \\ “google cloud storage”\n 12 / Google Drive\n \\ “drive”\n 13 / Hubic\n \\ “hubic”\n 14 / JottaCloud\n \\ “jottacloud”\n 15 / Koofr\n \\ “koofr”\n 16 / Local Disk\n \\ “local”\n 17 / Mega\n \\ “mega”\n 18 / Microsoft Azure Blob Storage\n \\ “azureblob”\n 19 / Microsoft OneDrive\n \\ “onedrive”\n 20 / OpenDrive\n \\ “opendrive”\n 21 / Openstack Swift (Rackspace Cloud Files, Memset Memstore, OVH)\n \\ “swift”\n 22 / Pcloud\n \\ “pcloud”\n 23 / QingCloud Object Storage\n \\ “qingstor”\n 24 / SSH/SFTP Connection\n \\ “sftp”\n 25 / Webdav\n \\ “webdav”\n 26 / Yandex Disk\n \\ “yandex”\n 27 / http Connection\n \\ “http”\n Storage&gt; 19\n\n我们今天主要是挂在onedrive，所以这里选择19，根据实际来选择，rclone版本不一样选择也不一样。\n下面就是client_id&gt;和client_secret&gt; ，这两项直接回车，不管\n\n Microsoft App Client Id\n Leave blank normally.\n Enter a string value. Press Enter for the default (“”).\n client_id&gt;\n Microsoft App Client Secret\n Leave blank normally.\n Enter a string value. Press Enter for the default (“”).\n client_secret&gt;\n\n是否配置高级设置，这里我们直接No，选择n\n\n Edit advanced config? (y/n)\n y) Yes\n n) No\n y/n&gt; n\n\n是否使用自动设置，同样直接NO，选择n\n\n Use auto config?\n * Say Y if not sure\n * Say N if you are working on a remote or headless machine\n y) Yes\n n) No\n y/n&gt; n\n\n这一步就需要用到我们刚才在win获取到的access_token\n\n For this to work, you will need rclone available on a machine that has a web browser available.\n Execute the following on your machine:\n rclone authorize “onedrive”\n Then paste the result below:\n result&gt;\n\n\n按照图片格式把获取到的access_token粘贴进去\n这里选择1，onedrive个人版或是商业版\n\n Choose a number from below, or type in an existing value\n 1 / OneDrive Personal or Business\n \\ “onedrive”\n 2 / Root Sharepoint site\n \\ “sharepoint”\n 3 / Type in driveID\n \\ “driveid”\n 4 / Type in SiteID\n \\ “siteid”\n 5 / Search a Sharepoint site\n \\ “search”\n Your choice&gt; 1\n\n然后会提示找到一个驱动器\n\n Found 1 drives, please select the one you want to use:\n 0: OneDrive (business) id=b!tjyPr9WccUytxb9q4bgCz1Z8pnMGbxJCmV651K4oHDgyUnggpbbeTYTa\n Chose drive to use:&gt; 0\n\n输入前面的序号就行\n下面直接yes，大概的意思是找到这个驱动器，不知道对不对\n\n Found drive ‘root’ of type ‘business’, URL: https://dddd290-my.sharepoint.com/personal/info\\_vipiu\\_net/Documents\n Is that okay?\n y) Yes\n n) No\n y/n&gt; y\n\n然后确认\n\n y) Yes this is OK\n e) Edit this remote\n d) Delete this remote\n y/e/d&gt; y\n\n然后退出配置\n\n e) Edit existing remote\n n) New remote\n d) Delete remote\n r) Rename remote\n c) Copy remote\n s) Set configuration password\n q) Quit config\n e/n/d/r/c/s/q&gt;\n\n以上就配置好了，剩下的就是挂载了\n挂载首先创建一个本地文件夹，我创建的是/home/onedrive ，路径可以你自己定， 也就是下面的LocalFolder\nmkdir &#x2F;home&#x2F;onedrive\n\n挂载为磁盘的命令如下\nrclone mount DriveName:Folder LocalFolder --copy-links --no-gzip-encoding --no-check-certificate--allow-other --allow-non-empty --umask 000\n\n如果你和我一样设置的挂载命令是：\nrclone mount onedrive: &#x2F;home&#x2F;onedrive --allow-other --allow-non-empty --vfs-cache-mode writes\n\n在运行挂载命令后，SSH窗口会出现中断，光标丢失，此时关掉窗口即可。如需另外再挂载网盘，只需要重新连接。\n不出问题的情况下，输入\ndf -h\n\n就可以看到Onedrive成功挂载。\n\n\n  转载：CentOS7使用rclone挂载OneDrive网盘 爱游博客\n\n","categories":["分享"],"tags":["onedrive","rclone"]},{"title":"Simple Torrent：一个支持边下边播、无版权限制和自动上传的BT离线下载程序","url":"/posts/53733/","content":"[toc]\n\n\n安装使用SSH客户端登录服务器，运行命令：\nbash &lt;(wget -qO- https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;boypt&#x2F;simple-torrent&#x2F;master&#x2F;scripts&#x2F;quickinstall.sh)\n\n然后使用ip:3000访问即可。\n顺便提供个博主经常用的BT-Trackers服务器地址，效果不错，如下：\nhttps:&#x2F;&#x2F;trackerslist.com&#x2F;all.txt\n\n直接在Web界面修改即可。\n相关命令：\n启动：systemctl start cloud-torrent重启：systemctl restart cloud-torrent停止：systemctl stop cloud-torrent查看状态：systemctl status cloud-torrent\n\nDocker安装1、安装Docker\n#CentOS 6系统rpm -iUvh http:&#x2F;&#x2F;dl.fedoraproject.org&#x2F;pub&#x2F;epel&#x2F;6&#x2F;x86_64&#x2F;epel-release-6-8.noarch.rpmyum update -yyum -y install docker-ioservice docker startchkconfig docker on#CentOS 7、Debian、Ubuntu系统curl -sSL https:&#x2F;&#x2F;get.docker.com&#x2F;  shsystemctl start dockersystemctl enable docker\n\n2、安装Simple Torrent\ndocker run --restart&#x3D;always --name simple-torrent -d \\-p 3000:3000 \\-v ~&#x2F;downloads:&#x2F;downloads \\-v ~&#x2F;torrents:&#x2F;torrents \\boypt&#x2F;cloud-torrent\n\n然后使用ip:3000访问即可。\n最后如果你访问不了Web端，可能要检查下防火墙端口，有安全组的也要放行下相关端口。\n这里提供个CentOS系统防火墙开启命令，大致如下：\n#CentOS 6iptables -I INPUT -p tcp --dport 3000 -j ACCEPTservice iptables saveservice iptables restart#CentOS 7firewall-cmd --zone&#x3D;public --add-port&#x3D;3000&#x2F;tcp --permanentfirewall-cmd --reload\n\nAPI使用关于API的用法，官方文档说的很详细了，这里就大概列举几个，如下：\n#通过远程地址添加种子curl --data &quot;http:&#x2F;&#x2F;domain.com&#x2F;file.torrent&quot; &quot;http:&#x2F;&#x2F;localhost:3000&#x2F;api&#x2F;url&quot;#通过本地文件添加种子curl --data-binary &quot;my.torrent&quot; &quot;http:&#x2F;&#x2F;localhost:3000&#x2F;api&#x2F;url&quot;#通过磁力链接添加种子curl --data &quot;magnet:?xt&#x3D;urn:btih:...&quot; &quot;http:&#x2F;&#x2F;localhost:3000&#x2F;api&#x2F;url&quot;#开始种子任务curl --data &quot;start:$&#123;HASH&#125;&quot; &quot;http:&#x2F;&#x2F;localhost:3000&#x2F;api&#x2F;torrent&quot;#停止种子任务curl --data &quot;stop:$&#123;HASH&#125;&quot; &quot;http:&#x2F;&#x2F;localhost:3000&#x2F;api&#x2F;torrent&quot;#删除种子任务curl --data &quot;delete:$&#123;HASH&#125;&quot; &quot;http:&#x2F;&#x2F;localhost:3000&#x2F;api&#x2F;torrent&quot;#查看文件和种子信息&#x2F;api&#x2F;files和&#x2F;api&#x2F;torrents\n\n外部程序调用先修改配置文件，通过上面脚本安装的配置文件在你的主目录，比如/root目录，配置文件cloud-torrent.json。\n修改以下参数：\n#外部程序调用参数&quot;donecmd&quot;: &quot;&quot;,#比如我要下载完成后，直接运行&#x2F;home目录下的rats.sh脚本&quot;donecmd&quot;: &quot;&#x2F;home&#x2F;rats.sh&quot;,\n\n那么下载完成后就会运行该脚本。\n一般种子下载完成后，会返回以下参数变量，这里列举下主要的：\nCLD_DIR为下载路径，且为绝对路径CLD_PATH为下载文件名称CLD_SIZE为文件大小CLD_TYPE为调用事件类型，分为files和torrent，分别为种子里单个文件和整体文件CLD_HASH为文件HASH值\n\n这里随便放一个下载后自动移动的脚本，针对rclone挂载的文件夹。\n#!&#x2F;bin&#x2F;bash#下载后移动的文件夹路径RemoteDIR&#x3D;&quot;&#x2F;down&#x2F;moerats&quot;;  if [[ $&#123;CLD_TYPE&#125; &#x3D;&#x3D; &quot;torrent&quot; ]]; theneval mv \\&#39;&quot;$&#123;CLD_DIR&#125;&#x2F;$&#123;CLD_PATH&#125;&quot;\\&#39; &quot;$&#123;RemoteDIR&#125;&quot;;#移动后停止该任务curl --data &quot;stop:$&#123;CLD_HASH&#125;&quot; &quot;http:&#x2F;&#x2F;127.0.0.1:3000&#x2F;api&#x2F;torrent&quot;;#停止后清除该任务，也就是不会出现在Web界面了curl --data &quot;delete:$&#123;CLD_HASH&#125;&quot; &quot;http:&#x2F;&#x2F;127.0.0.1:3000&#x2F;api&#x2F;torrent&quot;;fi\n\n这里还可以结合TG机器人啥的一起使用，玩法很多，可以自行结合API一起使用。\n要注意的是，配置调用脚本的时候，需要给予脚本可执行权，并重启程序生效，比如：\n#给予可执行权，脚本路径&#x2F;root&#x2F;rats.shchmod +x &#x2F;root&#x2F;rats.sh#重启程序systemctl restart cloud-torrent\n\n\n转 本文链接：https://www.moerats.com/archives/1023/\n\n","categories":["分享"],"tags":["Simple Torrent"]},{"title":"CENTOS服务器使用rclone开机自动挂载微软onedrive onedrive挂载为服务器磁盘方法","url":"/posts/50369/","content":"1.先把rclone的可执行文件复制到/usr/bin：（我安装的时候它就在，所以我没动这一步）\ncp /root/rclone-v*/rclone /usr/bin/rclone(自己看路径对不对)\n2.新建一个rclone.service文件： vi /usr/lib/systemd/system/rclone.service    (关键) 3.写入：\n[Unit]Description=rclone    [Service]User=rootExecStart=/usr/bin/rclone mount xxx: /xxx/xxx –allow-other –allow-non-empty –vfs-cache-mode writesRestart=on-abort    [Install]WantedBy=multi-user.target\n4.重载daemon，让新的服务文件生效：\nsystemctl daemon-reload\n5.现在就可以用systemctl来启动rclone了：\nsystemctl start rclone\n6.设置开机启动：\nsystemctl enable rclone\n7.停止、查看状态可以用：\nsystemctl stop rclonesystemctl status rclone\n8.重启你的VPS，然后查看一下rclone的服务起来没，接着查看一下盘子挂上去没：\nrebootsystemctl status rclonedf -h\n","categories":["分享"],"tags":["rclone挂载OneDrive"]},{"title":"UCLOUD免费提供GlobalSSH加速境外服务器","url":"/posts/38855/","content":"简介GlobalSSH是一款致力于提高跨国远程管理服务器效率的产品，旨在解决因为跨国网络不稳定，通过远程管理服务器时，经常会出现卡顿、连接失败、传输速度较慢等现象。运维研发人员在使用本产品后，可以提高，极大程度的减少卡顿、连接失败的情况发生，提高运维工作的效率。注：本产品同样适用于windows服务器的远程登陆服务\n[toc]\n申请地址https://console.ucloud.cn/upathx/globalssh\n或者控制面板搜索：PathX  可见入口！\n基本操作Linux1）点击【创建】在弹出框填写相关信息！\n服务器IP：要加速的服务器IP\n服务器靠近区域：根据服务器的位置，选择靠近服务器的区域\n端口：你的SSH端口，默认是22\n\n2）创建成功后，可以看到分配的加速域名。\n\n3）然后我们利用Xshell或者其他工具远程链接即可！\n\nWindows1）点击【创建】在弹出框填写相关信息！\n服务器IP：要加速的服务器IP\n服务器靠近区域：根据服务器的位置，选择靠近服务器的区域\n端口：你的远程桌面端口，默认是3389\n\n2）创建成功后，可以看到分配的加速域名。\n\n3）然后用远程桌面链接即可使用！\n\n其他设置点击【查看详情】可以看见详细的统计信息！以及出口IP和白名单的设置！\n\n使用限制目前所有用户（不实名也可以）都可以使用该服务器。\n服务目前是免费提供！GlobalSSH现已免费，不收取实例及流量费用。请合理使用免费资源，若影响到其他用户使用，将触发限速策略。\n自产品实例创建之日起，7日内单个实例累计出向流量小于2MB，加速功能停用。\n每个源IP只能加速一个端口。\n加速流量上限官方还未注明。\n其他说明这种访问速度确实提升不少！非常不错！\n有用户担心这种访问会不会有安全问题。嗯，这个不好说！\n参考文献https://docs.ucloud.cn/pathx/globalssh\nhttps://www.hostloc.com/thread-666094-3-1.html\n来自：\nhttps://51.ruyo.net/15773.html\n","categories":["转载"],"tags":["GlobalSSH","加速境外服务器"]},{"title":"UnblockNeteaseMusic 是一个专门针对网易云音乐解锁灰色无版权","url":"/posts/32620/","content":"脚本介绍该脚本基于 Github - UnblockNeteaseMusic 项目。UnblockNeteaseMusic 是一个专门针对网易云音乐解锁灰色无版权音乐的代理工具，通过替换经过代理的无版权音乐链接为其他音源（如：QQ音源、酷我、酷狗、百度音乐、咪咕、JOOX等）来实现解锁网易云音乐无版权音乐。相当于在网易云音乐客户端中听全网版权音乐（相对）！\n!&gt; · 该脚本只适用于服务器，如果只想在本地使用，请使用我写的 Windows 版 UnblockNeteaseMusic！· 建议有条件的部署在国内服务器，国外服务器只能用 QQ 音源（其他的音源不允许国外访问），况且部署在国外服务器相比国内或者本地速度会慢上不少(具体取决服务器与你之间链接的质量)。\n脚本版本最新版本： v1.0.5\n系统要求CentOS 6+ / Debian 6+ / Ubuntu 14.04 +\n\n下载安装!&gt; **注意：**因为涉及防火墙端口开关、服务脚本安装，所以脚本需要以 ROOT 用户执行。\n# 如果你不是 ROOT 用户，请执行下面这行代码切换为 ROOT 用户。  # 如果你已经是 ROOT 用户了，那么请跳过下面这行代码！sudo su# 执行上面一行代码后会提示你输入当前用户的密码，回车后没有报错即可继续。\n\n\n?&gt; 如果你要更新脚本，除了使用脚本中的 [0. 更新脚本] 功能以外，还可以再次输入下面这一行代码。\n执行下面一行代码下载并运行脚本：\nwget -N --no-check-certificate https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;XIU2&#x2F;SHELL&#x2F;master&#x2F;unblock163.sh &amp;&amp; chmod +x unblock163.sh &amp;&amp; bash unblock163.sh\n\n下载运行后会提示你输入数字来选择要做什么。 输入 1 ，就会开始安装了，根据提示依次输入配置信息(或直接回车使用默认配置)即可。\n&lt;!-- wp:preformatted --&gt;&lt;pre class&#x3D;&quot;wp-block-preformatted&quot;&gt;请输入数字 [0-10]:1[信息] 开始设置 用户配置...请输入要使用的代理端口。 [1-65535][注意] 如果你在本地通过 Hosts 方式使用该代理，那么只能选择 80 端口，格式示例：80[注意] 如果需要搭配自签证书，那么还需要配置 HTTPS 端口，格式：HTTP:HTTPS，两个端口不能相同，格式示例：80:443&quot;(默认: 80):------------------------代理端口 :  80 ------------------------请输入要使用的音源排序。 [qq kuwo kugou baidu xiami migu joox][注意] 音源排序指的是，无版权音乐会根据此处顺序优先匹配首位音源，如果匹配到就返回，反之就继续往后匹配。[注意] 不同音源之间请用空格隔开。(默认: qq migu kuwo kugou baidu):------------------------音源排序 :  qq migu kuwo kugou baidu ------------------------是否启用严格模式？[Y&#x2F;n][注意] 启用严格模式后，本代理仅允许网易云音乐域名访问，即本地设备只能通过 Host 或 PAC 使用，强烈建议开启，否则所有设备流量都会经过本代理。(默认：Y [启用]):------------------------严格模式 :  YES ------------------------[信息] 开始安装&#x2F;配置 依赖...[信息] 开始下载&#x2F;安装......&lt;&#x2F;pre&gt;&lt;!-- &#x2F;wp:preformatted --&gt;&lt;!-- wp:paragraph --&gt;&lt;p&gt;如果安装过程没有出错，那么最后就会提示：&lt;&#x2F;p&gt;&lt;!-- &#x2F;wp:paragraph --&gt;&lt;!-- wp:preformatted --&gt;&lt;pre class&#x3D;&quot;wp-block-preformatted&quot;&gt;UnblockNeteaseMusic 配置信息：------------------------本机地址: X.X.X.X代理端口: 80音源排序: qq migu kuwo kugou baidu严格模式: YESPAC 地址: http:&#x2F;&#x2F;X.X.X.X:80&#x2F;proxy.pac&lt;&#x2F;pre&gt;&lt;!-- &#x2F;wp:preformatted --&gt;\n\n\n使用方法本地使用安装并启动成功后，就可以在本地设备上使用了。以下两种模式任选其一，不要同时使用。\nHosts模式在 Hosts 末尾中添加下面两行：\nX.X.X.X music.163.comX.X.X.X interface.music.163.com\n\n\nX.X.X.X 指的是你的服务器IP，记得修改，不要傻傻的跟着写。\n\nPAC模式如果无法配置 Hosts（例如手机），那么可以使用 PAC。 修改设备的代理自动配置为下面一行内容：\nhttp:&#x2F;&#x2F;X.X.X.X:端口&#x2F;proxy.pac\n\n\nX.X.X.X 指的是你的服务器IP，端口是你的代理端口，记得修改，不要傻傻的跟着写。\n\n各平台PAC设置步骤** Windows **设置 &gt; 工具 &gt; 自定义代理 (客户端内) &gt; HTTP代理 &gt; 服务器: … &gt; 端口: …\n** UWP **Windows 设置 &gt; 网络和 Internet &gt; 代理 &gt; 勾选[使用设置脚本] &gt; 脚本地址: …\n** Linux **系统设置 &gt; 网络 &gt; 网络代理 &gt; 方法:自动 &gt; 配置 URL: …\n** macOS **系统偏好设置 &gt; 网络 &gt; 高级 &gt; 代理 &gt; 自动代理配置 &gt; URL: …\n** Android **WLAN &gt; 修改网络 &gt; 高级选项 &gt; 代理 &gt; 代理自动配置 &gt; PAC网址: …\n** iOS ****无线局域网 &gt; HTTP 代理 &gt; 配置代理 &gt; 自动 &gt; URL: …**如果上面的选项卡显示不正常，请点击查看表格样式的说明\n\n脚本说明运行脚本\nbash unblock163.sh\n\n输入对应的数字来执行相应的命令。\nUnblockNeteaseMusic 一键脚本 [vX.X.X]    0. 更新脚本----------  1. 安装 UnblockNeteaseMusic  2. 更新 UnblockNeteaseMusic  3. 卸载 UnblockNeteaseMusic----------  4. 启动 UnblockNeteaseMusic  5. 停止 UnblockNeteaseMusic  6. 重启 UnblockNeteaseMusic----------  7. 设置 配置信息  8. 查看 账号信息  9. 查看 日志信息 10. 查看 链接信息 当前状态: 已安装 并 已启动 请输入数字 [0-10]:\n\n\n文件位置\n  安装目录：/usr/local/UnblockNeteaseMusic\n  日志文件：/usr/local/UnblockNeteaseMusic/UnblockNeteaseMusic.log\n\n\n其他命令除了用脚本启动、停止、重启以外，还能通过其他命令操作。\n\n  启动：/etc/init.d/unblock163 start\n  停止：/etc/init.d/unblock163 stop\n  重启：/etc/init.d/unblock163 restart\n  查看状态：/etc/init.d/unblock163 status\n\n\n注意事项启动失败的可能原因1. 端口被占用如果日志中显示以下内容，即说明端口被占用了。点击展开 查看更多\nHTTP Server running @ http:&#x2F;&#x2F;0.0.0.0:80events.js:174      throw er; &#x2F;&#x2F; Unhandled &#39;error&#39; event      ^Error: listen EADDRINUSE: address already in use 0.0.0.0:80    at Server.setupListenHandle [as _listen2] (net.js:1279:14)    at listenInCluster (net.js:1327:12)    at doListen (net.js:1460:7)    at process._tickCallback (internal&#x2F;process&#x2F;next_tick.js:63:19)Emitted &#39;error&#39; event at:    at emitErrorNT (net.js:1306:8)    at process._tickCallback (internal&#x2F;process&#x2F;next_tick.js:63:19)\n\n请使用 netstat -lntp grep &quot;端口&quot; 查看是被哪个程序占用了。例如提示如下内容，则可以使用 kill -9 4725 命令来结束该进程。当然，如果该程序不能关闭，你也可以选择换个代理端口。\ntcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      4725&#x2F;nginx\n\n\n其他阿里云/腾讯云/微软云/谷歌云等无法连接的可能原因阿里云/腾讯云/微软云/谷歌云等服务商的云服务器，服务器与网络实际上是分开的，所以分为内网防火墙和外网防火墙，脚本只能修改到内网防火墙，外网防火墙需要你自行去后台寻找 [防火墙/安全规则/端口规则] 等字样相关选项开放代理端口。\n\n更新日志2019年12月02日，版本 v1.0.5 :id=105\n\n  1. 修复 安装时异常退出的问题。\n\n2019年11月09日，版本 v1.0.4 :id=104\n  1. 新增 支持 HTTP:HTTPS 监听双端口，搭配自签证书使用。\n\n2019年09月09日，版本 v1.0.3 :id=103\n  1. 优化 获取 Node 最新版本失败后，将使用备用的版本号。\n\n2019年09月09日，版本 v1.0.2 :id=102\n  1. 修复 部分系统因根证书不完整而导致下载失败的问题。\n\n2019年09月03日，版本 v1.0.1 :id=101\n  1. 修复 谷歌云、腾讯云这类服务器安装后无法使用的问题。\n\n2019年08月31日，版本 v1.0.0 :id=100\n  1. 发布 第一个版本。\n\n\n原文地址：https://github.com/XIU2/SHELL/blob/master/docs/unblock163.md\n\n","categories":["分享"],"tags":["UnblockNeteaseMusic","网易云音乐灰色无版权","脚本"]},{"title":"uptime-status一款漂亮的网站监控面板","url":"/posts/6982/","content":"前言无意之间在hostloc看到一贴，介绍一款比较适合监控站点的多功能网站监控面板，于是遂就水一篇文档。干就完了！uptime-status是对接 UptimeRobot API 开发而成的。所以说部署就简单起来了。\n项目地址：\n项目演示站点：https://status.org.cn/\n我的Demo:https://www.gitiu.com/monitor/\n或者直接看图？？\n\n监测界面\n开始1.动动你的小手去这里注册一个账号，默认开通免费服务，虽说是免费的但是绝对够你用了。不够用上钱！！\n\n免费额度\n2.注册成功后在 My Settings 中找到 API Settings开启 Monitor-Specific API Keys ，先搜索你之前起的 Friendly Name ，点击选择搜索到的项目名字，然后会得到一串数字。复制它后面有用。\n\n搜索名字\n配置 UptimeRobot\n监控协议选择\n我们找到New Monitor,我们可以看到支持的协议，好像免费版不支持https。你根据自己的需求开始操作吧。\nTips:我建议先在 UptimeRobot 里面弄好你想要监控的站点，然后再安装uptime-status\n\n我配置的http协议的监控\n环境说明目前已经在 GitHub 上放出编译好的文件，什么环境都不需要！不需要PHP！不需要nodejs！不需要宝塔！只需要一个支持html的纯静态空间都可以！包括又拍云！OSS！七牛！啥都行！cloudflare worker 什么乱七八糟的都可以！\n安装最简单的食用方式：1.下载最新版 https://github.com/yb/uptime-status/releases/latest2. 解压缩压缩包；3. 打开config.js4. 修改你的 ApiKeys（就是上面获取的 Monitor-Specific API Keys） 和其它配置（已经做了注释，去掉了代码压缩）  \n&#x2F;&#x2F; 配置window.Config &#x3D; &#123;  &#x2F;&#x2F; 站点名  SiteName: &#39;Uptime Status&#39;,  &#x2F;&#x2F; 站点链接  SiteUrl: &#39;&#x2F;&#39;,  &#x2F;&#x2F; UptimeRobot Api Keys  &#x2F;&#x2F; 支持 Monitor-Specific 和 Read-Only 两只 Api Key  ApiKeys: [    &#39;m784488775-dd1ad84b209c05f8e185c33e&#39;,    &#39;m784490063-7b5da437e7f1e0d67613714d&#39;,    &#39;m784497419-de55aa09902ccb3ab22d548a&#39;,    &#39;m784496436-71a4bf7b1e3bdf7756be131b&#39;,  ],  &#x2F;&#x2F; 是否显示监测站点的链接  ShowLink: true,  &#x2F;&#x2F; 日志天数  &#x2F;&#x2F; 虽然免费版说仅保存60天日志，但测试好像API可以获取90天的  &#x2F;&#x2F; 不过时间不要设置太长，容易卡，接口请求也容易失败  CountDays: 60,  &#x2F;&#x2F; 导航栏菜单  Navi: [    &#123;      text: &#39;Homepage&#39;,      url: &#39;https:&#x2F;&#x2F;status.org.cn&#x2F;&#39;    &#125;,    &#123;      text: &#39;GitHub&#39;,      url: &#39;https:&#x2F;&#x2F;github.com&#x2F;yb&#x2F;uptime-status&#39;    &#125;  ]&#125;;\n\n若是想麻烦一点自己编译安装那么就这样\n食用方法：  \n\n下载或 clone 代码；  \n第一次下载之后先执行 npm i 安装依赖；  \n改 src/config.js 中的 apikeys；  \n执行 npm run build 打包；  \n把 build 目录下的静态文件随便找个地方扔就完事了;\n\n最后这个代码是依赖 UptimeRobot 的，你需要先注册个 UptimeRobot。拿到apikey。检测线路的问题不是这个代码检测是 UptimeRobot 去检测的。\n","categories":["分享"],"tags":["uptime-status","UptimeRobot","网站监控面板"]},{"title":"免费使用jsDelivr+Github为静态文件套上全球CDN加速","url":"/posts/27159/","content":"\n前言Github是目前最大的项目的托管平台！19年年初的时候被微软收购了。免费套餐还支持私有仓库了！还真不错哇！可惜国内访问比较慢！！\njsDelivr提供npm，GitHub，WordPress等项目的镜像，全球加速访问！\n针对Github提供免费的CDN加速，在国内使用的是网宿的CDN加速！访问速度一点儿都不慢！\n那么我们就可以好好利用一下！下面博主就分享下使用过程把！\n[toc]\n使用限制\n  目前GITHUB仓库容量是没有上限的！不过官方推荐在1G以内！\n  仓库单个文件50M会收到警告，大于100M会被拒绝！\n  jsDelivr仅能针对50M以下的文件CDN加速！\n\n这样看来我们完全可以利用它来存一些静态文件了，如JS,CSS,图片等等！\n操作步骤1）当然你得先有一个GITHUB账号！\n2）新建一个仓库！名称随便即可！\n\n3）我们新建一个js文件，然后提交！你也可以利用git本地推送！\n\n\n4）点击【releases】，然后我们点击【Create a new release】!\nPS：这里不创建releases也是可以的！\n\n5）版本号输入1.0 ，目标是 master分支！\n\n6）然后访问：https://cdn.jsdelivr.net/gh/用户名/仓库名@版本号/ 即可访问你的内容了！\n如本文示例：https://cdn.jsdelivr.net/gh/malaohu/jscdn@1.0/\n\n文件不想带版本号？将版本号换成latest即可！或者不带版本号！或者直接**@master(或者其他分支名称)**！\n如：\nhttps://cdn.jsdelivr.net/gh/malaohu/jscdn@latest/pic.png\nhttps://cdn.jsdelivr.net/gh/malaohu/jscdn/pic.png\nhttps://cdn.jsdelivr.net/gh/malaohu/jscdn@master/pic.png\n直接@master，就不用新建releases了！\n演示内容20M压缩包：https://cdn.jsdelivr.net/gh/malaohu/jscdn@master/20M.zip\n美图一张~~\n\n访问速度在国内有网宿CDN加速访问！\n在国外有CloudFlare CDN加速访问！\n线路\n最快节点\n最慢节点\n平均响应\n电信\n江苏常州市电信0.07s\n广东中山市电信5.58s\n0.58s\n联通\n北京北京市联通0.07s\n辽宁阜新市联通2.87s\n0.34s\n移动\n天津天津市移动0.07s\n黑龙江鹤岗市移动8.85s\n0.68s\n海外\n美国国外0.22s\n澳大利亚国外1.08s\n0.53s\n教育网\n北京北京市教育网0.17s\n辽宁沈阳市教育网0.34s\n0.25s\n香港\n香港香港0.05s\n香港香港0.19s\n0.12s\n台湾\n台湾台湾0.09s\n台湾台湾0.18s\n0.14s\n澳门\n澳门澳门0.12s\n澳门澳门0.12s\n0.12s\n\n详细报告：http://www.17ce.com/site/http/20200315_4115e56066b111eab8bc2bbb7b33a12c:1.html\n摘自：https://51.ruyo.net/15149.html\n","categories":["转载"],"tags":["CDN","Github","jsDelivr","静态文件加速"]},{"title":"使用宝塔面板开启BasicAuth  认证加固安全","url":"/posts/16148/","content":"前言宝塔面板相对于Linux基础较为薄弱的人来说是非常方便的,但是有时候一些安全问题总是让人头疼，今天我们通过开启宝塔登陆BasicAuth 认证， 为了防御扫描和拦截一下恶意请求，来保证宝塔的第一道防线的稳固。\n开始[toc]\n1.首先，进入“面板设置”，可以在下面找到“ BasicAuth  认证 ”。\n\n2.然后开始配置，面板会出现这样的窗口。要注意红色的提示，基本上就是下面的四行。后面我会针对黑体内容补充，比如说怎样关闭 BasicAuth认证 。\n\n\n  必须要用到且了解此功能才决定自己是否要开启!\n  开启后，以任何方式访问面板，将先要求输入BasicAuth用户名和密码\n  开启后，能有效防止面板被扫描发现，但并不能代替面板本身的帐号密码\n  请牢记BasicAuth密码，一但忘记将无法访问面板\n  如忘记密码，可在SSH通过bt命令来关闭BasicAuth验证\n\n3.确定之后是下面的用户名和密码的配置。\n\n4.填写好之后我们，我们刷新宝塔面板，可能会出现这样的提示。\n\n有两种解决办法\n1.查看面板入口：&#x2F;etc&#x2F;init.d&#x2F;bt default2.关闭安全入口：rm -f &#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;admin_path.pl\n\n你也可以用我的方法。在SSH控制台输入bt default\n4.1找到宝塔面板的入口\n\n5.复制链接打开输入之前设置 BasicAuth认证的信息，就可以正常进入面板，但是我们还是要注意：我们把 BasicAuth认证通过了之后，进入面板还是需要之前初始的安全入口的账号密码。\n\n如何关闭在SSH控制台输入 bt ,按提示数字操作。\n\n最后补充我们不妨简单了解一下 BasicAuth认证的原理。\n可以参考文章：https://blog.csdn.net/ai2000ai/article/details/85775484\nhttps://www.leiue.com/what-is-basic-auth\n\nBasicAuth是最简单的一种（户名+密码）认证方式，用base64_encode加密，仅限在一些安全要求不是那么高的场景下使用。\n\nBasicAuth 是最简单的一种（户名+密码）认证方式，这种方式有很多问题, 比如它通过网络发送用户名和密码, 而这些都是以一种很容易解码的形式表示的。\n虽然它是用 base64_encode 加密过, 但这种加密的作用也仅仅是让可信任的用户不太可能在进行网络观测时无意中看到密码, 而不能防止恶意用户. 所以也仅限在一些安全要求不是那么高的场景下使用。\nBasic Auth 是开放平台的两种认证方式，简单点说明就是每次请求 API 时都提供用户的 username 和 password。\n要明白 BasicAuth 的原理和实现. 简单来说, 它是检查你的 Headers 中的 Authorization. 从中解析出 username 和 password, 和服务器保存的进行对比, 如果一致则通过, 否则返回 401/403 状态码, 表示客户端没有携带或携带了错误的认证信息。\nBasicAuth 也被用于服务器或者网站的防止扫面来使用。\n","categories":["日志"],"tags":["宝塔面板","base64_encode","BasicAuth认证"]},{"title":"记一次视频云端转码播放测试","url":"/posts/21728/","content":"\n2020.01.01新的一年快快乐乐吧！祝大家Happy new year\n\n\n猜一下在哪拍的？\n第一个视频全局插入\nvar player = new DogePlayer({ container: document.getElementById(‘player’), userId: 871, vcode: ‘8264e27e74f6c544’, autoPlay: false });\n第二个插入形式iframe\n总之测试下来，在云端解码和很成功，速度真的快，减少了博客不少的压力哈哈。真的很喜欢第一个小姐姐cover的歌，完美\n油管Channel：polarrana 还有很多很多歌有兴趣看一看，有时间我要全部收藏一下\n","categories":["测试"],"tags":["video transcode"]},{"title":"怎样解决\\\"您与此网站建立链接并非完全安全\\\"","url":"/posts/46915/","content":"[toc]\n前言一直用着免费的SSL证书，强制https就是为了好看，且不说安全什么的，毕竟是免费的，秉着能用就好的原则。可是今天无意间发现一个小细节，就是别人的网站都有小绿?我的却没有，没有就算了还有一个感叹号’!’，显示着 “您与此网站建立链接并非完全安全”， 于是强迫症的我越想越不对劲，我决定咋弄都要把这个小问题解决掉。\n\n\n问题思考最开始没有仔细观察感叹号的信息，以为是 SSL 证书没有上到位。我换了一个免费的证书，可是还是这样，仔细检查了 Nginx 的配置之后，确定了证书配置是没有错误的。\n然后，又开始怀疑是不是没有让http强制跳转https。毕竟 Nginx 的配置是个大难题，但发现不论怎么强制跳转，均是有感叹号出现。但是慢慢的我才发现就主页出现感叹号，其他页面都有小?， 显然，SSL证书配置和强制跳转https配置都是正确的。错误应该是：访问了http的静态资源。\n如何解决不放心，那去查查百度呢？？\n\n  规范1：代码里的元素：图片，js，css，等是不能调用外面的http://路径；\n  规范2：不能使用iframe到http://路径上；\n  规范3：from标签也不能action到http://路径上；\n\n就是说你要把资源是http的变成https把\n在GoogleChrome浏览器中，找到出现问题的页面，右键找到“检查”， 打开控制台直接Ctrl + F搜索http ，找出含有http的链接，在后台把他改成https就好了，比如我这个出现的问题是一个oss的图片。。。\n\nconsole\n查看效果\n\n","categories":["文章"],"tags":["ssl","证书","问题解决"]},{"title":"程序员为什么喜欢在晚上编码","url":"/posts/53550/","content":"[toc]\n\n以前公司有句话:白天吵架,晚上干活\n对许多开源程序员来说，夜间的工作计划是创造力和生产力来源的关键。\n\n\n如果你问大多数开发人员更喜欢在什么时候工作，大部人会说他们最高效的时间在晚上。这对于那些在工作之余为开源项目做贡献的人来说更是如此（尽管如此，希望在他们的健康范围内避免透支）。\n有些人喜欢从晚上开始，一直工作到凌晨，而另一些人则很早就起床（例如，凌晨 4 点），以便在开始日常工作之前完成大部分编程工作。\n这种工作习惯可能会使许多开发人员看起来像个怪人，不合时宜。但是，为什么有这么多的程序员喜欢在非正常时间工作，原因有很多：\n制造者日程根据 保罗·格雷厄姆Paul Graham 的观点，“生产东西”的人倾向于遵守 制造者日程 —— 他们更愿意以半天或更长时间为单位使用时间。事实上，大多数开发人员也有相同的偏好。（LCTT 译注：保罗·格雷厄姆有一篇文章述及制造者日程和管理者日程。）\n一方面，开发人员从事大型抽象系统工作，需要思维空间来处理整个模型。将他们的日程分割成 15 分钟或 30 分钟的时间段来处理电子邮件、会议、电话以及来自同事的打断，工作效果只会适得其反。\n另一方面，通常不可能以小时为单位进行有效编程。因为这么短的时间几乎不够让你把思绪放在手头的任务上并开始工作。\n上下文切换也会对编程产生不利影响。在晚上工作，开发人员可以避免尽可能多的干扰。在没有不断的干扰的情况下，他们可以花几个小时专注于手头任务，并尽可能提高工作效率。\n平和安静的环境由于晚上或凌晨不太会有来自各种活动的噪音（例如，办公室闲谈、街道上的交通），这使许多程序员感到放松，促使他们更具创造力和生产力，特别是在处理诸如编码之类的精神刺激任务时。\n独处与平静，加上他们知道自己将有几个小时不被中断的工作时间，通常会使他们摆脱白天工作计划相关的时间压力，从而产出高质量的工作。\n更不用说了，当解决了一个棘手的问题后，没有什么比尽情享受自己最喜欢的午夜小吃更美好的事情了！\n沟通与在公司内工作的程序员相比，从事开源项目的开发人员可以拥有不同的沟通节奏。大多数开源项目的沟通都是通过邮件或 GitHub 上的评论等渠道异步完成的。很多时候，其他程序员在不同的国家和时区，因此实时交流通常需要开发人员变成一个夜猫子。\n昏昏欲睡的大脑这听起来可能违反直觉，但是随着时间的推移，大脑会变得非常疲倦，因此只能专注于一项任务。晚上工作从根本上消除了多任务处理，而这是保持专注和高效的主要障碍。当大脑处于昏昏欲睡的状态时，你是无法保持专注的！\n此外，许多开发人员在入睡时思考要解决的问题通常会取得重大进展。潜意识开始工作，答案通常在他们半睡半醒的凌晨时分就出现了。\n这不足为奇，因为睡眠可增强大脑功能，可帮助我们理解新信息并进行更有创造性的思考。当解决方案在凌晨出现时，这些开发人员便会起来开始工作，不错过任何机会。\n灵活和创造性思考许多程序员体会到晚上创造力会提升。前额叶皮层，即大脑中与集中能力有关的部分，在一天结束时会感到疲倦。这似乎为某些人提供了更灵活和更具创造性的思考。\n匹兹堡大学医学院精神病学助理教授 Brant Hasler 表示：“由于自上而下的控制和‘认知抑制’的减少，大脑可能会解放出来进行更发散的思考，从而使人们更容易地将不同概念之间的联系建立起来。” 结合轻松环境所带来的积极情绪，开发人员可以更轻松地产生创新想法。\n此外，在没有干扰的情况下集中精力几个小时，“沉浸在你做的事情中”。这可以帮助你更好地专注于项目并参与其中，而不必担心周围发生的事情。\n明亮的电脑屏幕因为整天看着明亮的屏幕, 许多程序员的睡眠周期被延迟。电脑屏幕发出的蓝光扰乱我们的昼夜节律，延迟了释放诱发睡眠的褪黑激素和提高人的机敏性，并将人体生物钟重置到更晚的时间。从而导致，开发人员往往睡得越来越晚。\n来自过去的影响过去，大多数开发人员是出于必要在晚上工作，因为在白天当公司其他人都在使用服务器时，共享服务器的计算能力支撑不了编程工作，所以开发人员需要等到深夜才能执行白天无法进行的任务，例如测试项目、运行大量的“编码-编译-运行-调试”周期以及部署新代码。现在尽管服务器功能变强大了，大多数可以满足需求，但夜间工作的趋势仍是这种文化的一部分。\n结语尽管开发人员喜欢在晚上工作的原因很多，但请记住，做为夜猫子并不意味着你应该克扣睡眠时间。睡眠不足会导致压力和焦虑，并最终导致倦怠。\n获得足够质量的睡眠是维持良好身体健康和大脑功能的关键。例如，它可以帮助你整合新信息、巩固记忆、创造性思考、清除身体积聚的毒素、调节食欲并防止过早衰老。\n无论你是哪种日程，请确保让你的大脑得到充分的休息，这样你就可以在一整天及每天的工作中发挥最大的作用！\nvia: https://opensource.com/article/20/2/why-developers-code-night\n摘： https://linux.cn/article-11924-1.html\n","categories":["转载"],"tags":["why-developers-code-night","晚上编码","程序员"]},{"title":"记一次在线网盘程序Z-File安装","url":"/posts/50193/","content":"前言此项目是一个在线文件目录的程序, 支持各种对象存储和本地存储, 使用定位是个人放常用工具下载, 或做公共的文件库. 不会向多账户方向开发.\n前端基于 h5ai 的原有功能使用 Vue 重新开发了一遍. 后端采用 SpringBoot, 数据库采用内嵌数据库.\n最近开发了一个在线网盘程序 ZFile, 支持各种对象存储、OneDrive、FTP、本地存储. 本文包含普通用户和宝塔用户的安装方式.\n预览地址 https://zfile.jun6.net\n系统特色\n  内存缓存 (免安装)\n  内存数据库 (免安装)\n  个性化配置\n  自定义目录的 header 说明文件\n  自定义 JS, CSS\n  文件夹密码\n  支持在线浏览文本文件, 视频, 图片, 音乐. (支持 FLV 和 HLS)\n  文件/目录二维码\n  缓存动态开启, 缓存自动刷新\n  全局搜索\n  支持 阿里云 OSS, FTP, 华为云 OBS, 本地存储, MINIO, OneDrive 国际/家庭/个人版, OneDrive 世纪互联版, 七牛云 KODO, 腾讯云 COS, 又拍云 USS.\n\n安装依赖环境:\n# CentOS系统yum install -y java-1.8.0-openjdk unzip# Debian&#x2F;Ubuntu系统apt updateapt install -y openjdk-8-jre-headless unzip\n\n如为更新程序, 则请先执行 rm -rf ~/zfile 清理旧程序. 首次安装请忽略此选项.\n下载项目\nwget -P ~ https:&#x2F;&#x2F;c.jun6.net&#x2F;ZFILE&#x2F;zfile-1.2.warcd ~mkdir zfile &amp;&amp; unzip zfile-1.2.war -d zfile &amp;&amp; rm -rf zfile-1.2.warchmod +x ~&#x2F;zfile&#x2F;bin&#x2F;*.sh\n\n目录结构1234567  \n├── zfile├── META-INF├── WEB-INF└── bin├── start.sh # 启动脚本└── stop.sh # 停止脚本├── restart.sh # 重启脚本\n启动项目\n~&#x2F;zfile&#x2F;bin&#x2F;start.sh\n\n停止项目\n~&#x2F;zfile&#x2F;bin&#x2F;stop.sh\n\n重启项目\n~&#x2F;zfile&#x2F;bin&#x2F;restart.sh\n\n修改配置文件\nvim ~&#x2F;zfile&#x2F;WEB-INF&#x2F;classes&#x2F;application.yml\n\n默认启动端口为 8080, 如需请配置文件请编辑上述文件, 修改后重启程序生效.\n开放端口 (重点)如部署后无法访问, 请检查防火墙是否开启此端口:\n访问地址：\n用户前台：http : //127.0.0.1 : 8080/#/main\n初始安装：http : //127.0.0.1 : 8080/ #/install\n管理后台：http : //127.0.0.1 : 8080/#/admin\nOneDrive使用教程。访问地址进行授权，获取accessToken和refreshToken：\n国际/家庭/个人版：\nhttps://login.microsoftonline.com/common/oauth2/v2.0/authorize?client_id=09939809-c617-43c8-a220-a93c1513c5d4&amp;response_type=code&amp;redirect_uri=https://zfile.jun6.net/onedirve/callback&amp;scope=offline_access% 20User.Read％20Files.ReadWrite.All\n世纪互联版：\nhttps://login.chinacloudapi.cn/common/oauth2/v2.0/authorize?client_id=4a72d927-1907-488d-9eb2-1b465c53c1c5&amp;response_type=code&amp;redirect_uri=https://zfile.jun6.net/onedirve/china-callback&amp;scope= offline_access％20User.Read％20Files.ReadWrite.All\n然后分别填充至访问令牌和刷新令牌即可：\n\n运行环境\n  JDK： 1.8\n  缓存： caffeine\n  数据库： h2/mysql\n\n预览\n\n\n常见问题数据库缓存默认支持h2和mysql，前者为嵌入式数据库，无需安装，但相对相对更好。\n默认路径默认H2数据库文件地址：~/.zfile/db/，~表示用户目录，windows为C:/Users/用户名/，linux为/home/用户名/，root用户为/root/\n头尾文件和加密文件\n  目录清单显示文件清单 header.md\n  目录需要密码访问，添加文件password.txt（无法拦截此文件被下载，但可以改名文件）\n\n转载本文链接： http://www.zhaojun.im/zfile-install/\n","categories":["转载"],"tags":["Z-File","在线网盘程序"]},{"title":"数学公式演示","url":"/posts/25486/","content":"\n\n  \n\n\n\n","categories":["测试"],"tags":["MathJax"]}]