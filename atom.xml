<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Gitiu&#39;s Blog</title>
  
  <subtitle>谁能预测未来</subtitle>
  <link href="https://blog.gitiu.com/atom.xml" rel="self"/>
  
  <link href="https://blog.gitiu.com/"/>
  <updated>2021-12-18T13:55:38.807Z</updated>
  <id>https://blog.gitiu.com/</id>
  
  <author>
    <name>PlutoTz</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://blog.gitiu.com/posts/0/"/>
    <id>https://blog.gitiu.com/posts/0/</id>
    <published>2021-12-18T13:55:50.975Z</published>
    <updated>2021-12-18T13:55:38.807Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre><code>如你所见deepin最近发布了它的社区版20.3，这次带来几个重要的更新：</code></pre><ol><li><p><strong>更强大的内核版本</strong></p><p> Stable内核升级到5.15版本，增强对Intel 12代U和NTFS文件系统的支持，系统兼容性进一步提升。深度操作系统支持选择双内核（LTS+Stable）进行安装，同时也可以手动升级内核版本。</p></li><li><p><strong>方便管理的相册</strong></p><p> 照片批量选择更精准，同时支持快捷键操作。增加视频导入、预览、搜索功能，状态栏可以分开展示照片和视频数量。优化主要功能交互设计，带来更方便的照片、视频管理体验。</p></li><li><p><strong>更好用的截图录屏</strong></p><p> 截图录屏增加滚动长截图功能，主要用于单页界面内容不能满足需求，需要手动翻页截取多张图片的场景，截图过程只需滚动就可以截出完整内容。在20.2.4版本已经上线的OCR功能，也支持在长截图场景下使用，更快捷的提取想要的文字内容。</p></li><li><p><strong>新增与优化</strong></p><p>更多详情请见官方更新日志：<a class="link"   href="https://www.deepin.org/zh/2021/11/23/deepin-20-3/" >https://www.deepin.org/zh/2021/11/23/deepin-20-3/<i class="fas fa-external-link-alt"></i></a></p></li></ol><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><pre><code>但是实际上，我本人第一次接触deepin是在2019年那个时候还是15.0的版本时代，当然界面和功能没有现在那么完善，当时使用也很不错，只是软件有点少而且更新慢。但安装在我家里的那台2012年生产的联想笔记本g470，运行还是十分的流畅，日常使用看视频和写稿子还是很不错，但是毕竟是很久之前的笔记本，硬件是很难跟的上,特别是低色域的TN屏幕，简直是不忍直视。所以说把deepin装在主力机上来使用的话，还是能迸发出很大生产力的。所以我打算趁着这个更新机会把它装进我现在的笔记本暗影骑士3上，本子的型号为Acer AN515-52。由于我已经有windows系统，所以主要看这个deepin的安装。这个篇文章主要是描述我遇到一些小==问题==和一个一个的小坑。以及我自己在网上搜查和摸索的解决方案！！太多比较简单的我就不再写，但是我尽量把细节说清楚。</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>大体上步骤有下面这些：</p><pre><code>**由于我都装好了所以可能会有图片不够的情况出现，所以我尽可能多写文字说明。**</code></pre><h3 id="下载deepin-iso镜像"><a href="#下载deepin-iso镜像" class="headerlink" title="下载deepin iso镜像"></a>下载deepin iso镜像</h3><p><strong>镜像下载</strong></p><p>官方：<a class="link"   href="http://cdimage.deepin.com/releases/20.3/deepin-desktop-community-20.3-amd64.iso" >http://cdimage.deepin.com/releases/20.3/deepin-desktop-community-20.3-amd64.iso<i class="fas fa-external-link-alt"></i></a></p><p>OSDN：<a class="link"   href="https://osdn.net/projects/deepin/storage/20.3/" >https://osdn.net/projects/deepin/storage/20.3<i class="fas fa-external-link-alt"></i></a></p><p>百度网盘：<a class="link"   href="https://pan.baidu.com/s/1F59owLkVL7CuSqpxmUfRwQ%EF%BC%88%E6%8F%90%E5%8F%96%E7%A0%81" >https://pan.baidu.com/s/1F59owLkVL7CuSqpxmUfRwQ（提取码<i class="fas fa-external-link-alt"></i></a>: 9rgm）</p><p>Google Drive：<a class="link"   href="https://drive.google.com/drive/folders/10_GPfQY6EhF0ZhB6htrWnMg5j5jTUP9F?usp=sharing" >https://drive.google.com/drive/folders/10_GPfQY6EhF0ZhB6htrWnMg5j5jTUP9F<i class="fas fa-external-link-alt"></i></a></p><p>BT：<a class="link"   href="https://www.mediafire.com/folder/5cy04ztpfj6m8/deepin_20.3" >https://www.mediafire.com/folder/5cy04ztpfj6m8/deepin_20.3<i class="fas fa-external-link-alt"></i></a></p><h3 id="准备一个U盘或者是移动硬盘"><a href="#准备一个U盘或者是移动硬盘" class="headerlink" title="准备一个U盘或者是移动硬盘"></a>准备一个U盘或者是移动硬盘</h3><pre><code>U盘不要太小，8G往上不然两个镜像进去都满了。这个时候我们要把镜像刻进去，这里我们有两种方式：[ventoy](https://www.ventoy.net/cn/) 和 官方自带的“ [深度启动盘制作工具](http://cdimage.deepin.com/applications/deepin-boot-maker/windows/deepin-boot-maker.exe)”。但是我推荐使用第一种，真的是神仙u盘启动工具。使用教程：**[新一代多系统启动U盘 Ventoy 使用指南](https://baijiahao.baidu.com/s?id=1695764707557648098&amp;wfr=spider&amp;for=pc)**             **[不用PE的PE，使用Ventoy安装系统](https://zhuanlan.zhihu.com/p/137521354)**这种网上搜多的很，这里不再多说。大致上你制作好启动盘之后就把上面下载好的镜像拖进去。</code></pre><h3 id="电脑硬盘分区"><a href="#电脑硬盘分区" class="headerlink" title="电脑硬盘分区"></a>电脑硬盘分区</h3><p>工具是 <a class="link"   href="https://www.diskgenius.cn/" >Diskgenius<i class="fas fa-external-link-alt"></i></a>，免费的绝对够用。</p><pre><code>网搜分区教程： http://www.360doc.com/content/17/1031/18/47597997_699788438.shtml</code></pre><p>分出空余的硬盘空间，这里我推荐分出80GB。</p><p><strong>草写不下去了。看人家的文章去，比我写的好！</strong></p><p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/image-20211205170318324-8702877.png" alt="image-20211205170318324"></p><p>链接在这：<a href="https://blog.csdn.net/qq_42422162/article/details/116612379"><strong>双系统下Deepin的安装和卸载(Deepin20.2+Win10)——超详细小白教程</strong></a></p><p>注意硬盘按这个分，尽量按照这个思路来就好：</p><pre><code>交换分区一般是根据你自己的内存来安排，比如说16GB分8G或者16GB</code></pre><p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/image-20211205155649517.png" alt="image-20211205155649517"></p><h3 id="进BIOS和Boot-Manager并启动U盘"><a href="#进BIOS和Boot-Manager并启动U盘" class="headerlink" title="进BIOS和Boot Manager并启动U盘"></a>进BIOS和Boot Manager并启动U盘</h3><pre><code>笔记本按F2或者其他按键，这个对应的品牌在下面：</code></pre><table><thead><tr><th><strong>IBM</strong></th><th><strong>冷开机按*F1*，部分新型号可以在重新启动时启动按*F1*</strong></th></tr></thead><tbody><tr><td><strong>HP</strong></td><td><strong>启动和重新启动时按*F2*</strong></td></tr><tr><td><strong>SONY</strong></td><td><strong>启动和重新启动时按*F2*</strong></td></tr><tr><td><strong>Dell</strong></td><td><strong>启动和重新启动时按*F2*</strong></td></tr><tr><td><strong>Acer</strong></td><td><strong>启动和重新启动时按*F2*</strong></td></tr><tr><td><strong>Toshiba</strong></td><td><strong>冷开机时按*ESC*然后按*F1*</strong></td></tr><tr><td><strong>Compaq</strong></td><td><strong>开机到右上角出现闪动光标时按*F10*，或者开机时按*F10*</strong></td></tr><tr><td><strong>Fujitsu</strong></td><td><strong>启动和重新启动时按*F2*</strong></td></tr><tr><td><strong>大多数国产和台湾品牌</strong></td><td><strong>启动和重新启动时按*F2*</strong></td></tr><tr><td><strong>台式机</strong></td><td><strong>进入*bios* 开机时候请多按*del*键*,*就可以进入*bios*</strong></td></tr></tbody></table><pre><code>事实上有笔记本没有在bios中开启==按F12进入boot manager== 你需要在bios中开启，也很简单。</code></pre><p><a class="link"   href="https://jingyan.baidu.com/article/3aed632e792088701080911a.html" >笔记本电脑按F12进入启动项<i class="fas fa-external-link-alt"></i></a></p><pre><code>进入boot manager,在下面的Boot Option Menu找到USB,U盘启动项，回车进入ventoy！</code></pre><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/image-20211205165950006-20211205191844356.png" alt="image-20211205165950006" style="zoom:50%;" /><pre><code>*找到自己拖进去的那个deepin iso镜像* ，按下回车键。会进入这里面：</code></pre><p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/image-20211205183235447.png" alt="image-20211205183235447"></p><pre><code>选择第一个（这是我网上找的图！！）但是大致上都一样的。接下来deepin的话一步一步往下安装，分区要注意，别分错了==按照之前==我们在win里面分好的选，可以参考下面的教程很简单！</code></pre><p><em>注意：如果你的笔记本有nvidia显卡，请==不要勾选==安装引导程序的 “安装闭源nvidia驱动”</em></p><pre><code>                                    **后面我们可以打上你的显卡对应的驱动！！**</code></pre><p>CSDN很多教程：</p><p><a class="link"   href="https://www.jianshu.com/p/7551b04b3941" >https://www.jianshu.com/p/7551b04b3941<i class="fas fa-external-link-alt"></i></a></p><p><a class="link"   href="https://www.deepin.org/zh/installation/" >https://www.deepin.org/zh/installation/<i class="fas fa-external-link-alt"></i></a></p><p>默认deepin是grub引导的，很不好看我们后面可以使用refind美化</p><h2 id="我主要讲我自己遇到的问题"><a href="#我主要讲我自己遇到的问题" class="headerlink" title="我主要讲我自己遇到的问题"></a>我主要讲我自己遇到的问题</h2><h3 id="如何在win下面隐藏LInux分区"><a href="#如何在win下面隐藏LInux分区" class="headerlink" title="如何在win下面隐藏LInux分区"></a>如何在win下面隐藏LInux分区</h3><pre><code>正常情况下打开winsows文件管理器是不能读deepin系统盘的，没有容量显示，这是因为在Windows下ext4格式默认无法读，你可以借助第三方工具如diskgenius,[Ext2Read](http://sourceforge.net/projects/ext2read/),[Ext2Fsd](http://www.ext2fsd.com/)进行访问。隐藏的话看下面的图片：使用DiskGenius，选择标红的那一项！！</code></pre><p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn@4a185a5e9cf530732a6425d01617f13a292043a0/2021/12/05/3723959888ded76100efce53ef0f85b3.png"></p><h3 id="在Linux下隐藏win分区"><a href="#在Linux下隐藏win分区" class="headerlink" title="在Linux下隐藏win分区"></a>在Linux下隐藏win分区</h3><p>这个有两个办法：</p><pre><code>第一个方法: 按Ctrl和Alt和T，打开终端</code></pre><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">查询分区UUID：lsblk -f</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">找到你要隐藏分区的UUID复制下来</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">新建：90-hide_parts.rules</span></span><br><span class="line">sudo nano /etc/udev/rules.d/90-hide_parts.rules </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">添加内容：</span></span><br><span class="line">ENV&#123;ID_FS_UUID&#125;==&quot;XXXX&quot;, ENV&#123;UDISKS_IGNORE&#125;=&quot;1&quot;</span><br><span class="line"></span><br><span class="line">把XXXX换成要隐藏的分区uuid，保存重启生效</span><br></pre></td></tr></table></figure><p><strong>这里进入是GNU nano：使用快捷Ctrl+X编辑，然后会提示输入Y保存修改</strong></p><pre><code>这里终端下面会有提示一些操作方式，配合快捷键来操作！！</code></pre><p>第二个方法:使用软件disk</p><pre><code>方法参考：[在Deepin系统的深度文件管理器侧栏中只显示挂载Windows分区的方法](https://www.ywnz.com/linuxjc/3958.html)</code></pre><p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/image-20211205165553224.png" alt="image-20211205165553224"></p><h3 id="使用gparted分区增加硬盘容量"><a href="#使用gparted分区增加硬盘容量" class="headerlink" title="使用gparted分区增加硬盘容量"></a>使用gparted分区增加硬盘容量</h3><p>大致上你去 <a class="link"   href="https://gparted.org/" >gparted<i class="fas fa-external-link-alt"></i></a>  下载 <a class="link"   href="https://downloads.sourceforge.net/gparted/gparted-live-1.3.1-1-amd64.iso" >ISO镜像<i class="fas fa-external-link-alt"></i></a> 拖放到上面我们制作好的U盘，依旧是使用Ventoy启动选择这个下载好的镜像，回车。</p><p> <a href="https://www.cnblogs.com/jytx/p/6323550.html"><strong>最简单的Linux虚拟机磁盘扩容方法</strong></a></p><pre><code>[Ubuntu使用GParted扩充分区（全网最详细）](https://blog.csdn.net/qq_26779635/article/details/103574517)[使用GParted调整ubuntu根目录空间大小](https://www.cnblogs.com/yuanlibin/p/9207671.html)</code></pre><p>这里是虚拟机使用gparted,大同小异！</p><pre><code>**但是这里要注意你扩容或者缩减的两个分区是要相邻的，不相邻要自己移动调整**。    调整空间大小是在上面左右拖动下面的图条！！！</code></pre><p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/image-20211205192733513.png" alt="image-20211205192733513"></p><p>这里由于我已经改好了，没有拍图片但是操作也不难。</p><p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/image-20211205170510088.png" alt="image-20211205170510088"></p><h3 id="使用引导工具引导双系统"><a href="#使用引导工具引导双系统" class="headerlink" title="使用引导工具引导双系统"></a>使用引导工具引导双系统</h3><h4 id="refind引导"><a href="#refind引导" class="headerlink" title="refind引导"></a>refind引导</h4><p>在深度系统打开终端：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">安装refind，提示输入密码</span></span><br><span class="line">sudo apt install refind</span><br><span class="line"><span class="meta">#</span><span class="bash">输完密码一路yes,出现图新界面也选择<span class="string">&#x27;是&#x27;</span>，回车</span></span><br></pre></td></tr></table></figure><p>打开deepin文件管理器进入系统盘    </p><ol><li>对<strong>boot目录</strong>右键使用管理员权限，就是==以管理员身份打开== ，输入密码</li><li>进去之后打开 efi目录在打开EFI目录，找到refind 目录</li><li>编辑refind.conf文件</li></ol><p><strong>可以把里面的全部删掉</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">无任何操作就是等待10秒关闭引导界面启动第一启动项，默认第一启动项是windows</span></span><br><span class="line">timeout 10</span><br><span class="line"><span class="meta">#</span><span class="bash">不允许扫描其他的启动文件，大致上就这些</span></span><br><span class="line">dont_scan_dirs EFI/ubuntu,EFI/Boot,EFI/Microsoft,EFI/deepin</span><br><span class="line"><span class="meta">#</span><span class="bash">这里如果你使用主题的话你需要加上这段代码</span></span><br><span class="line"><span class="meta">#</span><span class="bash">include themes/rEFInd-xxx/theme.conf</span></span><br><span class="line"><span class="meta">#</span><span class="bash">使用时去掉注释,将xxx换成主题名字 如下面</span></span><br><span class="line">include themes/rEFInd-glassy/theme.conf</span><br></pre></td></tr></table></figure><p>refind配置文件有很多选项这里不再多说，你可以去github或者是百度找，可以改分辨率和默认启动系统等等：</p><pre><code>[refind 0.10.3 配置文件refind.conf简单分析](https://blog.csdn.net/Bleachswh/article/details/51713567)[配置refind config以去除不必要的选项](https://blog.csdn.net/XiaoshaXs/article/details/52016717)**注意**：这里不使用 `scan_all_linux_kernel false`  是因为我们在上面屏蔽了deepin和windows的启动项文件，但是在boot目录下面能找到启动deepin和windows的文件名为==XXXX-amd64-desktop==的内核文件，启动它们更方便！！！</code></pre><h4 id="使用refind主题美化"><a href="#使用refind主题美化" class="headerlink" title="使用refind主题美化"></a>使用refind主题美化</h4><p>1.主题我推荐两款：<a class="link"   href="https://github.com/EvanPurkhiser/rEFInd-minimal" >rEFInd-minimal<i class="fas fa-external-link-alt"></i></a>  和  <a class="link"   href="https://github.com/Pr0cella/rEFInd-glassy" >rEFInd-glassy<i class="fas fa-external-link-alt"></i></a></p><pre><code>下载解压放到上面refind文件夹内的themes文件内    文件路径为../renfind/themes/rEFInd-xxx/… ==不要搞错！！！==（ “xxx“为主题名字）</code></pre><p>2.重启deepin 或者使用命令 <code>sudo reboot</code></p><p>3.进入bios界面，找到Secure boot 关掉它，选项应该是disabled，然后把refind启动项调整到最前面即可。</p><pre><code>**注意有些笔记本需要设置bios密码才能设置这些选项，设置一个==自己记得住==的！！！**</code></pre><p>或者你使用软件<strong>easyuefi</strong>进入windows调整。</p><pre><code>**[【双系统】win10 和 Ubuntu18.04 启动引导项管理 EasyUEFI](https://blog.csdn.net/qq_42815188/article/details/90316291)**</code></pre><p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/image-20211205172759260.png" alt="image-20211205172759260"></p><p>还是有些迷糊就去百度，太多文章了。这里就不再赘述。</p><p>按esc,选择exit项，按F10保存关机重启进入refind启动项</p><h5 id="效果图："><a href="#效果图：" class="headerlink" title="效果图："></a>效果图：</h5><pre><code>我使用的是glassy主题，当然你可以去换背景图，在主题目录里面把==background.png==改成自己的图，但是名字还是这个名字。（当然你也可以去theme.conf改）</code></pre><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn@d5ea1309a3fbe9b75ffe48432930837791f8d20a/2021/12/05/5ccfb5596e37bc8ca98938e1191e0628.png" style="zoom:50%;" /><p><em>注意</em>：这个界面里你可能看到很多启动项，那就是上面那个refind.conf没有配置好</p><pre><code>解决办法就是你看启动项下面的图标所在boot目录中的文件位置信息，然后在使用`dont_scan_dirs`和`dont_scan_files`屏蔽它们就好。</code></pre><h4 id="xorboot-UEFI引导"><a href="#xorboot-UEFI引导" class="headerlink" title="xorboot UEFI引导"></a>xorboot UEFI引导</h4><pre><code>这里xorboot 这个引导程序是国人开发的，但是我觉得没有上面那个好看，但是我还是要推荐一下！！！我这里就不再多写，看下面文章就好。**[xorboot多系统引导图文教程](https://blog.csdn.net/qq_40582463/article/details/81586826)**（这个教程写的很详细）[XORBOOT UEFI工具制作双系统启动引导](https://blog.csdn.net/Ilson_/article/details/77919610)</code></pre><h3 id="外接显示器安装nvidia驱动程序"><a href="#外接显示器安装nvidia驱动程序" class="headerlink" title="外接显示器安装nvidia驱动程序"></a>外接显示器安装nvidia驱动程序</h3><pre><code>[Deepin 20 外接显示器配置](https://cdn.jsdelivr.net/gh/plutotz/cdn@d5ea1309a3fbe9b75ffe48432930837791f8d20a/2021/12/05/5ccfb5596e37bc8ca98938e1191e0628.png)[Deepin安装NVIDIA显卡驱动](https://cdn.jsdelivr.net/gh/plutotz/cdn@d5ea1309a3fbe9b75ffe48432930837791f8d20a/2021/12/05/5ccfb5596e37bc8ca98938e1191e0628.png)</code></pre><h4 id="集显与独显切换"><a href="#集显与独显切换" class="headerlink" title="集显与独显切换"></a>集显与独显切换</h4><p>笔记本外出时使用集显可以节省电量，增长待机时间，可以使用插件：<a class="link"   href="https://github.com/zty199/dde-dock-switch_graphics_card" >dde-dock-switch_graphics_card<i class="fas fa-external-link-alt"></i></a>，安装后可以方便地在dock栏切换显卡。</p><p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/20200813114802156.png"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><pre><code>这样以来我们的deepin系统就安装好了，应该没有多大问题，日常写字编码开发还够用的。</code></pre><p>对了这里推荐下载第三方应用商店 <a class="link"   href="https://spark-app.store/" >星火商店<i class="fas fa-external-link-alt"></i></a>,可以安装第三方软件如：小飞机Ng,Clash X</p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/image-20211205194320586.png" alt="image-20211205194320586" style="zoom:50%;" /><pre><code>                                    [在Deepin 20系统中下载及安装星火应用商店的方法](https://www.ywnz.com/linuxrj/7868.html)    可能技术有限写的文章有些乱，但是这覆盖了大多数人的问题,希望能帮你解决这些问题。也在此感谢那些在网上提供教程的人，正是因为你们的开源分享精神才让deepin更加的完美！</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数学公式演示</title>
    <link href="https://blog.gitiu.com/posts/25486/"/>
    <id>https://blog.gitiu.com/posts/25486/</id>
    <published>2021-03-22T04:41:18.000Z</published>
    <updated>2021-03-23T03:51:46.200Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.602ex" xmlns="http://www.w3.org/2000/svg" width="25.757ex" height="5.018ex" role="img" focusable="false" viewBox="0 -1509.9 11384.6 2217.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345, 0)"><path data-c="210F" d="M182 599Q182 611 174 615T133 619Q118 619 114 621T109 630Q109 636 114 656T122 681Q125 685 202 688Q272 695 286 695Q304 695 304 684Q304 682 295 644T282 597Q282 592 360 592H399Q430 592 445 587T460 563Q460 552 451 541L442 535H266L251 468Q247 453 243 436T236 409T233 399Q233 395 244 404Q295 441 357 441Q405 441 445 417T485 333Q485 284 449 178T412 58T426 44Q447 44 466 68Q485 87 500 130L509 152H531H543Q562 152 562 144Q562 128 546 93T494 23T415 -13Q385 -13 359 3T322 44Q318 52 318 77Q318 99 352 196T386 337Q386 386 346 386Q318 386 286 370Q267 361 245 338T211 292Q207 287 193 235T162 113T138 21Q128 7 122 4Q105 -12 83 -12Q66 -12 54 -2T42 26L166 530Q166 534 161 534T129 535Q127 535 122 535T112 534Q74 534 74 562Q74 570 77 576T84 585T96 589T109 591T124 592T138 592L182 595V599Z"></path></g><g data-mml-node="mfrac" transform="translate(907, 0)"><g data-mml-node="mi" transform="translate(400.5, 676)"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g><rect width="1127" height="60" x="120" y="220"></rect></g><g data-mml-node="mi" transform="translate(2274, 0)"><path data-c="1D713" d="M161 441Q202 441 226 417T250 358Q250 338 218 252T187 127Q190 85 214 61Q235 43 257 37Q275 29 288 29H289L371 360Q455 691 456 692Q459 694 472 694Q492 694 492 687Q492 678 411 356Q329 28 329 27T335 26Q421 26 498 114T576 278Q576 302 568 319T550 343T532 361T524 384Q524 405 541 424T583 443Q602 443 618 425T634 366Q634 337 623 288T605 220Q573 125 492 57T329 -11H319L296 -104Q272 -198 272 -199Q270 -205 252 -205H239Q233 -199 233 -197Q233 -192 256 -102T279 -9Q272 -8 265 -8Q106 14 106 139Q106 174 139 264T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 299 34 333T82 404T161 441Z"></path></g><g data-mml-node="mo" transform="translate(3202.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(4258.6, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mfrac" transform="translate(5036.6, 0)"><g data-mml-node="msup" transform="translate(400.7, 676)"><g data-mml-node="mi"><path data-c="210F" d="M182 599Q182 611 174 615T133 619Q118 619 114 621T109 630Q109 636 114 656T122 681Q125 685 202 688Q272 695 286 695Q304 695 304 684Q304 682 295 644T282 597Q282 592 360 592H399Q430 592 445 587T460 563Q460 552 451 541L442 535H266L251 468Q247 453 243 436T236 409T233 399Q233 395 244 404Q295 441 357 441Q405 441 445 417T485 333Q485 284 449 178T412 58T426 44Q447 44 466 68Q485 87 500 130L509 152H531H543Q562 152 562 144Q562 128 546 93T494 23T415 -13Q385 -13 359 3T322 44Q318 52 318 77Q318 99 352 196T386 337Q386 386 346 386Q318 386 286 370Q267 361 245 338T211 292Q207 287 193 235T162 113T138 21Q128 7 122 4Q105 -12 83 -12Q66 -12 54 -2T42 26L166 530Q166 534 161 534T129 535Q127 535 122 535T112 534Q74 534 74 562Q74 570 77 576T84 585T96 589T109 591T124 592T138 592L182 595V599Z"></path></g><g data-mml-node="mn" transform="translate(613.1, 363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1578" height="60" x="120" y="220"></rect></g><g data-mml-node="msup" transform="translate(6854.6, 0)"><g data-mml-node="mi"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g><g data-mml-node="mn" transform="translate(833, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(8091.1, 0)"><path data-c="1D713" d="M161 441Q202 441 226 417T250 358Q250 338 218 252T187 127Q190 85 214 61Q235 43 257 37Q275 29 288 29H289L371 360Q455 691 456 692Q459 694 472 694Q492 694 492 687Q492 678 411 356Q329 28 329 27T335 26Q421 26 498 114T576 278Q576 302 568 319T550 343T532 361T524 384Q524 405 541 424T583 443Q602 443 618 425T634 366Q634 337 623 288T605 220Q573 125 492 57T329 -11H319L296 -104Q272 -198 272 -199Q270 -205 252 -205H239Q233 -199 233 -197Q233 -192 256 -102T279 -9Q272 -8 265 -8Q106 14 106 139Q106 174 139 264T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 299 34 333T82 404T161 441Z"></path></g><g data-mml-node="mo" transform="translate(8964.3, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(9964.6, 0)"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g><g data-mml-node="mi" transform="translate(10733.6, 0)"><path data-c="1D713" d="M161 441Q202 441 226 417T250 358Q250 338 218 252T187 127Q190 85 214 61Q235 43 257 37Q275 29 288 29H289L371 360Q455 691 456 692Q459 694 472 694Q492 694 492 687Q492 678 411 356Q329 28 329 27T335 26Q421 26 498 114T576 278Q576 302 568 319T550 343T532 361T524 384Q524 405 541 424T583 443Q602 443 618 425T634 366Q634 337 623 288T605 220Q573 125 492 57T329 -11H319L296 -104Q272 -198 272 -199Q270 -205 252 -205H239Q233 -199 233 -197Q233 -192 256 -102T279 -9Q272 -8 265 -8Q106 14 106 139Q106 174 139 264T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 299 34 333T82 404T161 441Z"></path></g></g></g></svg></mjx-container></p><div style="text-align: center">  <div class="github-card" data-user="plutotz" data-repo="cdn" data-height="200" data-width="400" data-theme="default" data-target="" data-client-id="" data-client-secret=""></div></div><script src="/github-card-lib/githubcard.js"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="测试" scheme="https://blog.gitiu.com/categories/%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="MathJax" scheme="https://blog.gitiu.com/tags/MathJax/"/>
    
  </entry>
  
  <entry>
    <title>NAS  群晖安装第三方 qBittorrent 套件</title>
    <link href="https://blog.gitiu.com/posts/9217/"/>
    <id>https://blog.gitiu.com/posts/9217/</id>
    <published>2020-11-10T13:59:31.000Z</published>
    <updated>2021-03-22T08:23:17.587Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>双十一期间入了一款入门级白裙DS220+，考虑到下载问题以及还差不多能用但是后台挖矿的“玩物下载”，就迫不得已玩起来PT，遂就找到了一篇教程，权当是备份，然后转载补充一波，这几个月来越来越懒的写文章了！照例还是一篇有内容的水文，哈哈</p><p>下面是正文 来自 <a class="link"   href="https://blog.zuiyu1818.cn/posts/NAS_qBittorrent.html" >NAS 群晖安装 qBittorrent 套件并优化设置、替换 UI（非 docker 安装 )<i class="fas fa-external-link-alt"></i></a></p><p> 有部分删改，在此感谢！</p><p>本文你将看到：</p><ul><li>  Download Station、Transmission、qBittorrent 三款软件的对比</li><li>  qBittorrent 套件的安装和配置</li><li>  qBittorrent 替换 WebUI</li></ul><h2 id="Download-Station"><a href="#Download-Station" class="headerlink" title="Download Station"></a>Download Station</h2><p><a href="https://files.zuiyu1818.cn/NAS/DownloadStation.jpg"><img src="https://www.gitiu.com/wp-content/uploads/2020/11/DownloadStation.jpg" alt="DownloadStation" title="DownloadStation"></a></p><p>Download Station</p><p>emmm，这货一言难尽吧，用的比较少一言难尽吧。这货其实就是个套着壳的 Tr。</p><p>优点：</p><ul><li>  群晖自带，安装简单</li><li>  有着原生 GUI 界面，适合新手</li><li>  自带管理软件 <code>DS get</code></li></ul><p>缺点：</p><ul><li>  看不到啥详细数据，数据控难受啊</li></ul><h2 id="Transmission"><a href="#Transmission" class="headerlink" title="Transmission"></a>Transmission</h2><p><a href="https://files.zuiyu1818.cn/NAS/Transmission_WebUI.jpg"><img src="https://www.gitiu.com/wp-content/uploads/2020/11/Transmission_WebUI.jpg" alt="Transmission_WebUI" title="Transmission_WebUI"></a></p><p>Transmission_WebUI</p><p>保种神器，占用资源小，是几乎所有 PT 站点保种首选</p><p>优点：</p><ul><li>  非常适合保种，万种大佬就是用的它</li></ul><p>缺点：</p><ul><li>  不能跳过校验</li><li>  校验时不能下载</li><li>  多站点辅种时，文件块不对会爆红，挺烦的</li></ul><h3 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h3><p>有人反映 tr 无法下载到其他磁盘，表现为没有下载速度，这其中有权限不对的锅。这里简单说下权限问题</p><p><a href="https://files.zuiyu1818.cn/NAS/Tr_Auth1.jpg"><img src="https://www.gitiu.com/wp-content/uploads/2020/11/Tr_Auth1.jpg" alt="Tr_Auth1" title="Tr_Auth1"></a></p><p><a href="https://files.zuiyu1818.cn/NAS/Tr_Auth2.jpg"><img src="https://www.gitiu.com/wp-content/uploads/2020/11/Tr_Auth2.jpg" alt="Tr_Auth2" title="Tr_Auth2"></a></p><p>tr 权限</p><h3 id="tracker-替换教程"><a href="#tracker-替换教程" class="headerlink" title="tracker 替换教程"></a>tracker 替换教程</h3><p>站点有时会更换 tracker 服务器，经常见小伙伴们询问怎样批量替换 tracker，这里就说一下</p><ol><li>获取当前 tracker，若无属性选项卡，点击右下角即可展开 <a href="https://files.zuiyu1818.cn/NAS/tr_tacker1.jpg"><img src="https://www.gitiu.com/wp-content/uploads/2020/11/tr_tacker1.jpg" alt="tr_tacker1" title="tr_tacker1"></a> 此处记得完整复制 ↓ ，不要只复制个开头！！！ <a href="https://files.zuiyu1818.cn/NAS/tr_tacker2.jpg"><img src="https://www.gitiu.com/wp-content/uploads/2020/11/tr_tacker2.jpg" alt="tr_tacker2" title="tr_tacker2"></a></li><li>替换 tracker <a href="https://files.zuiyu1818.cn/NAS/tr_tacker3.jpg"><img src="https://www.gitiu.com/wp-content/uploads/2020/11/tr_tacker3.jpg" alt="tr_tacker3" title="tr_tacker3"></a> 此功能要求字段完全匹配，所以必须完整复制过来 <a href="https://files.zuiyu1818.cn/NAS/tr_tacker4.jpg"><img src="https://www.gitiu.com/wp-content/uploads/2020/11/tr_tacker4.jpg" alt="tr_tacker4" title="tr_tacker4"></a></li><li>点击确定，等待完成即可</li></ol><blockquote><p>若种子较多，替换时间较长，此时 WebUI 将无响应不要乱动。</p><p>替换后红种为正常现象，请耐心等待。若几 h 还是红种状态，手动暂停重开试试，若还是有问题注意关注站点公告</p></blockquote><h2 id="qBittorrent"><a href="#qBittorrent" class="headerlink" title="qBittorrent"></a>qBittorrent</h2><p>热种抢上传必备神器，推荐使用 4.1.x (4.1.7) 版本</p><h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h3><p>这里的版本适配 DSM6.2.x，x86 架构 CPU，其他自测</p><blockquote><p>已更新至 4.2.5，后面带 <code>+</code> 为增强版，个人建议 pt 慎用</p></blockquote><p>软件名称</p><p>下载地址</p><p>qBittorrent(4.1.x)</p><p><a class="link"   href="https://pan.baidu.com/s/1zrPk2K6joV22WwQ3pDL4kw" >点击下载<i class="fas fa-external-link-alt"></i></a> <code>r532</code></p><p>qBittorrent(4.2.x)</p><p><a class="link"   href="https://pan.baidu.com/s/1Rp2mBbPEByD5jSGmsROmCA" >点击下载<i class="fas fa-external-link-alt"></i></a> <code>a1hm</code></p><p>国旗数据</p><p><a class="link"   href="https://pan.baidu.com/s/1t8GpP5pZRxmj6m4lGRLEbw" >点击下载<i class="fas fa-external-link-alt"></i></a> <code>27g2</code></p><p>个人使用时间最长，感觉最稳定的版本为 4.1.7，四个月守株待兔上传了 18T+，仅供参考</p><p>4.1.x 版本也是可以修改高级参数的，有一定的动手能力即可</p><blockquote><p>4.2.x 版本不是同一个作者编译，安装过以前版本（4.1.x）的用户记得卸载以前版本，并删除 <code>/homes/admin/.config</code> 里的 qBittorrent 文件夹，再安装</p><p>实测卸载老版本装上 4.2.x 后，种子信息都在，放心更新</p><p>卸载后设置都会重置，默认用户及密码：admin/adminadmin</p><p>4.1.x 的作者地址→<a class="link"   href="http://ssd.dlinkddns.com/pub/synology/qbittorrent/" >点击前往<i class="fas fa-external-link-alt"></i></a></p><p>感谢隔壁网 <a class="link"   href="http://www.gebi1.com/space-uid-345461.html" >Auska<i class="fas fa-external-link-alt"></i></a>大佬编译 4.2.x 版本</p></blockquote><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>升级到 4.2.x 后再卸载降级到 4.1.x，会强制重新校验所有种子文件<br>4.2.x 版本若出现种子信息界面无信息，请清空浏览器缓存，不建议使用修改版，出现问题的话，后果自负</p><h4 id="关于-HTTPS"><a href="#关于-HTTPS" class="headerlink" title="关于 HTTPS"></a>关于 HTTPS</h4><p>4.2.x 版本，已经由以前的复制证书内容改为文件路径的模式，所以请将证书文件上传后填入<code>完整的路径</code><br>请确保 qb 对证书文件拥有读取权限，所以建议放置到 qb 的配置文件夹路径，如 <code>/homes/admin/.config/qBittorrent</code> 下</p><h3 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h3><ol><li>首先确认已启动 <code>admin</code> 用户。此套件默认运行用户为 admin，所以不启用可能会导致安装后无法运行。 <a href="https://files.zuiyu1818.cn/NAS/admin_sure.jpg" title="确认admin用户已经开启"><img src="https://www.gitiu.com/wp-content/uploads/2020/11/admin_sure.jpg" alt="admin_sure" title="admin_sure"></a> 确认 admin 用户已经开启</li><li>开启家目录。因为套件的配置文件、种子文件、校验文件等都是默认存放在家目录 <a href="https://files.zuiyu1818.cn/NAS/qB_home.jpg" title="启用家目录"><img src="https://www.gitiu.com/wp-content/uploads/2020/11/qB_home.jpg" alt="qB_home" title="qB_home"></a> 启用家目录</li><li>检查家目录下的 <code>admin</code> 文件夹权限是否正确。不放心的小伙伴可以在权限选项卡再确认下 admin 是否拥有<code>完全控制</code>的权限 <a href="https://files.zuiyu1818.cn/NAS/admin_auth.jpg" title="检查权限"><img src="https://www.gitiu.com/wp-content/uploads/2020/11/admin_auth.jpg" alt="admin_auth" title="admin_auth"></a> 检查权限</li><li>在套件中心手动安装 qBittorrent 套件 <a href="https://files.zuiyu1818.cn/NAS/qB_install.jpg"><img src="https://www.gitiu.com/wp-content/uploads/2020/11/qB_install.jpg" alt="qB_install" title="qB_install"></a></li></ol><p>安装完后，在套件列表里点击即可打开网页控制界面（或者手动使用 8085 端口访问）。默认用户名 <code>admin</code>密码 <code>adminadmin</code></p><p><strong>[alert] 这里一定要访问注意端口号后的’ / ‘,一定不能忘记[/alert]</strong></p><p>如：127.0.0.1:8085/</p><p>若8085端口打不开使用 8999 端口</p><p>[alert]去掉斜杠的干扰，请在qBittorrent web页面中修改，在设置-web用户界面-关闭启用跨站点请求伪造(CSRF)保护[/alert]</p><p><a href="https://files.zuiyu1818.cn/NAS/qB_start.jpg"><img src="https://www.gitiu.com/wp-content/uploads/2020/11/qB_start.jpg" alt="qB_start" title="qB_start"></a></p><h3 id="权限设置"><a href="#权限设置" class="headerlink" title="权限设置"></a>权限设置</h3><p>有小伙伴反应，使用套件安装的 qBittorrent 下载无速度，这是因为软件读写需要文件夹拥有 admin 权限，所以给文件下载路径相应的权限即可</p><p><a href="https://files.zuiyu1818.cn/NAS/qb_auth.jpg"><img src="https://www.gitiu.com/wp-content/uploads/2020/11/qb_auth.jpg" alt="qb_auth" title="qb_auth"></a></p><h3 id="国旗数据"><a href="#国旗数据" class="headerlink" title="国旗数据"></a>国旗数据</h3><p>因为 GeoIP 修改过规则，导致 qb 无法自动下载相应数据，这时只需要在 <code>/homes/admin/.local/share/data/qBittorrent</code> 目录新建 <code>GeoIP</code> 文件夹，将国家数据 <code>GeoLite2-Country.mmdb</code> 拷贝进去，重启 qb 即可</p><p><a href="https://files.zuiyu1818.cn/NAS/GeoIP.jpg"><img src="https://www.gitiu.com/wp-content/uploads/2020/11/GeoIP.jpg" alt="GeoIP" title="GeoIP"></a></p><h3 id="替换-WebUI"><a href="#替换-WebUI" class="headerlink" title="替换 WebUI"></a>替换 WebUI</h3><p>目前备用 UI 尚不完善，对我而言仅仅是多了个方便分类查看 tracker 的功能，<strong>不推荐使用</strong>，当然随便尝鲜</p><p>这里提供两个大佬的项目</p><p>[github author=”CzBiX” project=”qb-web” /] [github author=”miniers” project=”qb-web”/]</p><blockquote><p>若出现乱码，在地址栏后面加入 <code>/api/v2/app/setPreferences?json=%7B%22alternative_webui_enabled%22:false%7D</code> 进行返回原本 UI</p><p>乱码解决方式，查看自己路径是否正确</p></blockquote><h4 id="1-下载备用-WebUI"><a href="#1-下载备用-WebUI" class="headerlink" title="1. 下载备用 WebUI"></a>1. 下载备用 WebUI</h4><p><a href="https://files.zuiyu1818.cn/NAS/qB_web1.jpg"><img src="https://www.gitiu.com/wp-content/uploads/2020/11/qB_web1.jpg" alt="qB_web1" title="qB_web1"></a></p><p><a href="https://files.zuiyu1818.cn/NAS/qB_web2.jpg"><img src="https://www.gitiu.com/wp-content/uploads/2020/11/qB_web2.jpg" alt="qB_web2" title="qB_web2"></a></p><h4 id="2-解压文件至群晖"><a href="#2-解压文件至群晖" class="headerlink" title="2. 解压文件至群晖"></a>2. 解压文件至群晖</h4><p>找到所在位置</p><p><a href="https://files.zuiyu1818.cn/NAS/qB_web3.jpg"><img src="https://www.gitiu.com/wp-content/uploads/2020/11/qB_web3.jpg" alt="qB_web3" title="qB_web3"></a></p><p>在 Web 用户界面启用备用 Web UI</p><p><strong>补充 这里是解压后public 所在的上一级目录 然后至根目录 路径 比如是/volume1/xx/xx/xx/  最后要有’ / ‘</strong></p><p><a href="https://files.zuiyu1818.cn/NAS/qB_web4.jpg"><img src="https://www.gitiu.com/wp-content/uploads/2020/11/qB_web4.jpg" alt="qB_web4" title="qB_web4"></a></p><p>保存即可大功告成啦</p><p><a href="https://files.zuiyu1818.cn/NAS/qB_web5.jpg"><img src="https://www.gitiu.com/wp-content/uploads/2020/11/qB_web5.jpg" alt="qB_web5" title="qB_web5"></a></p><h3 id="qBittorrent-高级参数设置"><a href="#qBittorrent-高级参数设置" class="headerlink" title="qBittorrent 高级参数设置"></a>qBittorrent 高级参数设置</h3><h5 id="qBittorrent4-2-x-版本已经支持网页上修改高级参数了"><a href="#qBittorrent4-2-x-版本已经支持网页上修改高级参数了" class="headerlink" title="qBittorrent4.2.x 版本已经支持网页上修改高级参数了"></a>qBittorrent4.2.x 版本已经支持网页上修改高级参数了</h5><p>配置文件目录：<code>/volume3/homes/admin/.config/qBittorrent/qBittorrent.conf</code></p><p>种子文件目录：<code>/volume3/homes/admin/.local/share/data/qBittorrent/BT_backup</code></p><blockquote><p>请根据自己情况自己调整文件路径</p></blockquote><p>默认的 web 界面很多参数都无法修改，尤其是想修改磁盘缓存。打开配置文件，在 [Preferences] 字段新增一行 <code>Downloads\DiskWriteCacheSize=XXXX</code>，其中 XXXX 是缓存大小，单位是 MB。</p><p><a href="https://files.zuiyu1818.cn/NAS/qb_ini.jpg"><img src="https://www.gitiu.com/wp-content/uploads/2020/11/qb_ini.jpg" alt="qb_ini" title="qb_ini"></a></p><h4 id="内存溢出"><a href="#内存溢出" class="headerlink" title="内存溢出"></a>内存溢出</h4><p>若出现内存溢出现象，可以尝试禁用系统缓存</p><p>找到 <code>Advanced\osCache</code> 设置为 <code>false</code><br>没有的话就手动添加 <code>Advanced\osCache=false</code></p><p><a href="https://files.zuiyu1818.cn/comment/qb_osCache.jpg"><img src="https://www.gitiu.com/wp-content/uploads/2020/11/qb_osCache.jpg" alt="qb_osCache" title="qb_osCache"></a></p><blockquote><p>记得设置为 false，不是图片上的 true</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="转载" scheme="https://blog.gitiu.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    <category term="文章" scheme="https://blog.gitiu.com/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="Nas" scheme="https://blog.gitiu.com/tags/Nas/"/>
    
    <category term="qBittorrent" scheme="https://blog.gitiu.com/tags/qBittorrent/"/>
    
  </entry>
  
  <entry>
    <title>无语。。。</title>
    <link href="https://blog.gitiu.com/posts/3566/"/>
    <id>https://blog.gitiu.com/posts/3566/</id>
    <published>2020-07-06T10:53:37.000Z</published>
    <updated>2021-03-22T11:00:09.602Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.gitiu.com/wp-content/uploads/2020/07/1594032792-Snipaste_2020-07-06_18-51-57.png"><img src="https://www.gitiu.com/wp-content/uploads/2020/07/1594032792-Snipaste_2020-07-06_18-51-57.png?x-oss-process=image/resize,m_fill,w_267,h_300/format,webp/quality,Q_100#"></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="分享" scheme="https://blog.gitiu.com/categories/%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="cc" scheme="https://blog.gitiu.com/tags/cc/"/>
    
    <category term="ddos" scheme="https://blog.gitiu.com/tags/ddos/"/>
    
  </entry>
  
  <entry>
    <title>宝塔面板搭建YOURLS(yourls)-私人短链接地址服务</title>
    <link href="https://blog.gitiu.com/posts/50773/"/>
    <id>https://blog.gitiu.com/posts/50773/</id>
    <published>2020-04-15T04:21:18.000Z</published>
    <updated>2021-03-22T08:23:17.467Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>其实很早之前我就发现了**<a class="link"   href="https://github.com/YOURLS/YOURLS" >YOURLS<i class="fas fa-external-link-alt"></i></a>**，遗憾的是由于英文的干扰，迫使我很难有行动下去的动力。这阵子有点时间，遂就随手搭建了一下。</p><p>官方文档：<a class="link"   href="https://yourls.org/" >https://yourls.org<i class="fas fa-external-link-alt"></i></a></p><p>项目：</p><h3 id="1-1什么是YOURLS？"><a href="#1-1什么是YOURLS？" class="headerlink" title="1.1什么是YOURLS？"></a>1.1什么是<strong>YOURLS</strong>？</h3><p><strong>YOURLS</strong> stands for <strong>Your Own URL Shortener</strong>. It is a small set of PHP scripts that will allow you to run your own URL shortening service (<em>a la</em> TinyURL or Bitly).</p><p>Running your own URL shortener is fun, geeky and useful: you own your data and don’t depend on third-party services. It’s also a great way to add branding to your short URLs, instead of using the same public URL shortener everyone uses.</p><p>大概意思就是说<strong>YOURLS</strong>，这个基于PHP开发的短链接服务，适用于私有，且不依赖第三方公共短链接生成。你只需要有一定的耐心和一个短域名，就可以感受到短链接生成的乐趣。</p><h3 id="1-2特点"><a href="#1-2特点" class="headerlink" title="1.2特点"></a>1.2特点</h3><ul><li>  免费而且开源</li><li>  使用具有两面性：私有的（仅自己使用）或者生成公共的（每个人都可以创建短链接，适用于Intranet）</li><li>  顺序排列(从1到n)或自定义URL关键字</li><li>  十分方便的类书签模式记录，可轻松缩短和共享链接</li><li>  出色的统计信息：历史点击报告，引荐来源跟踪，访问者地理位置</li><li>  整洁的Ajaxed界面</li><li>  出色的插件架构，可轻松实现新功能</li><li>  支持开发人员API</li><li>  全面的jsonp支持</li><li>  安装十分友好</li><li>  示例文件可创建您自己的公共界面等</li></ul><h2 id="2-安装-这里以Centos7为例"><a href="#2-安装-这里以Centos7为例" class="headerlink" title="2.安装(这里以Centos7为例)"></a>2.安装(这里以Centos7为例)</h2><p>环境说明：</p><ol><li> 至少<strong>PHP 5.6  如果要使用api  还需要有curl拓展</strong>，推荐7.2-7.3</li><li> 至少<strong>MYSQL 5</strong>，推荐5.6</li></ol><h3 id="2-1宝塔面板安装"><a href="#2-1宝塔面板安装" class="headerlink" title="2.1宝塔面板安装"></a>2.1宝塔面板安装</h3><p>Centos安装脚本:</p><p><code>yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</code></p><p>然后登录宝塔面板，默认安装稍微改一下，按照上面的环境来！！！这里不多说。</p><h3 id="2-2新建站点"><a href="#2-2新建站点" class="headerlink" title="2.2新建站点"></a>2.2新建站点</h3><p>主要就是填写你的<strong>域名</strong>，再设置添加一个<strong>mysql数据库</strong></p><p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/Snipaste_2020-04-15_11-05-00.png"></p><h3 id="2-3伪静态"><a href="#2-3伪静态" class="headerlink" title="2.3伪静态"></a>2.3伪静态</h3><p>这一步重写路由，就是Rewrites（我这里是<strong>nginx</strong>）</p><p>添加一下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location &#x2F; &#123;</span><br><span class="line">  try_files $uri $uri&#x2F; &#x2F;yourls-loader.php$is_args$args;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/Snipaste_2020-04-15_11-06-09.png"></p><h4 id="倘若是-apache"><a href="#倘若是-apache" class="headerlink" title="倘若是 apache"></a>倘若是 <strong>apache</strong></h4><p>(1)配置里开启  mod_rewrite 模块</p><p>(2)创建 .htaccess  文件（这里注意分安装路径）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#.htaccess 文件内容，如果是根目录下  http:&#x2F;&#x2F;yoursite&#x2F; </span><br><span class="line"># BEGIN YOURLS</span><br><span class="line">&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line">RewriteEngine On</span><br><span class="line">RewriteBase &#x2F;</span><br><span class="line">RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class="line">RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class="line">RewriteRule ^.*$ &#x2F;yourls-loader.php [L]</span><br><span class="line">&lt;&#x2F;IfModule&gt;</span><br><span class="line"># END YOURLS</span><br><span class="line"></span><br><span class="line">#如果是二级目录下 http:&#x2F;&#x2F;yoursite&#x2F;somedir&#x2F;</span><br><span class="line"># BEGIN YOURLS</span><br><span class="line">&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line">RewriteEngine On</span><br><span class="line">RewriteBase &#x2F;somedir&#x2F;</span><br><span class="line">RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class="line">RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class="line">RewriteRule ^.*$ &#x2F;somedir&#x2F;yourls-loader.php [L]</span><br><span class="line">&lt;&#x2F;IfModule&gt;</span><br><span class="line"># END YOURLS</span><br></pre></td></tr></table></figure><h3 id="2-4安装YOURLS"><a href="#2-4安装YOURLS" class="headerlink" title="2.4安装YOURLS"></a>2.4安装<strong>YOURLS</strong></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd 你创建的根目录地址 如：&#x2F;www&#x2F;wwwroot&#x2F;XXX</span><br><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;YOURLS&#x2F;YOURLS&#x2F;archive&#x2F;1.7.6.tar.gz</span><br><span class="line">tar -xvf YOURLS-1.7.6.tar.gz</span><br></pre></td></tr></table></figure><p>或者直接下载上传，解压。</p><p>下载地址：</p><p><a class="link"   href="https://github.com/YOURLS/YOURLS/releases" >https://github.com/YOURLS/YOURLS/releases<i class="fas fa-external-link-alt"></i></a></p><p><strong>2.4.1将user目录下的config-sample.php 重命名 为 config.php</strong></p><p><strong>2.4.2修改config.php里面的配置参数</strong></p><p>以我这里的注释为例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">define( &#39;YOURLS_DB_USER&#39;, &#39;数据库用户名&#39; );</span><br><span class="line">define( &#39;YOURLS_DB_PASS&#39;, &#39;数据库密码&#39; );</span><br><span class="line">define( &#39;YOURLS_DB_NAME&#39;, &#39;数据库名字&#39; );</span><br><span class="line">define( &#39;YOURLS_DB_HOST&#39;, &#39;localhost&#39; );</span><br><span class="line">define( &#39;YOURLS_DB_PREFIX&#39;, &#39;yourls_&#39; );</span><br><span class="line">&#x2F;&#x2F;上面是数据信息不用多说</span><br><span class="line">define( &#39;YOURLS_SITE&#39;, &#39;http:&#x2F;&#x2F;&#39; ); &#x2F;&#x2F;你自己服务器的域名 用最短的，短地址也是基于这个生成。</span><br><span class="line">define( &#39;YOURLS_HOURS_OFFSET&#39;, &#39;+8&#39;); 　　　&#x2F;&#x2F;时区偏移　</span><br><span class="line">define( &#39;YOURLS_LANG&#39;, &#39;&#39; ); 　　　　　&#x2F;&#x2F;这个语言默认是英文</span><br><span class="line">define( &#39;YOURLS_UNIQUE_URLS&#39;, true );　　　&#x2F;&#x2F;短地址是否唯一　</span><br><span class="line">define( &#39;YOURLS_PRIVATE&#39;, true );         &#x2F;&#x2F;是否私有，如果私有的，则进行api调用生成短地址时需要传递用户名和密码</span><br><span class="line">define( &#39;YOURLS_COOKIEKEY&#39;, &#39;A2C7&amp;H~r80pTps&#123;nIfI8VFpTxnfF3c)j@J#&#123;nDUh&#39; );&#x2F;&#x2F;加密cookie 去 http:&#x2F;&#x2F;yourls.org&#x2F;cookie 获取</span><br><span class="line">$yourls_user_passwords &#x3D; array(</span><br><span class="line">    &#39;admin&#39; &#x3D;&gt; &#39;123456&#39; &#x2F;* Password encrypted by YOURLS *&#x2F; ,  &#x2F;&#x2F;用户名&#x3D;&gt;密码  可填多个  登录成功后这里的明文密码会被加密，这里默认是没有的，我们为了安全加上一个，如我这里是用户名是admin，密码是123456</span><br><span class="line">    );</span><br><span class="line">define( &#39;YOURLS_DEBUG&#39;, false );　　　　　　&#x2F;&#x2F;是否开启调试　　</span><br><span class="line">define( &#39;YOURLS_URL_CONVERT&#39;, 62 );　　　　&#x2F;&#x2F;使用36进制 还是62进制  这个最好一开始设好不要修改，避免地址冲突，建议62进制</span><br><span class="line">$yourls_reserved_URL &#x3D; array(</span><br><span class="line">    &#39;porn&#39;, &#39;faggot&#39;, &#39;sex&#39;, &#39;nigger&#39;, &#39;fuck&#39;, &#39;cunt&#39;, &#39;dick&#39;,  &#x2F;&#x2F;排除一下短地址，这些地址是不会生成的</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><strong>2.4.3添加中文语言包</strong></p><p>遗憾的是语言包停止更新了，现适用于此时的最新版本(1.7.3)。不过在1.7.6版本也能用。不知道作者后续会不会进行更新，可以关注一下。</p><p><strong>解压完毕上传到 user/languages 里面</strong>。</p><h2 id="3-访问"><a href="#3-访问" class="headerlink" title="3.访问"></a><strong>3.访问</strong></h2><p><strong>浏览器 输入 <strong>http://域名/admin</strong>，然后选择安装即可安装成功</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/Snipaste_2020-04-15_10-04-18.png"></p><p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/Snipaste_2020-04-15_11-42-23.png"></p><p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/Snipaste_2020-04-15_11-48-50.png"></p><h2 id="4-最后"><a href="#4-最后" class="headerlink" title="4.最后"></a>4.最后</h2><p>你可能遇到一些问题:</p><p>4.1如果安装报错，或者不跳转，那有可能是你的php 或者 mysql 版本过低</p><p>4.2.短链接后面从1开始，很不爽，可以推荐用时间戳来生成</p><p>只需要修改 includes/functions.php  272行左右</p><p>将 $id = yourls_get_next_decimal(); 改为 $id = time();</p><p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/Snipaste_2020-04-15_10-21-50.png"></p><p>4.3.一些YOURLS的拓展</p><p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/Snipaste_2020-04-15_11-50-58.png"></p><p>你可以使用官方自带的插件库：</p><p><a class="link"   href="https://github.com/YOURLS/awesome-yourls#plugins" >https://github.com/YOURLS/awesome-yourls#plugins<i class="fas fa-external-link-alt"></i></a></p><p>多的吓人！！！从0-9到A-Z排列.</p><p>4.4.api接口生成   </p><p>可以参考</p><p><a class="link"   href="https://yourls.org/#API" >https://yourls.org/#API<i class="fas fa-external-link-alt"></i></a></p><p>请求地址：http://域名//yourls-api.php</p><p>参数：username(用户名)、password（密码）、format（格式 json）、url（长地址）、action（功能，shorturl）</p><p>返回（示例）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;url&quot;: &#123;</span><br><span class="line">    &quot;keyword&quot;: &quot;ozh&quot;,</span><br><span class="line">    &quot;url&quot;: &quot;http:\&#x2F;\&#x2F;ozh.org&quot;,</span><br><span class="line">    &quot;title&quot;: &quot;Ozh RICHARD \u00ab ozh.org&quot;,</span><br><span class="line">    &quot;date&quot;: &quot;2014-10-24 16:01:39&quot;,</span><br><span class="line">    &quot;ip&quot;: &quot;127.0.0.1&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;status&quot;: &quot;success&quot;,</span><br><span class="line">  &quot;message&quot;: &quot;http:\&#x2F;\&#x2F;ozh.org added to database&quot;,</span><br><span class="line">  &quot;title&quot;: &quot;Ozh RICHARD \u00ab ozh.org&quot;,</span><br><span class="line">  &quot;shorturl&quot;: &quot;http:\&#x2F;\&#x2F;sho.rt\&#x2F;1f&quot;,</span><br><span class="line">  &quot;statusCode&quot;: 200</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的  shorturl 就是生成的短链接，也可以在后台直接生成指定的短链接。</p><p>4.5.查看统计某个链接的点击情况</p><p><strong>可以在生成的每个短链接后面加上一个 +</strong></p><p>如：http://你的域名/j7fk2+ 进行访问</p><p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/Snipaste_2020-04-15_12-06-09.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="文章" scheme="https://blog.gitiu.com/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="YOURLS" scheme="https://blog.gitiu.com/tags/YOURLS/"/>
    
    <category term="短链接服务" scheme="https://blog.gitiu.com/tags/%E7%9F%AD%E9%93%BE%E6%8E%A5%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>安装ffsend命令行客户端通过FireFox Send分享文件-[超详细]</title>
    <link href="https://blog.gitiu.com/posts/125/"/>
    <id>https://blog.gitiu.com/posts/125/</id>
    <published>2020-04-01T13:34:00.000Z</published>
    <updated>2021-03-22T08:23:17.531Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>Linux 用户偏爱使用 <code>scp</code> 或 <code>rsync</code> 来进行文件或目录的复制拷贝。不过在 Linux 上正出现了许多新的可选方式，因为 Linux 是开源的，所以任何人都可以为 Linux 开发一个安全软件。 于此同时有  <a class="link"   href="https://linux.cn/article-9177-1.html" >OnionShare<i class="fas fa-external-link-alt"></i></a>、<a class="link"   href="https://www.2daygeek.com/wormhole-securely-share-files-from-linux-command-line/" >Magic Wormhole<i class="fas fa-external-link-alt"></i></a>、<a class="link"   href="https://www.2daygeek.com/transfer-sh-easy-fast-way-share-files-over-internet-from-command-line/" >Transfer.sh<i class="fas fa-external-link-alt"></i></a> 和 <a class="link"   href="https://linux.cn/article-10516-1.html" >Dcp – Dat Copy<i class="fas fa-external-link-alt"></i></a>这些可用的工具。</p><p>但是今天我们来认识<a class="link"   href="https://www.gitiu.com/article/ffsend-to-firefox-send" >ffsend<i class="fas fa-external-link-alt"></i></a> ，它是 <a class="link"   href="https://send.firefox.com/" >Firefox Send<i class="fas fa-external-link-alt"></i></a> 的命令客户端。 允许用户通过命令行来传递和接收文件或目录。 甚至可以允许我们通过一个安全、私密、加密的链接，使用一个简单的命令来轻易安全地分享文件。</p><h2 id="2-了解Firefox-Send"><a href="#2-了解Firefox-Send" class="headerlink" title="2.了解Firefox Send"></a>2.了解Firefox Send</h2><p><img src="https://www.gitiu.com/wp-content/uploads/2020/10/1602954606-dfd26e958931ee3cae9896cd22fb5881.png"></p><p><strong>FireFox Send</strong> 与传统的网盘不太一样，它是一种类似“<strong>阅后即焚</strong>”的简单且私密的临时个人文件共享工具 (网络服务)，用户只需通过任意浏览器 (包括 Chrome、Edge、火狐等) 即可快速上传一个或多个文件与他人分享。 匿名用户可以上传最大 1GB、最长 1 天的临时文件、被下载 1 次后自动删除文件；而注册用户 (同样完全免费) 则最大可以上传 2.5 GB 文件、最长可以保留 7 天的时间、最多允许 100 次下载次数。</p><p>目前已经推出Android端，可在Google Play商店下载体验！！</p><h3 id="2-1-FireFox-Send的特点"><a href="#2-1-FireFox-Send的特点" class="headerlink" title="2.1 FireFox Send的特点"></a>2.1 <strong>FireFox Send</strong>的特点</h3><ul><li>  简单安全的一次性临时文件分享服务</li><li>  跨平台、跨设备</li><li>  完全开源</li><li>  通过源代码「<strong>自己架设一套私人专属的 FireFox Send 网盘</strong>」</li></ul><p>[mdx_github author=”mozilla” project=”send”][/mdx_github]</p><h2 id="3-引出ffsend"><a href="#3-引出ffsend" class="headerlink" title="3.引出ffsend"></a>3.引出ffsend</h2><p>得益于 FireFox Send 完全开源 (基于 Node.js 开发)，甚至还有开发者推出了命令行版本的工具，可以通过命令一键上传并分享文件ffsend ，这对于运维或开发人员，可以非常方便地通过服务器传输文件或者编写脚本整合到自己的工作流中去。</p><p>[mdx_github author=”timvisee” project=”ffsend”][/mdx_github]</p><h3 id="3-1-ffsend-的特点："><a href="#3-1-ffsend-的特点：" class="headerlink" title="3.1 ffsend 的特点："></a>3.1 ffsend 的特点：</h3><ul><li>  全功能且使用友好的命令行工具</li><li>  可以安全地上传和下载文件与目录</li><li>  总是在客户端加密</li><li>  可用额外的密码进行保护、密码生成和可配置下载次数限制</li><li>  内置的文件或目录的打包和解压</li><li>  可以轻松地管理你的历史分享记录</li><li>  能够使用你自己的 Send 主机</li><li>  审查或者删除共享文件</li><li>  精准的错误报告</li><li>  低内存消耗，用于加密或上传下载</li><li>  无需交互，可以集成在脚本中</li></ul><p><img src="https://www.gitiu.com/wp-content/uploads/2020/10/1602954606-51f3bf91f8e39f8bed0626e870a8a4b2.gif"></p><h3 id="3-2安装-ffsend"><a href="#3-2安装-ffsend" class="headerlink" title="3.2安装 ffsend"></a>3.2安装 ffsend</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#下载压缩包</span><br><span class="line">$  wget https:&#x2F;&#x2F;github.com&#x2F;timvisee&#x2F;ffsend&#x2F;releases&#x2F;download&#x2F;v0.2.59&#x2F;ffsend-v0.2.59-linux-x64.tar.gz</span><br><span class="line">PS:注意最新版版本号的修改这里是v0.2.59</span><br><span class="line"></span><br><span class="line">#解压 tar 包</span><br><span class="line">$  tar -xvf ffsend-v0.2.59-linux-x64.tar.gz</span><br><span class="line"></span><br><span class="line">#查看你的 PATH 环境变量</span><br><span class="line">echo $PATH</span><br><span class="line">&#x2F;home&#x2F;daygeek&#x2F;.cargo&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;default&#x2F;bin:&#x2F;usr&#x2F;bin&#x2F;site_perl:&#x2F;usr&#x2F;bin&#x2F;vendor_perl:&#x2F;usr&#x2F;bin&#x2F;core_perl</span><br><span class="line"></span><br><span class="line">#将这个可执行文件放置到 PATH 环境变量中的某个目录中</span><br><span class="line">$  sudo mv ffsend &#x2F;usr&#x2F;local&#x2F;sbin</span><br><span class="line"></span><br><span class="line">#直接运行ffsend</span><br><span class="line">$  ffsend</span><br></pre></td></tr></table></figure><p>这里就可以获取其基本使用信息了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ffsend 0.2.59</span><br><span class="line">Usage: ffsend [FLAGS] ...</span><br><span class="line">Easily and securely share files from the command line.</span><br><span class="line">A fully featured Firefox Send client.</span><br><span class="line">Missing subcommand. Here are the most used:</span><br><span class="line"> ffsend upload ...</span><br><span class="line"> ffsend download ...</span><br><span class="line">To show all subcommands, features and other help:</span><br><span class="line"> ffsend help [SUBCOMMAND]</span><br></pre></td></tr></table></figure><p>当然也有Windows,MacOS,nupkg版</p><p><img src="https://www.gitiu.com/wp-content/uploads/2020/10/1602954606-297c2fcf263ebda698eab31f51b0a670.png"></p><p>下载发布地址： <a class="link"   href="https://github.com/timvisee/ffsend/releases" >https://github.com/timvisee/ffsend/releases<i class="fas fa-external-link-alt"></i></a></p><h3 id="3-3-Debian-Ubuntu系统"><a href="#3-3-Debian-Ubuntu系统" class="headerlink" title="3.3 Debian/Ubuntu系统"></a>3.3 Debian/Ubuntu系统</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$  wget https:&#x2F;&#x2F;github.com&#x2F;timvisee&#x2F;ffsend&#x2F;releases&#x2F;download&#x2F;v0.2.59&#x2F;ffsend_0.2.59_amd64.deb</span><br><span class="line"></span><br><span class="line">$  sudo dpkg -i ffsend_0.2.59_amd64.deb</span><br></pre></td></tr></table></figure><p>甚至是 <strong>Arch Linux系统</strong>的用户， 可以简单地借助 <a class="link"   href="https://www.2daygeek.com/category/aur-helper/" >AUR 助手<i class="fas fa-external-link-alt"></i></a>来安装它，因为这个包已经在 AUR 软件仓库中了 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S ffsend</span><br></pre></td></tr></table></figure><h2 id="4-使用-ffsend"><a href="#4-使用-ffsend" class="headerlink" title="4.使用 ffsend"></a>4.使用 ffsend</h2><p><strong>4.1 上传语法： ffsend upload [/Path/to/the/file/name]</strong></p><p>比如我上传一个名为BasicAuth.png的图片</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#输入上传文件的名称</span><br><span class="line">$  ffsend upload BasicAuth.png --copy</span><br><span class="line">#下面会提示上传完成，出现唯一的 URL</span><br><span class="line">Upload complete</span><br><span class="line">Share link: https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;11e17b4ea7c45d48&#x2F;#jcN-NJh5m6O2oVkJiHqPLA</span><br></pre></td></tr></table></figure><p><strong>4.2 下载语法： ffsend download [Generated URL]</strong></p><p>例如我要下载一个文件，只需要把文件URL改一改就好了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#输入命令加入下载文件的URL</span><br><span class="line">$  ffsend download https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;11e17b4ea7c45d48&#x2F;#jcN-NJh5m6O2oVkJiHqPLA</span><br><span class="line">#提示下载成功</span><br><span class="line">Download complete</span><br></pre></td></tr></table></figure><p><strong>4.3 那么同样的对于某个目录文件的直接上传语法： ffsend upload [/Path/to/the/Directory] –copy</strong></p><p>在下面的例子中，我们将上传一个名为 <code>test</code> 的目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$  ffsend upload &#x2F;home&#x2F;daygeek&#x2F;test --copy</span><br><span class="line">#出现提示</span><br><span class="line">You&#39;ve selected a directory, only a single file may be uploaded.</span><br><span class="line">Archive the directory into a single file? [Y&#x2F;n]: y   #这里输入 y 回车</span><br><span class="line">Archiving...</span><br><span class="line">Upload complete</span><br><span class="line">Share link: https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;90aa5cfe67&#x2F;#hrwu6oXZRG2DNh8vOc3BGg</span><br></pre></td></tr></table></figure><p>同样是下载这个目录文件,通过链接URL：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$  ffsend download https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;90aa5cfe67&#x2F;#hrwu6oXZRG2DNh8vOc3BGg</span><br><span class="line"></span><br><span class="line">You&#39;re downloading an archive, extract it into the selected directory? [Y&#x2F;n]: y</span><br><span class="line">Extracting...</span><br><span class="line">Download complete</span><br></pre></td></tr></table></figure><h2 id="5-为文件添加密码"><a href="#5-为文件添加密码" class="headerlink" title="5.为文件添加密码"></a>5.<strong>为文件添加密码</strong></h2><p>上面已经通过安全、私密和加密过的链接来发送了文件，这里是继续操作的命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#输入命令：</span><br><span class="line">$  ffsend upload file-copy-rsync.sh --copy --password</span><br><span class="line">Password:</span><br><span class="line">Upload complete</span><br><span class="line">Share link: https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;0742d24515&#x2F;#P7gcNiwZJ87vF8cumU71zA</span><br></pre></td></tr></table></figure><p>下载该文件时，它将要求你输入密码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$  ffsend download https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;0742d24515&#x2F;#P7gcNiwZJ87vF8cumU71zA</span><br><span class="line"></span><br><span class="line">This file is protected with a password.</span><br><span class="line">Password:</span><br><span class="line">Download complete</span><br></pre></td></tr></table></figure><h2 id="6-限制文件被下载的次数"><a href="#6-限制文件被下载的次数" class="headerlink" title="6. 限制文件被下载的次数"></a>6. 限制文件被下载的次数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ffsend upload file-copy-scp.sh --copy --downloads 10</span><br><span class="line">Upload complete</span><br><span class="line">Share link: https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;23cb923c4e&#x2F;#LVg6K0CIb7Y9KfJRNZDQGw</span><br></pre></td></tr></table></figure><p>下载同上一样</p><h2 id="7-查看下载链接的各种信息"><a href="#7-查看下载链接的各种信息" class="headerlink" title="7.查看下载链接的各种信息"></a>7.查看下载链接的各种信息</h2><p><strong>语法： ffsend info [Generated URL]</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#输入命令</span><br><span class="line">$ ffsend info https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;23cb923c4e&#x2F;#LVg6K0CIb7Y9KfJRNZDQGw</span><br><span class="line">ID: 23cb923c4e</span><br><span class="line">Name: file-copy-scp.sh</span><br><span class="line">Size: 115 B</span><br><span class="line">MIME: application&#x2F;x-sh</span><br><span class="line">Downloads: 3 of 10</span><br><span class="line">Expiry: 23h58m (86280s)</span><br></pre></td></tr></table></figure><h2 id="8-查看传输历史"><a href="#8-查看传输历史" class="headerlink" title="8.查看传输历史"></a>8.查看传输历史</h2><p><strong>语法： ffsend history</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#输入命令：</span><br><span class="line">$  ffsend history</span><br><span class="line"># LINK EXPIRY</span><br><span class="line">1 https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;23cb923c4e&#x2F;#LVg6K0CIb7Y9KfJRNZDQGw 23h57m</span><br><span class="line">2 https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;0742d24515&#x2F;#P7gcNiwZJ87vF8cumU71zA 23h55m</span><br><span class="line">3 https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;90aa5cfe67&#x2F;#hrwu6oXZRG2DNh8vOc3BGg 23h52m</span><br><span class="line">4 https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;a4062553f4&#x2F;#yy2_VyPaUMG5HwXZzYRmpQ 23h46m</span><br><span class="line">5 https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;74ff30e43e&#x2F;#NYfDOUp_Ai-RKg5g0fCZXw 23h44m</span><br><span class="line">6 https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;69afaab1f9&#x2F;#5z51_94jtxcUCJNNvf6RcA 23h43m</span><br></pre></td></tr></table></figure><h2 id="9-删除分享链接"><a href="#9-删除分享链接" class="headerlink" title="9.删除分享链接"></a>9.删除分享链接</h2><p><strong>语法：ffsend delete [Generated URL]</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ffsend delete https:&#x2F;&#x2F;send.firefox.com&#x2F;download&#x2F;69afaab1f9&#x2F;#5z51_94jtxcUCJNNvf6RcA</span><br><span class="line">File deleted</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="文章" scheme="https://blog.gitiu.com/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="ffsend" scheme="https://blog.gitiu.com/tags/ffsend/"/>
    
    <category term="Firefox Send" scheme="https://blog.gitiu.com/tags/Firefox-Send/"/>
    
  </entry>
  
  <entry>
    <title>超详细的NetData-轻量的性能监控工具安装教程</title>
    <link href="https://blog.gitiu.com/posts/19026/"/>
    <id>https://blog.gitiu.com/posts/19026/</id>
    <published>2020-04-01T06:47:14.000Z</published>
    <updated>2021-03-22T08:23:17.595Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>对于服务器监控我相信对于一些人来说是感兴趣的，相比于繁琐的 <a class="link"   href="https://2heng.xin/2019/09/10/docker-zabbix-grafana/" >Grafana + Zabbix<i class="fas fa-external-link-alt"></i></a>（白猫的docker安装教程）对于服务器资源的占用，较为轻便监控之全面的<a class="link"   href="https://www.netdata.cloud/" >NetData<i class="fas fa-external-link-alt"></i></a>，它的优势就显现出来了。还有之前部署过 <a class="link"   href="https://www.gitiu.com/share/uptime-status/" >uptime-status一款漂亮的网站监控面板<i class="fas fa-external-link-alt"></i></a> 就开始显得单一，不过后者对多站点多服务器更加友好。</p><p><a class="link"   href="https://www.gitiu.com/share/uptime-status/" >https://www.gitiu.com/share/uptime-status/<i class="fas fa-external-link-alt"></i></a></p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><strong>NetData</strong> 是一个用于系统和应用的分布式实时性能和健康监控工具。它提供了对系统中实时发生的所有事情的全面检测。你可以在高度互动的 Web 仪表板中查看结果。使用 Netdata，你可以清楚地了解现在发生的事情，以及之前系统和应用中发生的事情。你无需成为专家即可在 Linux 系统中部署此工具。NetData 开箱即用，零配置、零依赖。只需安装它然后坐等，之后 NetData 将负责其余部分。</p><p>它有自己的内置 Web 服务器，以图形形式显示结果。NetData 非常快速高效，安装后可立即开始分析系统性能。它是用 C 编程语言编写的，所以它非常轻量。它占用的单核 CPU 使用率不到 3％，内存占用 10-15MB。我们可以轻松地在任何现有网页上嵌入图表，并且它还有一个插件 API，以便你可以监控任何应用。</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/NETDATA.gif"></p><ul><li>  interactive bootstrap dashboards, 酷炫</li><li>  所有请求每个metreic都在0.5ms内响应，即便是一台烂机器</li><li>  非常高效，每秒采集数千个指标，但仅占cpu单核1%，少量MB的内存以及完全没有磁盘IO</li><li>  提供复杂的、各种类型的告警，支持动态阈值、告警模板、多种通知方式等</li><li>  可扩展，使用自带的插件API（比如bash, python, perl, node.js, java, go, ruby等）来收集任何可以衡量的数据</li><li>  零配置：安装后netdata会自动的监测一切</li><li>  零依赖：netdata有自己的web server， 提供静态web文件和web API 零维护：只管跑上！</li><li>  支撑多种时间序列后端服务，比如graphite, opentsdb, prometheus, json document DBs</li></ul><h3 id="NetData在Linux中的监控列表"><a href="#NetData在Linux中的监控列表" class="headerlink" title="NetData在Linux中的监控列表"></a>NetData在Linux中的监控列表</h3><ul><li>  CPU 使用率</li><li>  RAM 使用率</li><li>  交换内存使用率</li><li>  内核内存使用率</li><li>  硬盘及其使用率</li><li>  网络接口</li><li>  IPtables</li><li>  Netfilter</li><li>  DDoS 保护</li><li>  进程</li><li>  应用</li><li>  NFS 服务器</li><li>  Web 服务器 （Apache 和 Nginx）</li><li>  数据库服务器 （MySQL），</li><li>  DHCP 服务器</li><li>  DNS 服务器</li><li>  电子邮件服务</li><li>  代理服务器</li><li>  Tomcat</li><li>  PHP</li><li>  SNP 设备</li></ul><h2 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h2><p>当然有最简单的安装 Netdata 的方法 ，那就是一键脚本适用于任何LInux发行版系统中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -Ss https:&#x2F;&#x2F;my-netdata.io&#x2F;kickstart-static64.sh)</span><br></pre></td></tr></table></figure><p><img src="https://image.gitiu.com/2020/04/01/9aba51a646853.png"></p><p>输入脚本命令</p><p><img src="https://image.gitiu.com/2020/04/01/692a02045f3ee.png"></p><p>回车输入 y 确定安装</p><h3 id="通过-Web-浏览器访问-NetData"><a href="#通过-Web-浏览器访问-NetData" class="headerlink" title="通过 Web 浏览器访问 NetData"></a>通过 Web 浏览器访问 NetData</h3><p>打开 Web 浏览器，然后打开 <code>http://127.0.0.1:19999</code> </p><p>或者 <code>http://localhost:19999/</code> </p><p>或者 <code>http://ip-address:19999</code></p><h4 id="若不能访问请开放19999端口"><a href="#若不能访问请开放19999端口" class="headerlink" title="若不能访问请开放19999端口"></a><strong>若不能访问请开放19999端口</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">在 Ubuntu&#x2F;Debian 中： sudo ufw allow 19999</span><br><span class="line"></span><br><span class="line">在 CentOS中： sudo firewall-cmd --permanent --add-port&#x3D;19999&#x2F;tcp</span><br><span class="line">             sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>当然有些用户可能不想在没有研究的情况下将某些东西直接注入到 Bash。如果你不喜欢此方法，可以按照以下步骤在系统上安装它</p><h2 id="系统环境："><a href="#系统环境：" class="headerlink" title="系统环境："></a>系统环境：</h2><p><strong>Centos7</strong></p><h2 id="下载安装netData"><a href="#下载安装netData" class="headerlink" title="下载安装netData"></a>下载安装netData</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 下载项目代码</span><br><span class="line"> git clone https:&#x2F;&#x2F;github.com&#x2F;firehol&#x2F;netdata.git</span><br><span class="line"># 安装变异所需要的包</span><br><span class="line"> yum -y install zlib-devel libuuid-devel libmnl-devel gcc make git autoconf autogen automake pkgconfig</span><br><span class="line"># 运行自带的安装启动脚本</span><br><span class="line"> cd .&#x2F;netdata</span><br><span class="line"> .&#x2F;netdata-installer.sh</span><br></pre></td></tr></table></figure><p>安装启动脚本时，提示netData安装的详细目录，按下Enter键执行。</p><p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/6662092-5ad085a1b6f4c081.png"></p><p>安装启动脚本</p><h2 id="启动和配置"><a href="#启动和配置" class="headerlink" title="启动和配置"></a>启动和配置</h2><p>安装完成后，脚本输出一段信息，包括：KSM、端口、启动命令</p><h3 id="开启-KSM-以节省储存占用"><a href="#开启-KSM-以节省储存占用" class="headerlink" title="开启 KSM 以节省储存占用"></a>开启 KSM 以节省储存占用</h3><p>如果有下列信息，说明你的系统有 KSM，但是未启用，可以按照说明执行两句echo命令，节省 40-60% 的储存空间。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> --- Check KSM (kernel memory deduper) ---</span><br><span class="line"></span><br><span class="line">Memory de-duplication instructions</span><br><span class="line"></span><br><span class="line">You have kernel memory de-duper (called Kernel Same-page Merging,</span><br><span class="line">or KSM) available, but it is not currently enabled.</span><br><span class="line"></span><br><span class="line">To enable it run:</span><br><span class="line"></span><br><span class="line">    echo 1 &gt;&#x2F;sys&#x2F;kernel&#x2F;mm&#x2F;ksm&#x2F;run</span><br><span class="line">    echo 1000 &gt;&#x2F;sys&#x2F;kernel&#x2F;mm&#x2F;ksm&#x2F;sleep_millisecs</span><br><span class="line"></span><br><span class="line">If you enable it, you will save 40-60% of netdata memory.</span><br></pre></td></tr></table></figure><h3 id="web端口配置"><a href="#web端口配置" class="headerlink" title="web端口配置"></a>web端口配置</h3><p>默认的web访问端口为19999。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">netdata by default listens on all IPs on port 19999,</span><br><span class="line">so you can access it with:</span><br><span class="line"></span><br><span class="line">  http:&#x2F;&#x2F;this.machine.ip:19999&#x2F;</span><br></pre></td></tr></table></figure><ol><li> 如果修改端口，需要编辑配置文件<code>/etc/netdata/netdata.conf</code> 中的 <code># default port = 19999</code>。去掉注释符号<code>#</code>，<code>端口尽量改掉默认的19999 !!!</code></li><li> 修改端口后重启生效。</li><li> 如果有防火墙，需开放端口。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/6662092-782456b08e0f4c1f.png"></p><p>修改web端口</p><h3 id="对于-Ubuntu-Debian"><a href="#对于-Ubuntu-Debian" class="headerlink" title="对于 Ubuntu / Debian"></a><strong>对于 Ubuntu / Debian</strong></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">安装所需的依赖项：</span><br><span class="line"> sudo apt-get install zlib1g-dev uuid-dev libuv1-dev liblz4-dev libjudy-dev libssl-dev libmnl-dev gcc make git autoconf autoconf-archive autogen automake pkg-config curl</span><br><span class="line"></span><br><span class="line">Git 克隆 NetData 仓库： git clone https:&#x2F;&#x2F;github.com&#x2F;netdata&#x2F;netdata.git --depth&#x3D;100</span><br><span class="line"></span><br><span class="line">PS:上面的命令将会在当前工作目录中创建一个名为 netdata 的目录</span><br><span class="line"></span><br><span class="line">切换到 netdata 目录： cd netdata&#x2F;</span><br><span class="line"></span><br><span class="line">使用命令安装并启动 NetData： sudo .&#x2F;netdata-installer.sh</span><br></pre></td></tr></table></figure><p>最后会输出：</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/04/1585722669-090939ja4ibrtzpzp4oaqp.png"></p><h2 id="最后的补充"><a href="#最后的补充" class="headerlink" title="最后的补充"></a>最后的补充</h2><h3 id="启动／关闭netData"><a href="#启动／关闭netData" class="headerlink" title="启动／关闭netData"></a>启动／关闭netData</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 停止</span><br><span class="line">systemctl stop netdata</span><br><span class="line"># 启动</span><br><span class="line">systemctl start netdata</span><br><span class="line"># 重启</span><br><span class="line"> systemctl restart netdata</span><br><span class="line"># 开机启动</span><br><span class="line"> systemctl enable netdata</span><br></pre></td></tr></table></figure><h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 卸载</span><br><span class="line">.&#x2F;netdata-uninstaller.sh --force</span><br><span class="line">或者sudo .&#x2F;netdata-uninstaller.sh --force</span><br></pre></td></tr></table></figure><p>可以随时打开 <code>http://localhost:19999/netdata.conf</code> 来下载和/或查看 NetData 默认配置文件。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/04/1585722669-090943m3ltlwzybhycltlu.png"></p><p><em>Netdata 配置文件</em></p><h3 id="更新-NetData"><a href="#更新-NetData" class="headerlink" title="更新 NetData"></a>更新 NetData</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">切换到 netdata 目录：$ cd netdata</span><br><span class="line">拉取最新更新：$ git pull</span><br><span class="line">使用命令重新构建并更新它：$ sudo .&#x2F;netdata-installer.sh</span><br></pre></td></tr></table></figure><p>考虑到安全个人使用的私密性，对于netdata没有帐号密码体系，为保护服务器隐私，我们要使用nginx反向代理配置域名访问，并使用账号密码授权</p><h3 id="使用Nginx配置域名访问，设置账号密码授权"><a href="#使用Nginx配置域名访问，设置账号密码授权" class="headerlink" title="使用Nginx配置域名访问，设置账号密码授权"></a>使用Nginx配置域名访问，设置账号密码授权</h3><p>准备：</p><ul><li>  如果服务器没有Nginx，安装: <code>yum install nginx</code></li><li>  netdata的域名，如: <code>netdata.example.com</code></li></ul><p>对于域名的绑定可以使用caddy或者是<a class="link"   href="http://bt.cn/" >宝塔面板<i class="fas fa-external-link-alt"></i></a>反向代理</p><p>可以参考：<a class="link"   href="https://51.ruyo.net/3461.html" >利用 Caddy 轻松实现反向代理/镜像（支持自签SSL证书）<i class="fas fa-external-link-alt"></i></a></p><h3 id="生成Nginx密码文件"><a href="#生成Nginx密码文件" class="headerlink" title="生成Nginx密码文件"></a>生成Nginx密码文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 密码文件存放位置自定义，路径需记录下来，放在Nginx配置中。</span><br><span class="line">printf &quot;netdata:$(openssl passwd -apr1)&quot; &gt; &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;htpasswd</span><br></pre></td></tr></table></figure><h4 id="配置nginx-conf"><a href="#配置nginx-conf" class="headerlink" title="配置nginx.conf"></a>配置nginx.conf</h4><p>在 <code>...nginx/conf.d</code> 中创建<code>netdata.conf</code>文件，写入如下内容，<code>适当修改端口号、域名、auth_basic_user_file</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">upstream backend &#123;</span><br><span class="line">    # the netdata server，请修改具体端口号</span><br><span class="line">    server 127.0.0.1:19999;</span><br><span class="line">    keepalive 64;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    # nginx listens to this</span><br><span class="line">    listen 80;</span><br><span class="line"></span><br><span class="line">    # the virtual host name of this，请求改具体域名</span><br><span class="line">    server_name netdata.example.com;</span><br><span class="line">   </span><br><span class="line">   # auth password</span><br><span class="line">   auth_basic &quot;netdata Login&quot;;</span><br><span class="line">   #  上一步生成的密码文件路径</span><br><span class="line">   auth_basic_user_file &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;htpasswd;</span><br><span class="line"></span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        proxy_set_header X-Forwarded-Host $host;</span><br><span class="line">        proxy_set_header X-Forwarded-Server $host;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_pass http:&#x2F;&#x2F;backend;</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_pass_request_headers on;</span><br><span class="line">        proxy_set_header Connection &quot;keep-alive&quot;;</span><br><span class="line">        proxy_store off;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="重启nginx"><a href="#重启nginx" class="headerlink" title="重启nginx"></a>重启nginx</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 密码文件存放位置自定义，路径需记录下来，放在Nginx配置中。</span><br><span class="line"> systemctl reload nginx</span><br></pre></td></tr></table></figure><p>重启Nginx后，可以直接通过域名<code>netdata.example.com</code>访问，并且需要输入账号和密码。但是依然可以通过<a href="http://IP:Port的方式访问，接下来禁用IP访问。">http://IP:Port的方式访问，接下来禁用IP访问。</a></p><h3 id="NetData禁用外部IP请求"><a href="#NetData禁用外部IP请求" class="headerlink" title="NetData禁用外部IP请求"></a>NetData禁用外部IP请求</h3><p>打开NetData配置文件：<code>/etc/netdata/netdata.conf</code>，web项的 <code>bind to</code>修改如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[web]</span><br><span class="line">    bind to &#x3D; 127.0.0.1 ::1</span><br></pre></td></tr></table></figure><p>重启NetData： <code>systemctl restart netdata</code></p><h2 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h2><p>[toc]</p><p>在Netdada的Dasherboard中使用Node ,通过Google或者Github账号注册登录可以使用同步服务，假设你再多台VPS上部署，可以绑定网址到云端上，查看十分方便。</p><p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/Snipaste_2020-04-01_14-39-32.png"></p><p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/Snipaste_2020-04-01_14-39-53.png"></p><p><img src="https://cdn.jsdelivr.net/gh/plutotz/cdn/picturebed/Snipaste_2020-04-01_14-44-28.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="日志" scheme="https://blog.gitiu.com/categories/%E6%97%A5%E5%BF%97/"/>
    
    
    <category term="NetData" scheme="https://blog.gitiu.com/tags/NetData/"/>
    
    <category term="性能监控工具" scheme="https://blog.gitiu.com/tags/%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>UCLOUD免费提供GlobalSSH加速境外服务器</title>
    <link href="https://blog.gitiu.com/posts/38855/"/>
    <id>https://blog.gitiu.com/posts/38855/</id>
    <published>2020-03-31T07:38:11.000Z</published>
    <updated>2021-03-22T08:23:17.611Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>GlobalSSH是一款致力于提高跨国远程管理服务器效率的产品，旨在解决因为跨国网络不稳定，通过远程管理服务器时，经常会出现卡顿、连接失败、传输速度较慢等现象。运维研发人员在使用本产品后，可以提高，极大程度的减少卡顿、连接失败的情况发生，提高运维工作的效率。<br>注：本产品同样适用于windows服务器的远程登陆服务</p><p>[toc]</p><h2 id="申请地址"><a href="#申请地址" class="headerlink" title="申请地址"></a>申请地址</h2><p><a class="link"   href="https://console.ucloud.cn/upathx/globalssh" >https://console.ucloud.cn/upathx/globalssh<i class="fas fa-external-link-alt"></i></a></p><p>或者控制面板搜索：PathX  可见入口！</p><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p>1）点击【创建】在弹出框填写相关信息！</p><p>服务器IP：要加速的服务器IP</p><p>服务器靠近区域：根据服务器的位置，选择靠近服务器的区域</p><p>端口：你的SSH端口，默认是22</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1585640293-50993bb3ea8f5888ffaf23156290ed4f.png"></p><p>2）创建成功后，可以看到分配的加速域名。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1585640293-7875a91f9d87cc34cd057625ea05d0ea.png"></p><p>3）然后我们利用Xshell或者其他工具远程链接即可！</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1585640293-fe27057d18943434621ec6d466aa6b0b.png"></p><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>1）点击【创建】在弹出框填写相关信息！</p><p>服务器IP：要加速的服务器IP</p><p>服务器靠近区域：根据服务器的位置，选择靠近服务器的区域</p><p>端口：你的远程桌面端口，默认是3389</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1585640293-22c1b0b7b4f57ab1a500d2e2028672b6.png"></p><p>2）创建成功后，可以看到分配的加速域名。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1585640293-cd5785982eaecdd336b6b56c6392e69b.png"></p><p>3）然后用远程桌面链接即可使用！</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1585640293-22c1b0b7b4f57ab1a500d2e2028672b6.png"></p><h2 id="其他设置"><a href="#其他设置" class="headerlink" title="其他设置"></a>其他设置</h2><p>点击【查看详情】可以看见详细的统计信息！以及出口IP和白名单的设置！</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1585640293-f1d386dc0183126132889f1340037d60.png"></p><h2 id="使用限制"><a href="#使用限制" class="headerlink" title="使用限制"></a>使用限制</h2><p>目前所有用户（不实名也可以）都可以使用该服务器。</p><p>服务目前是免费提供！GlobalSSH现已免费，不收取实例及流量费用。请合理使用免费资源，若影响到其他用户使用，将触发限速策略。</p><p>自产品实例创建之日起，7日内单个实例累计出向流量小于2MB，加速功能停用。</p><p>每个源IP只能加速一个端口。</p><p><strong>加速流量上限官方还未注明。</strong></p><h2 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h2><p>这种访问速度确实提升不少！非常不错！</p><p>有用户担心这种访问会不会有安全问题。嗯，这个不好说！</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a class="link"   href="https://docs.ucloud.cn/pathx/globalssh" >https://docs.ucloud.cn/pathx/globalssh<i class="fas fa-external-link-alt"></i></a></p><p><a class="link"   href="https://www.hostloc.com/thread-666094-3-1.html" >https://www.hostloc.com/thread-666094-3-1.html<i class="fas fa-external-link-alt"></i></a></p><p>来自：</p><p><a class="link"   href="https://51.ruyo.net/15773.html" >https://51.ruyo.net/15773.html<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="转载" scheme="https://blog.gitiu.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
    <category term="GlobalSSH" scheme="https://blog.gitiu.com/tags/GlobalSSH/"/>
    
    <category term="加速境外服务器" scheme="https://blog.gitiu.com/tags/%E5%8A%A0%E9%80%9F%E5%A2%83%E5%A4%96%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>一款由Java开发优秀的尤娜博客-（una-boot）系统</title>
    <link href="https://blog.gitiu.com/posts/35104/"/>
    <id>https://blog.gitiu.com/posts/35104/</id>
    <published>2020-03-23T10:01:42.000Z</published>
    <updated>2021-03-22T08:23:17.567Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>​ 尤娜(una-boot)是一款基于Spring Boot 2.0构建的国产Java博客系统，在此之前，我不断的尝试使用过不同的博客系统，如基于PHP的WordPress、基于Node.js的静态博客系统Hexo、基于Java的CMS系统JEECMS和MCMS等，这些系统都有着不错的表现，能够满足绝大多数的需求场景。那问题来了，我为什么还要重复性的造一个“轮子”呢？一个简单的比喻，前面提到的系统都很强大，有的像“卡车轮子”，有的像“坦克履带”，有的像“跑车轮子”,它们的性能，功能都很强大。然而，作为一个经常写博客文章的我，我现在需要的是小巧的“电摩轮子”。基于这样的一个需求，也参考了上述诸多优秀CMS系统的设计，站在“巨人”的肩膀上，完成了尤娜博客系统的设计和开发。</p><p>​ 尤娜的初衷是提供一个极简的内容创作平台，给热爱技术，热爱写作的小伙伴一个简洁，易用的写作软件。因此，尤娜博客系统在设计之初就只保留了一个博客网站最核心的几个功能模块，它们分别是栏目、文章、主题、友链、标签、归档、存储和评论，共计八个主要核心功能。为了尽可能的降低尤娜的使用门槛，尤娜基于Freemarker模板引擎开发了一套内置的博客标签，通过使用这些标签，对于不能熟练使用Java编程语言的小伙伴，也能快速的构建出一套漂亮的博客主题。尤娜会自动根据各类标签加载对应的博客数据，完成主题的渲染。</p><p>[toc]</p><h2 id="主要特点"><a href="#主要特点" class="headerlink" title="主要特点"></a>主要特点</h2><ul><li>  完全开源：基于AGPL-3.0协议开源</li><li>  快速初始化：通过安装向导，快速完成站点初始化工作</li><li>  标签化建站：尤娜内置了内容标签和内容函数，可以快速的完成模板的制作</li><li>  多主题：支持多个主题自由切换，快速改变站点风格，而不需重新编译后台代码</li><li>  Markdown支持: 内置markdown编辑器</li><li>  文件存储：支持本地存储和CDN存储</li><li>  评论支持：内置了Gitalk评论函数，只需设置相关的Gitalk参数即可拥有评论功能</li><li>  Spring Boot: 基于Spring Boot 2.0版本进行构建</li></ul><h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><p>​ 建议您使用下面推荐的环境与尤娜玩耍，以避免版本不一致所带来的困扰</p><ul><li>  OS: Windows 7/10,Linux</li><li>  IDE: Eclipse，IntelliJ IDEA(推荐)</li><li>  DB：MySQL 5.6+</li><li>  JDK: JDK8+</li><li>  Web Server: Apache Tomcat 8+</li><li>  Maven: Maven 3.0+</li></ul><h2 id="技术框架"><a href="#技术框架" class="headerlink" title="技术框架"></a>技术框架</h2><p>尤娜所使用的开发框架明细：</p><p>框架</p><p>说明</p><p>官网</p><p>Spring Framework</p><p>轻量级(相对而言)的Java开发框架</p><p><a class="link"   href="https://spring.io/projects/spring-framework" >https://spring.io/projects/spring-framework<i class="fas fa-external-link-alt"></i></a></p><p>Spring Boot</p><p>Java Web开发脚手架</p><p><a class="link"   href="https://spring.io/projects/spring-boot" >https://spring.io/projects/spring-boot<i class="fas fa-external-link-alt"></i></a></p><p>Apache Shiro</p><p>安全控制框架</p><p><a class="link"   href="https://shiro.apache.org/" >https://shiro.apache.org<i class="fas fa-external-link-alt"></i></a></p><p>Hibernate</p><p>对象关系映射框架</p><p><a class="link"   href="http://hibernate.org/" >http://hibernate.org<i class="fas fa-external-link-alt"></i></a></p><p>Freemarker</p><p>视图模板引擎</p><p><a class="link"   href="https://freemarker.apache.org/" >https://freemarker.apache.org<i class="fas fa-external-link-alt"></i></a></p><p>Log4J</p><p>日志记录组件</p><p><a class="link"   href="https://logging.apache.org/" >https://logging.apache.org<i class="fas fa-external-link-alt"></i></a></p><p>Druid</p><p>数据库链接池</p><p><a class="link"   href="https://druid.apache.org/" >https://druid.apache.org<i class="fas fa-external-link-alt"></i></a></p><p>FastJSON</p><p>JSON解析库</p><p><a class="link"   href="https://github.com/alibaba/fastjson/wiki" >FastJson<i class="fas fa-external-link-alt"></i></a></p><p>EhCache</p><p>基于Java的进程内缓存框架</p><p><a class="link"   href="http://www.ehcache.org/" >http://www.ehcache.org<i class="fas fa-external-link-alt"></i></a></p><p>pinyin4j</p><p>中文转拼音的Java库</p><p><a class="link"   href="https://sourceforge.net/projects/pinyin4j/" >https://sourceforge.net/projects/pinyin4j/<i class="fas fa-external-link-alt"></i></a></p><p>Maven</p><p>项目构建</p><p><a class="link"   href="https://maven.apache.org/" >https://maven.apache.org<i class="fas fa-external-link-alt"></i></a></p><p>lombok</p><p>代码生成器</p><p><a class="link"   href="https://projectlombok.org/" >https://projectlombok.org<i class="fas fa-external-link-alt"></i></a></p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><p>​ 你可以按照下列的方式来获取并运行尤娜博客系统。</p><h3 id="获取源代码"><a href="#获取源代码" class="headerlink" title="获取源代码"></a>获取源代码</h3><p>​ 你可以使用git工具从<a class="link"   href="https://github.com/" >Github<i class="fas fa-external-link-alt"></i></a>或者<a class="link"   href="https://gitee.com/" >Gitee<i class="fas fa-external-link-alt"></i></a>上获取尤娜博客最新的源代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;ramostear&#x2F;UnaBoot-Pro.git</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;gitee.com&#x2F;ramostear&#x2F;UnaBoot-Pro.git</span><br></pre></td></tr></table></figure><p>除此之外，我还提供了可在Tomcat中运行的war包，你可以访问<a class="link"   href="https://gitee.com/ramostear/UnaBoot-Pro/releases/una-boot-v1.2.0%E6%88%96%E8%80%85https://github.com/ramostear/UnaBoot-Pro/releases/tag/una-boot-v1.2.0" >https://gitee.com/ramostear/UnaBoot-Pro/releases/una-boot-v1.2.0或者https://github.com/ramostear/UnaBoot-Pro/releases/tag/una-boot-v1.2.0<i class="fas fa-external-link-alt"></i></a> 下载最新的war到本地运行。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957703-20200322-1aa364ad59df433fb74e2f6bef1b8e9a.png"></p><p>Gitee下载</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957703-20200322-24335ee7477d43c49523d4f3eb7ed9f4.png"></p><p>Github下载</p><h3 id="编译源代码"><a href="#编译源代码" class="headerlink" title="编译源代码"></a>编译源代码</h3><p>​ 如果你是直接下载项目war包，请跳过此步骤。代码克隆到本地后，你可以使用命令行工具或者IDEA对项目源码进行编译，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn compile -Dmaven.test.skip&#x3D;true</span><br></pre></td></tr></table></figure><p>待项目编译完成后，便可执行打包操作。</p><blockquote><p>注意：</p><p>如果使用IDE自带的Maven工具对项目进行编译时，请检查你的IDE是否安装了Lombok插件，如果缺少Lombok插件，项目编译将会失败。</p></blockquote><h3 id="项目打包"><a href="#项目打包" class="headerlink" title="项目打包"></a>项目打包</h3><p>​ 项目编译完成后，需要对项目进行打包才能运行，如果你使用的是IntelliJ IDEA或者STS等工具，可以直接运行UnaBootProApplication.java文件中的main()方法来启动项目。如果你想将项目放到外部的Tomcat中运行，请参照下面的打包命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package -Dmaven.test.skip&#x3D;true</span><br></pre></td></tr></table></figure><p>打包成功后，你可以在项目的target目录中找到一份名为una-boot-pro-1.2.0.war的文件包，此文件就是运行项目的最终文件。</p><h3 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h3><p>​ 将打包好的或者下载的una-boot-pro-1.2.0.war文件拷贝到Apache Tomcat安装目录下的webapps目录中，然后启动Apache Tomcat。</p><blockquote><p>注意：</p><p>尤娜博客系统需要在Apache Tomcat 8及以上的版本中运行</p></blockquote><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957703-20200322-852f88694c86440a8e2dc1e7436fc8cf.png"></p><p>拷贝war文件到tomcat</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957704-20200322-5981e25ec0dc4bc8abbea64eafd9f508.png"></p><p>启动Apache Tomcat</p><p>Apache Tomcat启动完成后，在浏览器中按照下列的格式输入访问地址并访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;[localhost127.0.0.1]:[8080&#x2F;你自己的tomcat端口号]&#x2F;una-boot-pro-1.2.0&#x2F;unaboot&#x2F;install.html</span><br></pre></td></tr></table></figure><p>提示</p><p>如果是第一次启动并访问尤娜博客系统，请在MySQL数据库管理系统中创建一个空的数据库，该数据库在的名称在初始化博客时需要使用。如本次演示所使用的db_una_boot_pro_demo.</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957704-20200322-1247e27baa134951ae08a95ed7ec09fd.png"></p><h2 id="安装并初始化尤娜"><a href="#安装并初始化尤娜" class="headerlink" title="安装并初始化尤娜"></a>安装并初始化尤娜</h2><h3 id="安装向导"><a href="#安装向导" class="headerlink" title="安装向导"></a>安装向导</h3><p>​ 以我在本地演示为例，浏览器中输入<a class="link"   href="http://localhost:8080/una-boot-pro-1.2.0/unaboot/install.html" >http://localhost:8080/una-boot-pro-1.2.0/unaboot/install.html<i class="fas fa-external-link-alt"></i></a> ,访问成功后，你将看到入下的安装向导界面：</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957704-20200322-f25b4931274140e19b13514ece45fb5f.png"></p><p>请阅读UnaBoot的许可协议，并勾选同意按钮后，点击“下一步”按钮，填写数据库相关的信息。</p><h3 id="数据库信息"><a href="#数据库信息" class="headerlink" title="数据库信息"></a>数据库信息</h3><p>​ 阅读完许可协议并同意后，你可进入数据库配置界面。在此界面中，你需要提供MySQL数据的主机地址（例如localhost或127.0.0.1），数据库的端口号(默认端口号为3306)，存储尤娜博客数据的数据库名称(例如在上一步中创建的db_una_boot_pro_demo数据库)，数据库的访问账号以及访问密码。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957704-20200322-5c79713daac24b21a1d73b7388689c88.png"></p><h3 id="网站信息"><a href="#网站信息" class="headerlink" title="网站信息"></a>网站信息</h3><p>​ 在完成数据库配置后，你可以进入站点信息配置界面，配置站点的名称，站点域名，管理员账号以及管理员登录密码，界面如下：</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957704-20200322-eaed87fa7b9c4bf080153c5576c978d1.png"></p><p>信息确认无误后，点击“确认”按钮，开始初始化博客系统。</p><blockquote><p>提示</p><p>请牢记你的站点管理员账号和密码</p></blockquote><p>系统初始化成功后，你将收到如下的系统提示信息：</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957704-20200322-45218b1260904c67b4c35eea12f901a7.png"></p><p>点击“确定”按钮，系统将跳转到后台登录页面，输入此前配置的管理员账号和密码，登录系统后台。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957704-20200322-0981cbfab29d437ab6e2aee3f1a89045.png"></p><p>自此，整个博客的初始化工作完成。接下来，你可以使用自己的管理员账号和密码登录尤娜博客后台，对博客系统进行管理。</p><blockquote><p>重要提示</p><p><strong>如果你在安装初始化的过程中，没能成功初始化系统，请检查war包中的WEB-INF/lib/目录下有无ibatis-common-2.2.0.jar文件，如果没有，请将WEB-INF/lib-provided/目录下的ibatis-common-2.2.0.jar文件拷贝到WEB-INF/lib/目录中，然后重启Apache Tomcat。</strong></p><p>Ps:如果你下载的是war包，一定要检查这一点，不然会显示系统初始化失败。</p></blockquote><h2 id="尤娜博客后台管理系统一览"><a href="#尤娜博客后台管理系统一览" class="headerlink" title="尤娜博客后台管理系统一览"></a>尤娜博客后台管理系统一览</h2><p>​ 在此小结中，我将对尤娜博客后台管理系统做一个简要的介绍。</p><h3 id="后台主页"><a href="#后台主页" class="headerlink" title="后台主页"></a>后台主页</h3><p>​ 博客后台主页不要包括了常用功能的快捷入口，如文档地址，接口地址，写作入口，栏目管理入口，网站设置入口，主题管理入口，全文检索设置按钮，缓存清理按钮等。界面如下：</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957704-20200322-13bcae9c2fa0497b997b21e784e8f324.png"></p><p>尤娜后台管理系统将功能分为了三个板块，分别时内容管理，配置管理和系统管理，下面将分别介绍。</p><h3 id="内容管理"><a href="#内容管理" class="headerlink" title="内容管理"></a>内容管理</h3><p>​ 内容管理板块包含了用户管理，栏目管理，博客管理，主题管理，友链管理和标签管理，其相应的界面如下：</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957705-20200322-03f24e26374a450784cca6591ed5bbb0.png"></p><p>用户管理</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957705-20200322-6eef67cd91d14a999090aff0c68481e8.png"></p><p>栏目管理</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957705-20200322-896c5d4883094730a7b9c3e76525072d.png"></p><p>博客管理</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957705-20200322-ef2aa4dd4863408ca6b501feafe3eb64.png"></p><p>写作页面</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957705-20200322-22ca739dde154c6080baf6e9e7601c30.png"></p><p>主题管理</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957705-20200322-6c11f6a9c8cd4ddd9493fc0ef4296458.png"></p><p>友情连接管理</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957705-20200322-3691a37c103045b38e29171d2680940a.png"></p><p>标签管理</p><h3 id="配置管理"><a href="#配置管理" class="headerlink" title="配置管理"></a>配置管理</h3><p>​ 配置管理板块主要包括网站常规配置(如站点名称，域名，描述，关键词，Logo，Favicon，邮箱，备案号，主题等)，存储配置（分为本地存储或七牛云存储）,评论配置(关闭评论或开启Gitalk评论插件)。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957705-20200322-eac29f195eed408f8b253c0a75a93a96.png"></p><p>网站常规配置</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957706-20200322-84a8d6faa5054557baed2b07f0076720.png"></p><p>文件存储配置</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957706-20200322-827dcc72c87348a0981722ddeb3fca26.png"></p><p>Gitalk评论插件配置</p><h3 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h3><p>​ 系统管理主要时针对尤娜博客的系统级别的管理，包括定时任务管理，API管理，系统实时日志管理和Druid监控。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957706-20200322-4be630b75a5444358a96b76665c0f484.png"></p><p>自定义定时任务管理</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957706-20200322-3190e791cc6f4accb22632859b15f5a0.png"></p><p>基于Swagger的API管理</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957706-20200322-ceb8af71b60d4e27ad49ef69c55c5e88.png"></p><p>系统实时日志</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584957706-20200322-88cf5448a1b04a8087bacae1551db01b.png"></p><p>数据源监控</p><p>来自:<a class="link"   href="https://www.ramostear.com/blog/2020/03/22/m763440m.html" >https://www.ramostear.com/blog/2020/03/22/m763440m.html<i class="fas fa-external-link-alt"></i></a> 在此感谢作者无私的开源</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="测试" scheme="https://blog.gitiu.com/categories/%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="una-boot" scheme="https://blog.gitiu.com/tags/una-boot/"/>
    
    <category term="尤娜博客系统" scheme="https://blog.gitiu.com/tags/%E5%B0%A4%E5%A8%9C%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>最新CloudreveV3以及Go语言安装教程</title>
    <link href="https://blog.gitiu.com/posts/51310/"/>
    <id>https://blog.gitiu.com/posts/51310/</id>
    <published>2020-03-19T15:34:32.000Z</published>
    <updated>2021-03-22T08:57:39.193Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p><a class="link"   href="https://cloudreve.org/" >Cloudreve<i class="fas fa-external-link-alt"></i></a> 是个公有网盘程序，你可以用它快速搭建起自己的网盘服务，公有云/私有云都可。作者用了六个月的时间，把 Cloudreve 用 Go 语言重构了一遍，除了修复 V2 版本被诟病很多的 Bug 外，还增加了很多令人兴奋的新特性：</p></blockquote><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/Snipaste_2020-03-19_23-08-13.png?x-oss-process=image/resize,m_fill,w_640,h_297#"></p><ul><li>  支持本机、从机、七牛、阿里云 OSS、腾讯云 COS、又拍云、OneDrive (包括世纪互联版) 作为存储端</li><li>  上传/下载 支持客户端直传，支持下载限速</li><li>  可对接 Aria2 离线下载（支持所有存储策略，下载完成后自动中转）</li><li>  在线 压缩/解压缩、多文件打包下载（支持所有存储策略）</li><li>  覆盖全部存储策略的 WebDAV 协议支持</li><li>  拖拽上传、目录上传、流式上传处理</li><li>  文件拖拽管理</li><li>  多用户、用户组</li><li>  创建文件、目录的分享链接，可设定自动过期</li><li>  视频、图像、音频、文本、Office 文档在线预览</li><li>  自定义配色、黑暗模式、PWA 应用、全站单页应用</li><li>  All-In-One 打包，开箱即用</li></ul><p>这篇文章就来尝鲜这个最新go版本的Cloudreve，老规矩还是用宝塔面板来部署。</p><p><strong>具体的安装和部署</strong></p><hr><h2 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h2><ul><li>  官网：<a class="link"   href="https://cloudreve.org/" >https://cloudreve.org/<i class="fas fa-external-link-alt"></i></a></li><li>  下载：<a class="link"   href="https://github.com/cloudreve/Cloudreve/releases" >https://github.com/cloudreve/Cloudreve/releases<i class="fas fa-external-link-alt"></i></a></li><li>  安装文档：<a class="link"   href="https://docs.cloudreve.org/getting-started/install" >https://docs.cloudreve.org/getting-started/install<i class="fas fa-external-link-alt"></i></a></li><li>  演示：<a class="link"   href="https://demo.cloudreve.org/" >https://demo.cloudreve.org<i class="fas fa-external-link-alt"></i></a></li></ul><h2 id="2、准备"><a href="#2、准备" class="headerlink" title="2、准备"></a>2、准备</h2><p>安装之前你需要准备好环境：</p><ol><li> 宝塔面板安装好</li><li> nginx安装好</li><li> mysql安装好</li><li> 域名准备一个</li><li> 新建网站</li></ol><h2 id="3、安装"><a href="#3、安装" class="headerlink" title="3、安装"></a>3、安装</h2><h3 id="go语言环境安装-："><a href="#go语言环境安装-：" class="headerlink" title="go语言环境安装 ："></a>go语言环境安装 ：</h3><p>安装环境：CentOS Linux 7.6、宝塔面板6.9.3、golang：go1.12.5.linux-amd64.tar.gz</p><p>这篇文章就来水一下如何在宝塔面板Linux环境下安装Go语言环境和程序的如何运行。</p><h4 id="一：简介"><a href="#一：简介" class="headerlink" title="一：简介"></a>一：简介</h4><p>下载之前先去官网溜达下，点击【download go】就可进入下载页面：</p><p><a href="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632073-golang-1-min.png"><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632073-golang-1-min.png" alt="宝塔面板Linux环境-安装Golang:Go语言环境安装以及程序如何运行"></a></p><p>官网：<a class="link"   href="https://golang.google.cn/" >https://golang.google.cn/<i class="fas fa-external-link-alt"></i></a></p><p>下载：<a class="link"   href="https://dl.google.com/go/go1.12.5.linux-amd64.tar.gz" >https://dl.google.com/go/go1.12.5.linux-amd64.tar.gz<i class="fas fa-external-link-alt"></i></a></p><p><a href="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632074-golang-2-min.png"><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632074-golang-2-min.png" alt="宝塔面板Linux环境-安装Golang:Go语言环境安装以及程序如何运行"></a></p><p>根据自己的系统环境下载相应的版本，这里选择的是go1.12.5.linux-amd64.tar.gz。</p><h4 id="二：下载安装"><a href="#二：下载安装" class="headerlink" title="二：下载安装"></a>二：下载安装</h4><p>宝塔面板可以直接在面板里面下载安装，这里为了方便，直接就在命令环境下面下载安装配置了。</p><p><em><strong>2.1下载</strong></em></p><p>SSH工具连接服务器开始操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;www&#x2F;server &amp;&amp; wget -O golang.tar.gz https:&#x2F;&#x2F;dl.google.com&#x2F;go&#x2F;go1.12.5.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><p>这些可以直接在面板环境里操作，也很方便。</p><p><a href="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632074-golang-3-min.png"><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632074-golang-3-min.png" alt="宝塔面板Linux环境-安装Golang:Go语言环境安装以及程序如何运行"></a></p><p><em><strong>2.2解压</strong></em></p><p>下载好之后解压：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ar -xzvf golang.tar.gz</span><br></pre></td></tr></table></figure><p><em><strong>2.3添加环境变量</strong></em></p><p>添加环境变量，使用vim 打开/etc/profile 文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><p>在profile 最底部添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export GOROOT&#x3D;&#x2F;www&#x2F;server&#x2F;goexport GOBIN&#x3D;$GOROOT&#x2F;binexport GOPKG&#x3D;$GOROOT&#x2F;pkg&#x2F;tool&#x2F;linux_amd64export GOARCH&#x3D;amd64export GOOS&#x3D;linuxexport GOPATH&#x3D;&#x2F;www&#x2F;wwwroot&#x2F;Golangexport PATH&#x3D;$PATH:$GOBIN:$GOPKG:$GOPATH&#x2F;bin</span><br></pre></td></tr></table></figure><p>丢一张图：</p><p><a href="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632075-golang-4-min.png"><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632075-golang-4-min.png" alt="宝塔面板Linux环境-安装Golang:Go语言环境安装以及程序如何运行"></a></p><p>添加好之后，保存退出，然后执行如下命令使其生效：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><p><em><strong>2.4测试是否生效</strong></em></p><p>使用如下命令来测试Go语言环境是否安装成功。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go version</span><br></pre></td></tr></table></figure><p>丢一张图：</p><p><a href="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632076-golang-5-min.png"><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632076-golang-5-min.png" alt="宝塔面板Linux环境-安装Golang:Go语言环境安装以及程序如何运行"></a></p><p>图上所示，我们已经安装成功了。</p><h4 id="三：创建GOROOT目录"><a href="#三：创建GOROOT目录" class="headerlink" title="三：创建GOROOT目录"></a>三：创建GOROOT目录</h4><p>使用如下命令来创建，不过我们可以用面板环境来可视化操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;www&#x2F;wwwroot&#x2F;Golang</span><br></pre></td></tr></table></figure><p>丢一张图看看：</p><p><a href="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632076-golang-6-min.png"><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632076-golang-6-min.png" alt="宝塔面板Linux环境-安装Golang:Go语言环境安装以及程序如何运行"></a></p><p>以上就完全安装好go了，因为是宝塔面板的环境以上所以操作都可直接在面板里操作。</p><h4 id="四：go-run"><a href="#四：go-run" class="headerlink" title="四：go run"></a>四：go run</h4><p>我们可以测试一段代码来验证go语言的运行。我们到Golang里面新建一个文件命名为test.go</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch test.go</span><br></pre></td></tr></table></figure><p>之后用vi简单编辑下，也可以直接到宝塔面板里新建编辑：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi test.go</span><br></pre></td></tr></table></figure><p>复制一段代码进去：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">package main import &quot;fmt&quot; func main() &#123;   &#x2F;* 这是我的第一个简单的程序 *&#x2F;   fmt.Println(&quot;Hello, 大鸟博客!&quot;)&#125;</span><br></pre></td></tr></table></figure><p>丢一张图看看：</p><p><a href="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632077-golang-7-min.png"><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632077-golang-7-min.png" alt="宝塔面板Linux环境-安装Golang:Go语言环境安装以及程序如何运行"></a></p><p>代码保存好之后，我们执行 Go 程序，如何执行呢，打开命令行，并进入程序文件保存的目录中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go run test.go</span><br></pre></td></tr></table></figure><p>我们看图：</p><p><a href="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632078-golang-8-min.png"><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632078-golang-8-min.png" alt="宝塔面板Linux环境-安装Golang:Go语言环境安装以及程序如何运行"></a></p><p>成功执行了这一段代码，输出了“hello，大鸟博客！”</p><h3 id="第二种快速安装方法："><a href="#第二种快速安装方法：" class="headerlink" title="第二种快速安装方法："></a>第二种快速安装方法：</h3><p><strong>环境：centos7</strong></p><p>1.下载安装包，选择如下版本<br>Linux 2.6.23 or later, Intel 64-bit processor</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;dl.google.com&#x2F;go&#x2F;go1.12.5.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><p>2.校验<br>官网给出的SHA256 Checksum是 aea86e3c73495f205929cfebba0d63f1382c8ac59be081b6351681415f4063cf</p><p>自己校验看看是否正确</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sha256sum go1.12.5.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><p>3.解压安装包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar -C &#x2F;usr&#x2F;local -xzf  go1.12.5.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><p>4.添加环境变量</p><p>编辑<code>~/.bash_profile</code>文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~&#x2F;.bash_profile</span><br></pre></td></tr></table></figure><p>添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;go&#x2F;bin</span><br></pre></td></tr></table></figure><p>加载新的环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~&#x2F;.bash_profile</span><br></pre></td></tr></table></figure><p>5.测试安装结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~&#x2F;go&#x2F;src&#x2F;hello</span><br><span class="line"></span><br><span class="line">#编辑文件hello.go</span><br><span class="line">vim ~&#x2F;go&#x2F;src&#x2F;hello&#x2F;hello.go</span><br></pre></td></tr></table></figure><p>添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">   fmt.Printf(&quot;Hello, World\n&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构建<code>hello.go</code>文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~&#x2F;go&#x2F;src&#x2F;hello</span><br><span class="line">go build</span><br></pre></td></tr></table></figure><p>运行测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;hello</span><br></pre></td></tr></table></figure><p>如果有输出<code>Hello, World</code>表示Go安装成功。</p><h4 id="五：总结"><a href="#五：总结" class="headerlink" title="五：总结"></a>五：总结</h4><p>整个环境的安装和简单的测试运行代码就说完了，希望对想学习Go语言的同学能有一点帮助。</p><p>Go 是一个开源的编程语言，它能让构造简单、可靠且高效的软件变得容易。</p><p>Go是从2007年末由Robert Griesemer, Rob Pike, Ken Thompson主持开发，后来还加入了Ian Lance Taylor, Russ Cox等人，并最终于2009年11月开源，在2012年早些时候发布了Go 1稳定版本。现在Go的开发已经是完全开放的，并且拥有一个活跃的社区。</p><p>Go 语言特色</p><ul><li>  简洁、快速、安全</li><li>  并行、有趣、开源</li><li>  内存管理、数组安全、编译迅速</li></ul><p>Go 语言用途</p><ol><li> Go 语言被设计成一门应用于搭载 Web 服务器，存储集群或类似用途的巨型中央服务器的系统编程语言。</li><li> 对于高性能分布式系统领域而言，Go 语言无疑比大多数其它语言有着更高的开发效率。它提供了海量并行的支持，这对于游戏服务端的开发而言是再好不过了。</li></ol><h3 id="安装Cloudreve，安装命令如下："><a href="#安装Cloudreve，安装命令如下：" class="headerlink" title="安装Cloudreve，安装命令如下："></a>安装Cloudreve，安装命令如下：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;opt</span><br><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;cloudreve&#x2F;Cloudreve&#x2F;releases&#x2F;download&#x2F;3.0.0-rc1&#x2F;cloudreve_3.0.0-rc1_linux_amd64.tar.gz</span><br><span class="line">tar -zxvf cloudreve_3.0.0-rc1_linux_amd64.tar.gz   #解压获取到的主程序</span><br><span class="line">chmod +x .&#x2F;cloudreve  #赋予执行权限</span><br><span class="line">.&#x2F;cloudreve   #启动 Cloudreve</span><br></pre></td></tr></table></figure><p>分别复制命令回车执行，安装成功截图如下：</p><p><a href="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632079-Cloudreve-V3-go-1.png"><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632079-Cloudreve-V3-go-1.png" alt="宝塔面板安装Cloudreve V3(go版本) - 支持六大云存储存/OneDrive世纪互联/aria2等"></a></p><p>Cloudreve 在首次启动时，会创建初始管理员账号，请注意保管管理员密码，此密码只会在首次启动时出现。如果您忘记初始管理员密码，需要删除同级目录下的“cloudreve.db”，重新启动主程序以初始化新的管理员账户。</p><p>Cloudreve 默认会监听“5212”端口。你可以在浏览器中访问“http://服务器IP:5212”进入 Cloudreve。如果宝塔面板需要在安全中放行“5212”端口。注意用默认的管理账号和密码登录。</p><h2 id="4、进程守护"><a href="#4、进程守护" class="headerlink" title="4、进程守护"></a>4、进程守护</h2><p>以上步骤操作完后，最简单的部署就完成了。你可能需要一些更为具体的配置，才能让Cloudreve更好的工作，宝塔面板我们可以使用Supervisor管理器来设置进程守护，具体流程请参考下面的配置流程。</p><h3 id="4-1-安装Supervisor管理器"><a href="#4-1-安装Supervisor管理器" class="headerlink" title="4.1 安装Supervisor管理器"></a><strong>4.1 安装Supervisor管理器</strong></h3><p>软件商店→系统工具 ，找到Supervisor管理器安装即可。</p><p><a href="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632080-Cloudreve-V3-go-2.png"><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632080-Cloudreve-V3-go-2.png" alt="宝塔面板安装Cloudreve V3(go版本) - 支持六大云存储存/OneDrive世纪互联/aria2等"></a></p><h3 id="4-2-添加守护进程"><a href="#4-2-添加守护进程" class="headerlink" title="4.2 添加守护进程"></a><strong>4.2 添加守护进程</strong></h3><p>打开Supervisor管理器添加守护进程，看图：</p><p><a href="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632080-Cloudreve-V3-go-3.png"><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632080-Cloudreve-V3-go-3.png" alt="宝塔面板安装Cloudreve V3(go版本) - 支持六大云存储存/OneDrive世纪互联/aria2等"></a></p><p><strong>注意</strong>：路径修改为自己的。添加完成后，守护进程就会启动成功，如图：</p><p><a href="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632081-Cloudreve-V3-go-4.png"><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632081-Cloudreve-V3-go-4.png" alt="宝塔面板安装Cloudreve V3(go版本) - 支持六大云存储存/OneDrive世纪互联/aria2等"></a></p><p><strong>注意</strong>：设置守护进程之前，请先停止掉命令模式。</p><h2 id="5、域名访问"><a href="#5、域名访问" class="headerlink" title="5、域名访问"></a>5、域名访问</h2><p>新建网站，之后在网站设置中，配置反向daili，如图：</p><p><a href="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632081-Cloudreve-V3-go-5.png"><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632081-Cloudreve-V3-go-5.png" alt="宝塔面板安装Cloudreve V3(go版本) - 支持六大云存储存/OneDrive世纪互联/aria2等"></a></p><h2 id="6、效果展示"><a href="#6、效果展示" class="headerlink" title="6、效果展示"></a>6、效果展示</h2><p>现在就可以用域名打开Cloudreve 访问了：</p><p><a href="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632083-Cloudreve-V3-go-8.png"><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632083-Cloudreve-V3-go-8.png" alt="宝塔面板安装Cloudreve V3(go版本) - 支持六大云存储存/OneDrive世纪互联/aria2等"></a></p><h4 id="管理面板："><a href="#管理面板：" class="headerlink" title="管理面板："></a><strong>管理面板：</strong></h4><p><a href="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632084-Cloudreve-V3-go-9.png"><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632084-Cloudreve-V3-go-9.png" alt="宝塔面板安装Cloudreve V3(go版本) - 支持六大云存储存/OneDrive世纪互联/aria2等"></a></p><h4 id="支持的存储策略："><a href="#支持的存储策略：" class="headerlink" title="支持的存储策略："></a><strong>支持的存储策略：</strong></h4><p><a href="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632084-Cloudreve-V3-go-10.png"><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632084-Cloudreve-V3-go-10.png" alt="宝塔面板安装Cloudreve V3(go版本) - 支持六大云存储存/OneDrive世纪互联/aria2等"></a></p><h4 id="添加oneindex存储策略时详细的引导："><a href="#添加oneindex存储策略时详细的引导：" class="headerlink" title="添加oneindex存储策略时详细的引导："></a><strong>添加oneindex存储策略时详细的引导：</strong></h4><p><a href="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632085-Cloudreve-V3-go-11.png"><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632085-Cloudreve-V3-go-11.png" alt="宝塔面板安装Cloudreve V3(go版本) - 支持六大云存储存/OneDrive世纪互联/aria2等"></a></p><h4 id="创建WebDAV："><a href="#创建WebDAV：" class="headerlink" title="创建WebDAV："></a><strong>创建WebDAV：</strong></h4><p><a href="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632085-Cloudreve-V3-go-12.png"><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584632085-Cloudreve-V3-go-12.png" alt="宝塔面板安装Cloudreve V3(go版本) - 支持六大云存储存/OneDrive世纪互联/aria2等"></a></p><p>注意：目前 V3 仍处于 RC 版本阶段，V2版本的升级措施会随着正式版一起发布。</p><h2 id="7、一些细节"><a href="#7、一些细节" class="headerlink" title="7、一些细节"></a>7、一些细节</h2><p>首次启动时，Cloudreve 会在同级目录下创建名为“conf.ini”的配置文件，你可以修改此文件进行一些参数的配置，保存后需要重新启动 Cloudreve 生效。</p><p>默认情况下，Cloudreve 会使用内置的 SQLite 数据库，并在同级目录创建数据库文件“cloudreve.db”，如果您想要使用 MySQL，请在配置文件中加入以下内容，并重启 Cloudreve。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Database]</span><br><span class="line">#数据库类型，目前支持 sqlite  mysql</span><br><span class="line">Type &#x3D; mysql</span><br><span class="line">#用户名</span><br><span class="line">User &#x3D; root</span><br><span class="line">#密码</span><br><span class="line">Password &#x3D; root</span><br><span class="line">#数据库地址</span><br><span class="line">Host &#x3D; 127.0.0.1</span><br><span class="line">#数据库名称</span><br><span class="line">Name &#x3D; v3</span><br><span class="line">#数据表前缀</span><br><span class="line">TablePrefix &#x3D; cd</span><br></pre></td></tr></table></figure><p>注意：更换数据库配置后，Cloudreve 会重新初始化数据库，原有的数据将会丢失。</p><h2 id="8、最后"><a href="#8、最后" class="headerlink" title="8、最后"></a>8、最后</h2><p>从使用体验来看，效果很不错，功能强大，支持存储种类也多，唯一不足的地方竟然不支持Google Drive 。作者更是说目前不支持，未来也不会支持。</p><p>安装真的是很简单了，比之前的v2版本安装简单的多。不过目前还是测试版，所以有bug是很正常的。</p><p>场景使用：可以使用 Cloudreve 搭建个人用网盘、文件分享系统，亦或是针对大小团体的公有云系统。</p><p>摘自： <a class="link"   href="https://www.daniao.org/8544.html" >https://www.daniao.org/8544.html<i class="fas fa-external-link-alt"></i></a> <a class="link"   href="https://www.daniao.org/5094.html" >https://www.daniao.org/5094.html<i class="fas fa-external-link-alt"></i></a></p><p>在此感谢，有部分删改</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="转载" scheme="https://blog.gitiu.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
    <category term="Cloudreve V3" scheme="https://blog.gitiu.com/tags/Cloudreve-V3/"/>
    
    <category term="网盘" scheme="https://blog.gitiu.com/tags/%E7%BD%91%E7%9B%98/"/>
    
  </entry>
  
  <entry>
    <title>使用MOVER.IO文件迁移服务互通OneDrive/GoogleDrive/Dropbox等网盘</title>
    <link href="https://blog.gitiu.com/posts/62355/"/>
    <id>https://blog.gitiu.com/posts/62355/</id>
    <published>2020-03-18T06:24:00.000Z</published>
    <updated>2021-03-22T08:23:17.575Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>可能在大家手里面早就有了几个<a class="link"   href="https://www.gitiu.com/share/rclone/" >OneDrive<i class="fas fa-external-link-alt"></i></a>的号，有个人号，E5管理号，A1子号，A1P子号，世纪互联子号，可是都是空的，也不敢存太多东西，要是能够转存资源就好了，刚好发现了一个比较优秀的网站，可以转存多种主流网盘(注:国外的)，当然也包括<a class="link"   href="https://www.gitiu.com/share/systemctl_start_rclone/" >OneDrive<i class="fas fa-external-link-alt"></i></a>不同域之间的转存，最重要的是，完全免费，只有一点小限制，而它这就是 <a class="link"   href="https://www.gitiu.com/reprinted_articles/mover-io-move-onedrive-googledrive-dropbox/" >mover.io<i class="fas fa-external-link-alt"></i></a>。</p><p>[toc]</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584502432-f71c12dc94fbf0d8c44ba737517d30e1.png"></p><p>这个网站之前就是网盘搬家类的，就在去年2019年10月21号，被微软收购了(巨硬有钱任性)，现在用于将云文件迁移到OFFICE365(包括谷歌网盘，亚马逊等)，只进不出，接下来简单介绍一下!</p><h2 id="官网地址"><a href="#官网地址" class="headerlink" title="官网地址"></a>官网地址</h2><p><a class="link"   href="https://mover.io/" >https://mover.io<i class="fas fa-external-link-alt"></i></a></p><h2 id="账号注册"><a href="#账号注册" class="headerlink" title="账号注册"></a>账号注册</h2><p>使用任意邮箱即可注册，注册过程会验证邮箱​，需要去邮箱点击验证，电话号码不会验证！</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584502432-37ef6a74640a8790c4e79ebd5fc7774b.png"></p><h2 id="连接器"><a href="#连接器" class="headerlink" title="连接器"></a>连接器</h2><p>Mover 将十几个云服务提供商、web服务和数据库链接到Office 365，包括OneDrive和SharePoint Online。我们亲切地称这些链接为我们的<strong>连接器</strong>。</p><p>你为什么要用我们的连接器？以下是我们最喜欢的两个理由：</p><ul><li>  快速、方便、安全地将多个用户和大数据量迁移到Microsoft。</li><li>  通过我们基于web的服务复制文件而不是使用桌面同步工具来节省带宽。</li></ul><p><strong>主持列表</strong><br>Mover Agent / Amazon S3 / Amazon WorkDocs / Microsoft Azure / Box / Dropbox / Egnyte / FTP / <strong>Google Drive /</strong> <strong>Office 365 /</strong> <strong>OneDrive /</strong> SFTP / SharePoint Online / WebDAV</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584502432-f4e36fb558f7e36aa7574d5281e61fef.png"></p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>注册成功后，进入网页，务必使用​电脑打开网页，手机打开网页可能会被折叠，导致文件夹打不开，如下图，电脑打开网页和手机打开的网页(手机Chrome已开启桌面版网页)。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584502432-9e7b0f996593c8e9ef50af5c50432395.png"></p><h3 id="数据源"><a href="#数据源" class="headerlink" title="数据源"></a>数据源</h3><p>数据源基本上 连接器 支持的云服务商都支持！只要授权登录即可！非常方便！</p><h3 id="目的地"><a href="#目的地" class="headerlink" title="目的地"></a>目的地</h3><p>目前仅支持微软家族的存储服务！</p><p>Azure Blob Storage / Office 365 (OneDrive/SharePoint Admin) / OneDrive Consumer / OneDrive for Business (Single User)</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584502432-19f126a714a227b6d3aa891068e34f19.png"></p><h3 id="账号选择？"><a href="#账号选择？" class="headerlink" title="账号选择？"></a>账号选择？</h3><p>我的微软的账号，到底选择哪个授权登录呢？其实多试几次就知道了！</p><p>OneDrive Consumer  : 普通的微软账号</p><p>OneDrive for Business (Single User) ： A1 / A1P / E3 /E5 等商业版账号</p><p>Office 365 (OneDrive/SharePoint Admin) ：A1 / A1P / E3 /E5 等商业版全局管理账号以及SharePoint账号</p><h3 id="数据迁移"><a href="#数据迁移" class="headerlink" title="数据迁移"></a>数据迁移</h3><p>操作比较简单，只需要将 复制源(Source) 和 目标(Destination) 都授权了，就能愉快的玩耍了！</p><p>传输的速度也是非常快的！！</p><p>我只测试了 OneDrive -&gt; OneDrive 和 Google Drive -&gt; OneDrive ，一般速度大概每分钟传输<strong>1-2GB</strong>。</p><p>更多功能自行探索(其实功能就那几个，多试试)​~~</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584502432-c462e460e5e983fe339b1d8ab435944d.png"></p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584502432-166f4003b07f699955a6c7ce186bcd46.png"></p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584502432-baedf92141d6aebd6e53ddaf3cd59e83.png"></p><h2 id="使用缺点"><a href="#使用缺点" class="headerlink" title="使用缺点"></a>使用缺点</h2><ol><li> 团队盘(A1，E5，A1P等等)限制单文件大小15G。</li><li> 个人盘限制单文件大小10g(我也不知道怎么回事，可能是网站规则限制吧)。</li><li> 生成的任务删除不了，只能暂停。</li><li> 只能转存到OneDrive，不能转到其他地方。</li><li> 无法自动同步更新，只能手动点击。</li></ol><h2 id="使用优点"><a href="#使用优点" class="headerlink" title="使用优点"></a>使用优点</h2><ol><li> 免费(不知道什么时候会收费，现在没有)。</li><li> 不限制网盘数，不限制总流量。</li><li> 可以自动跳过同目录重复文件。</li><li> 支持不同域的OneDrive。</li><li> 官宣是使用的Windows Azure来传输的。</li></ol><h2 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h2><p>发现这个平台还支持FTP传输！这个可以用来做一些FTP备份使用，比如网站数据/数据库的备份！</p><p>摘自： <a class="link"   href="https://51.ruyo.net/15587.html" >https://51.ruyo.net/15587.html<i class="fas fa-external-link-alt"></i></a> 有部分删改 感谢</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="转载" scheme="https://blog.gitiu.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
    <category term="网盘" scheme="https://blog.gitiu.com/tags/%E7%BD%91%E7%9B%98/"/>
    
    <category term="Dropbox" scheme="https://blog.gitiu.com/tags/Dropbox/"/>
    
    <category term="GoogleDrive" scheme="https://blog.gitiu.com/tags/GoogleDrive/"/>
    
    <category term="MOVER.IO" scheme="https://blog.gitiu.com/tags/MOVER-IO/"/>
    
    <category term="onedrive" scheme="https://blog.gitiu.com/tags/onedrive/"/>
    
    <category term="文件迁移" scheme="https://blog.gitiu.com/tags/%E6%96%87%E4%BB%B6%E8%BF%81%E7%A7%BB/"/>
    
  </entry>
  
  <entry>
    <title>使用宝塔面板开启BasicAuth  认证加固安全</title>
    <link href="https://blog.gitiu.com/posts/16148/"/>
    <id>https://blog.gitiu.com/posts/16148/</id>
    <published>2020-03-18T02:54:39.000Z</published>
    <updated>2021-03-22T08:23:17.627Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><a class="link"   href="http://bt.cn/" >宝塔面板<i class="fas fa-external-link-alt"></i></a>相对于Linux基础较为薄弱的人来说是非常方便的,但是有时候一些安全问题总是让人头疼，今天我们通过开启宝塔登陆BasicAuth 认证， 为了防御扫描和拦截一下恶意请求，来保证宝塔的第一道防线的稳固。</p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>[toc]</p><p>1.首先，进入“面板设置”，可以在下面找到“ BasicAuth  认证 ”。</p><p><img src="https://image.gitiu.com/2020/03/18/57646643d83b3.png"></p><p>2.然后开始配置，面板会出现这样的窗口。要注意红色的提示，基本上就是下面的四行。后面我会针对黑体内容补充，比如说怎样关闭 BasicAuth认证 。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/0318111.png"></p><ul><li>  必须要用到且了解此功能才决定自己是否要开启!</li><li>  开启后，以任何方式访问面板，将先要求输入BasicAuth用户名和密码</li><li>  开启后，能有效防止面板被扫描发现，但<strong>并不能代替面板本身的帐号密码</strong></li><li>  请牢记BasicAuth密码，一但忘记将无法访问面板</li><li>  如<strong>忘记密码</strong>，<strong>可在SSH通过bt命令来关闭BasicAuth验证</strong></li></ul><p>3.确定之后是下面的用户名和密码的配置。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/03183.png"></p><p>4.填写好之后我们，我们刷新宝塔面板，可能会出现这样的提示。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/03185.png"></p><p>有两种解决办法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.查看面板入口：&#x2F;etc&#x2F;init.d&#x2F;bt default</span><br><span class="line"></span><br><span class="line">2.关闭安全入口：rm -f &#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;admin_path.pl</span><br></pre></td></tr></table></figure><p>你也可以用我的方法。在SSH控制台输入bt default</p><p>4.1找到宝塔面板的入口</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/03187.png"></p><p>5.复制链接打开输入之前设置 BasicAuth认证的信息，就可以正常进入面板，但是我们还是要注意：<strong>我们把 BasicAuth认证通过了之后，进入面板还是需要之前初始的安全入口的账号密码。</strong></p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/03184.png"></p><h2 id="如何关闭"><a href="#如何关闭" class="headerlink" title="如何关闭"></a>如何关闭</h2><p>在SSH控制台输入 bt ,按提示数字操作。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/03186.png"></p><h2 id="最后补充"><a href="#最后补充" class="headerlink" title="最后补充"></a>最后补充</h2><p>我们不妨简单了解一下 BasicAuth认证的原理。</p><p>可以参考文章：<a class="link"   href="https://blog.csdn.net/ai2000ai/article/details/85775484" >https://blog.csdn.net/ai2000ai/article/details/85775484<i class="fas fa-external-link-alt"></i></a></p><p><a class="link"   href="https://www.leiue.com/what-is-basic-auth" >https://www.leiue.com/what-is-basic-auth<i class="fas fa-external-link-alt"></i></a></p><blockquote><p>BasicAuth是最简单的一种（户名+密码）认证方式，用base64_encode加密，仅限在一些安全要求不是那么高的场景下使用。</p></blockquote><p>BasicAuth 是最简单的一种（户名+密码）认证方式，这种方式有很多问题, 比如它通过网络发送用户名和密码, 而这些都是以一种很容易解码的形式表示的。</p><p>虽然它是用 base64_encode 加密过, 但这种加密的作用也仅仅是让可信任的用户不太可能在进行网络观测时无意中看到密码, 而不能防止恶意用户. 所以也仅限在一些安全要求不是那么高的场景下使用。</p><p>Basic Auth 是开放平台的两种认证方式，简单点说明就是每次请求 API 时都提供用户的 username 和 password。</p><p>要明白 BasicAuth 的原理和实现. 简单来说, 它是检查你的 Headers 中的 Authorization. 从中解析出 username 和 password, 和服务器保存的进行对比, 如果一致则通过, 否则返回 401/403 状态码, 表示客户端没有携带或携带了错误的认证信息。</p><p>BasicAuth 也被用于服务器或者网站的防止扫面来使用。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="日志" scheme="https://blog.gitiu.com/categories/%E6%97%A5%E5%BF%97/"/>
    
    
    <category term="宝塔面板" scheme="https://blog.gitiu.com/tags/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/"/>
    
    <category term="base64_encode" scheme="https://blog.gitiu.com/tags/base64-encode/"/>
    
    <category term="BasicAuth认证" scheme="https://blog.gitiu.com/tags/BasicAuth%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>免费使用jsDelivr+Github为静态文件套上全球CDN加速</title>
    <link href="https://blog.gitiu.com/posts/27159/"/>
    <id>https://blog.gitiu.com/posts/27159/</id>
    <published>2020-03-17T15:34:49.000Z</published>
    <updated>2021-03-22T08:23:17.631Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584459688-725e40317112439.png"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Github是目前最大的项目的托管平台！19年年初的时候被微软收购了。免费套餐还支持私有仓库了！还真不错哇！可惜国内访问比较慢！！</p><p>jsDelivr提供npm，GitHub，WordPress等项目的镜像，全球加速访问！</p><p>针对Github提供免费的CDN加速，在国内使用的是网宿的CDN加速！访问速度一点儿都不慢！</p><p>那么我们就可以好好利用一下！下面博主就分享下使用过程把！</p><p>[toc]</p><h2 id="使用限制"><a href="#使用限制" class="headerlink" title="使用限制"></a>使用限制</h2><ul><li>  目前GITHUB仓库容量是没有上限的！不过官方推荐在1G以内！</li><li>  仓库单个文件50M会收到警告，大于100M会被拒绝！</li><li>  jsDelivr仅能针对50M以下的文件CDN加速！</li></ul><p>这样看来我们完全可以利用它来存一些静态文件了，如JS,CSS,图片等等！</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>1）当然你得先有一个GITHUB账号！</p><p>2）新建一个仓库！名称随便即可！</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584459688-68618eab9d106073216e156da269d81a.png"></p><p>3）我们新建一个js文件，然后提交！你也可以利用git本地推送！</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584459688-b861dfc76207fa3e22c5e6c84fe7f398.png"></p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584459689-f1cea5217bb86a962bfbc5f174331717.png"></p><p><strong>4）点击【releases】，然后我们点击【Create a new release】!</strong></p><p><strong>PS：这里不创建releases也是可以的！</strong></p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584459689-23724450bc9b2a09f15a43ae606c0a52.png"></p><p>5）版本号输入1.0 ，目标是 master分支！</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584459689-a6b8fa7e0ad633bb54b21aa4b9783876.png"></p><p>6）然后访问：<a class="link"   href="https://cdn.jsdelivr.net/gh/%E7%94%A8%E6%88%B7%E5%90%8D/%E4%BB%93%E5%BA%93%E5%90%8D@%E7%89%88%E6%9C%AC%E5%8F%B7/" >https://cdn.jsdelivr.net/gh/用户名/仓库名@版本号/<i class="fas fa-external-link-alt"></i></a> 即可访问你的内容了！</p><p>如本文示例：<a class="link"   href="https://cdn.jsdelivr.net/gh/malaohu/jscdn@1.0/" >https://cdn.jsdelivr.net/gh/malaohu/jscdn@1.0/<i class="fas fa-external-link-alt"></i></a></p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584459689-694d20efdb4a2b2d9b0a7753910926de.png"></p><p>文件不想带版本号？将版本号换成latest即可！或者不带版本号！或者直接**@master(或者其他分支名称)**！</p><p>如：</p><p><a class="link"   href="https://cdn.jsdelivr.net/gh/malaohu/jscdn@latest/pic.png" >https://cdn.jsdelivr.net/gh/malaohu/jscdn@latest/pic.png<i class="fas fa-external-link-alt"></i></a></p><p><a class="link"   href="https://cdn.jsdelivr.net/gh/malaohu/jscdn/pic.png" >https://cdn.jsdelivr.net/gh/malaohu/jscdn/pic.png<i class="fas fa-external-link-alt"></i></a></p><p><a class="link"   href="https://cdn.jsdelivr.net/gh/malaohu/jscdn@master/pic.png" >https://cdn.jsdelivr.net/gh/malaohu/jscdn@master/pic.png<i class="fas fa-external-link-alt"></i></a></p><p>直接@master，就不用新建<strong>releases了！</strong></p><h2 id="演示内容"><a href="#演示内容" class="headerlink" title="演示内容"></a>演示内容</h2><p>20M压缩包：<a class="link"   href="https://cdn.jsdelivr.net/gh/malaohu/jscdn@master/20M.zip" >https://cdn.jsdelivr.net/gh/malaohu/jscdn@master/20M.zip<i class="fas fa-external-link-alt"></i></a></p><p>美图一张~~</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584459689-pic.png"></p><h2 id="访问速度"><a href="#访问速度" class="headerlink" title="访问速度"></a>访问速度</h2><p>在国内有网宿CDN加速访问！</p><p>在国外有CloudFlare CDN加速访问！</p><p>线路</p><p>最快节点</p><p>最慢节点</p><p>平均响应</p><p>电信</p><p>江苏常州市电信0.07s</p><p>广东中山市电信5.58s</p><p>0.58s</p><p>联通</p><p>北京北京市联通0.07s</p><p>辽宁阜新市联通2.87s</p><p>0.34s</p><p>移动</p><p>天津天津市移动0.07s</p><p>黑龙江鹤岗市移动8.85s</p><p>0.68s</p><p>海外</p><p>美国国外0.22s</p><p>澳大利亚国外1.08s</p><p>0.53s</p><p>教育网</p><p>北京北京市教育网0.17s</p><p>辽宁沈阳市教育网0.34s</p><p>0.25s</p><p>香港</p><p>香港香港0.05s</p><p>香港香港0.19s</p><p>0.12s</p><p>台湾</p><p>台湾台湾0.09s</p><p>台湾台湾0.18s</p><p>0.14s</p><p>澳门</p><p>澳门澳门0.12s</p><p>澳门澳门0.12s</p><p>0.12s</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584459689-4a9989d3bbe122a9d80cab970917297c.png"></p><p>详细报告：<a class="link"   href="http://www.17ce.com/site/http/20200315_4115e56066b111eab8bc2bbb7b33a12c:1.html" >http://www.17ce.com/site/http/20200315_4115e56066b111eab8bc2bbb7b33a12c:1.html<i class="fas fa-external-link-alt"></i></a></p><p>摘自：<a class="link"   href="https://51.ruyo.net/15149.html" >https://51.ruyo.net/15149.html<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="转载" scheme="https://blog.gitiu.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
    <category term="CDN" scheme="https://blog.gitiu.com/tags/CDN/"/>
    
    <category term="Github" scheme="https://blog.gitiu.com/tags/Github/"/>
    
    <category term="jsDelivr" scheme="https://blog.gitiu.com/tags/jsDelivr/"/>
    
    <category term="静态文件加速" scheme="https://blog.gitiu.com/tags/%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6%E5%8A%A0%E9%80%9F/"/>
    
  </entry>
  
  <entry>
    <title>uptime-status一款漂亮的网站监控面板</title>
    <link href="https://blog.gitiu.com/posts/6982/"/>
    <id>https://blog.gitiu.com/posts/6982/</id>
    <published>2020-03-15T12:48:22.000Z</published>
    <updated>2021-03-22T08:53:39.086Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>无意之间在<a class="link"   href="https://www.hostloc.com/" >hostloc<i class="fas fa-external-link-alt"></i></a>看到一贴，介绍一款比较适合监控站点的多功能网站监控面板，于是遂就水一篇文档。干就完了！uptime-status是对接 <a class="link"   href="https://uptimerobot.com/" >UptimeRobot<i class="fas fa-external-link-alt"></i></a> API 开发而成的。所以说部署就简单起来了。</p><p>项目地址：</p><p>项目演示站点：<a class="link"   href="https://status.org.cn/" >https://status.org.cn/<i class="fas fa-external-link-alt"></i></a></p><p>我的Demo:<a class="link"   href="https://www.gitiu.com/monitor/" >https://www.gitiu.com/monitor/<i class="fas fa-external-link-alt"></i></a></p><p>或者直接看图？？</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584267915-8a5d86c5b1db6.png"></p><p>监测界面</p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>1.动动你的小手去<a class="link"   href="https://uptimerobot.com/signUp" >这里<i class="fas fa-external-link-alt"></i></a>注册一个账号，默认开通免费服务，虽说是免费的但是绝对够你用了。不够用上钱！！</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/uptime-status2.png"></p><p>免费额度</p><p>2.注册成功后在 <a class="link"   href="https://uptimerobot.com/dashboard#mySettings" >My Settings<i class="fas fa-external-link-alt"></i></a> 中找到 API Settings开启 Monitor-Specific API Keys ，先搜索你之前起的 Friendly Name ，点击选择搜索到的项目名字，然后会得到一串数字。复制它后面有用。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584287650-5c87954175136.png"></p><p>搜索名字</p><h2 id="配置-UptimeRobot"><a href="#配置-UptimeRobot" class="headerlink" title="配置 UptimeRobot"></a>配置 UptimeRobot</h2><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584276545-2802dcbd868a3.png"></p><p>监控协议选择</p><p>我们找到New Monitor,我们可以看到支持的协议，好像免费版不支持https。你根据自己的需求开始操作吧。</p><p>Tips:我建议先在 <a class="link"   href="https://uptimerobot.com/" >UptimeRobot<i class="fas fa-external-link-alt"></i></a> 里面弄好你想要监控的站点，然后再安装uptime-status</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584276545-79258c3cddd86.png"></p><p>我配置的http协议的监控</p><h2 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h2><p>目前已经在 GitHub 上放出编译好的文件，什么环境都不需要！<br>不需要PHP！不需要nodejs！不需要宝塔！只需要一个支持html的纯静态空间都可以！<br>包括又拍云！OSS！七牛！啥都行！cloudflare worker 什么乱七八糟的都可以！</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>最<strong>简单的食用方式</strong>：<br>1.下载最新版 <strong><a class="link"   href="https://github.com/yb/uptime-status/releases/latest" >https://github.com/yb/uptime-status/releases/latest<i class="fas fa-external-link-alt"></i></a></strong><br>2. 解压缩压缩包；<br>3. 打开config.js<br>4. 修改你的 ApiKeys（就是上面获取的 Monitor-Specific API Keys） 和其它配置（已经做了注释，去掉了代码压缩）  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 配置</span><br><span class="line">window.Config &#x3D; &#123;</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 站点名</span><br><span class="line">  SiteName: &#39;Uptime Status&#39;,</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 站点链接</span><br><span class="line">  SiteUrl: &#39;&#x2F;&#39;,</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; UptimeRobot Api Keys</span><br><span class="line">  &#x2F;&#x2F; 支持 Monitor-Specific 和 Read-Only 两只 Api Key</span><br><span class="line">  ApiKeys: [</span><br><span class="line">    &#39;m784488775-dd1ad84b209c05f8e185c33e&#39;,</span><br><span class="line">    &#39;m784490063-7b5da437e7f1e0d67613714d&#39;,</span><br><span class="line">    &#39;m784497419-de55aa09902ccb3ab22d548a&#39;,</span><br><span class="line">    &#39;m784496436-71a4bf7b1e3bdf7756be131b&#39;,</span><br><span class="line">  ],</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 是否显示监测站点的链接</span><br><span class="line">  ShowLink: true,</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 日志天数</span><br><span class="line">  &#x2F;&#x2F; 虽然免费版说仅保存60天日志，但测试好像API可以获取90天的</span><br><span class="line">  &#x2F;&#x2F; 不过时间不要设置太长，容易卡，接口请求也容易失败</span><br><span class="line">  CountDays: 60,</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 导航栏菜单</span><br><span class="line">  Navi: [</span><br><span class="line">    &#123;</span><br><span class="line">      text: &#39;Homepage&#39;,</span><br><span class="line">      url: &#39;https:&#x2F;&#x2F;status.org.cn&#x2F;&#39;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      text: &#39;GitHub&#39;,</span><br><span class="line">      url: &#39;https:&#x2F;&#x2F;github.com&#x2F;yb&#x2F;uptime-status&#39;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>若是想麻烦一点自己<strong>编译安装</strong>那么就这样</p><p>食用方法：  </p><ol><li>下载或 clone 代码；  </li><li>第一次下载之后先执行 npm i 安装依赖；  </li><li>改 src/config.js 中的 apikeys；  </li><li>执行 npm run build 打包；  </li><li>把 build 目录下的静态文件随便找个地方扔就完事了;</li></ol><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>这个代码是依赖 UptimeRobot 的，你需要先注册个 UptimeRobot。拿到apikey。检测线路的问题不是这个代码检测是 UptimeRobot 去检测的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="分享" scheme="https://blog.gitiu.com/categories/%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="uptime-status" scheme="https://blog.gitiu.com/tags/uptime-status/"/>
    
    <category term="UptimeRobot" scheme="https://blog.gitiu.com/tags/UptimeRobot/"/>
    
    <category term="网站监控面板" scheme="https://blog.gitiu.com/tags/%E7%BD%91%E7%AB%99%E7%9B%91%E6%8E%A7%E9%9D%A2%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>漫画赏析：Linux 内核到底长啥样</title>
    <link href="https://blog.gitiu.com/posts/45392/"/>
    <id>https://blog.gitiu.com/posts/45392/</id>
    <published>2020-03-11T13:11:16.000Z</published>
    <updated>2021-03-22T08:23:17.563Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>今天，我来为大家解读一幅来自 TurnOff.us 的漫画 “<a class="link"   href="http://turnoff.us/geek/inside-the-linux-kernel/" >InSide The Linux Kernel<i class="fas fa-external-link-alt"></i></a>” 。 <a class="link"   href="http://turnoff.us/" >TurnOff.us<i class="fas fa-external-link-alt"></i></a> 是一个极客漫画网站，作者Daniel Stori 画了一些非常有趣的关于编程语言、Web、云计算、Linux 相关的漫画。今天解读的便是其中的一篇。</p><p>在开始，我们先来看看这幅漫画的全貌！</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584321173-172808pim5iueyqwa5egww.jpg"></p><p>这幅漫画是以一个房子的侧方刨面图来绘画的。使用这样的一个房子来代表 Linux 内核。</p><h3 id="地基"><a href="#地基" class="headerlink" title="地基"></a>地基</h3><p>作为一个房子，最重要的莫过于其地基，在这个图片里，我们也从最下面的地基开始看起：</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584321173-173034wv1qodoavs7v11q1.jpg" alt="地基"></p><p><em>地基</em></p><p>地基（底层）由一排排的文件柜组成，井然有序，文件柜里放置着“文件”——电脑中的文件。左上角，有一只胸前挂着 421 号牌的小企鹅，它表示着 PID（进程 IDProcess ID） 为 421 的进程，它正在查看文件柜中的文件，这代表系统中正有一个进程在访问文件系统。在右下角有一只小狗，它是看门狗watchdog ，这代表对文件系统的监控。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584321173-173228e3ehznhh5wzuwnhk.jpg" alt="一层（地面层）"></p><p><em>一层（地面层）</em></p><h3 id="一层（地面层）"><a href="#一层（地面层）" class="headerlink" title="一层（地面层）"></a>一层（地面层）</h3><p>看完了地基，接下来我们来看地基上面的一层，都有哪些东西。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584321173-173346wq87xgqp8kzk1up7.jpg" alt="进程表"></p><p><em>进程表</em></p><p>在这一层，最引人瞩目的莫过于中间的一块垫子，众多小企鹅在围着着桌子坐着。这个垫子的区域代表进程表。</p><p>左上角有一个小企鹅，站着，仿佛在说些什么这显然是一位家长式的人物，不过看起来周围坐的那些小企鹅不是很听话——你看有好多走神、自顾自聊天的——“喂喂，说你呢，哇塞娃（171），转过身来”。它代表着 Linux 内核中的初始化（init）进程，也就是我们常说的 PID 为 1 的进程。桌子上坐的小企鹅都在等待状态wait中，等待工作任务。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584321173-173448yl694u97ihh6sl9h.jpg" alt="看门狗"></p><p><em>看门狗</em></p><p>瞧瞧，垫子（进程表）两旁有两只小狗，它会监控小企鹅的状态（监控进程），当小企鹅们不听话时，它就会汪汪地叫喊起来。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584321173-173557n1i1xscsxiclue5s.jpg" alt="http 进程"></p><p><em>http 进程</em></p><p>在这层的左侧，有一只号牌为 1341 的小企鹅，守在门口，门上写着 80，说明这个 PID 为 1341 的小企鹅负责接待 80 端口，也就是我们常说的 HTTP （网站）的端口。小企鹅头上有一片羽毛，这片羽毛大有来历，它是著名的 HTTP 服务器 Apache 的 Logo。喏，就是这只：</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584321173-181641irppc393zm96lcbw.jpg" alt="apache logo"></p><p><em>apache logo</em></p><p>向右看，我们可以看到这里仍有一扇门，门上写着 21，但是，看起来这扇门似乎年久失修，上面的门牌号都歪了，门口也没人守着。看起来这个 21 端口的 FTP 协议有点老旧了，目前用的人也比以前少了，以至于这里都没人接待了。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584321173-173801cijdj9iuqdzh4v2v.jpg" alt="无人看守的 FTP 进程"></p><p><em>无人看守的 FTP 进程</em></p><p>而在最右侧的一个门牌号 22 的们的待遇就大为不同，居然有一只带着墨镜的小企鹅在守着，看起来好酷啊，它是黑衣人叔叔吗？为什么要这么酷的一个企鹅呢，因为 22 端口是 SSH 端口，是一个非常重要的远程连接端口，通常通过这个端口进行远程管理，所以对这个端口进来的人要仔细审查。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584321173-173855y3zutv6w2bgwfg2u.jpg" alt="SSH 守护进程"></p><p><em>SSH 守护进程</em></p><p>它的身上写着 52，说明它是第 52 个小企鹅。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584321173-174017tl49c9ca4lh9wzur.jpg" alt="到达文件系统"></p><p><em>到达文件系统</em></p><p>在图片的左上角，有一个向下台阶。这个台阶是底层（地基）的文件系统中的，进程们可以通过这个台阶，到文件系统中去读取文件，进行操作。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584321174-174114ex2yjd282wewe2dj.jpg" alt="Cron 任务"></p><p><em>Cron 任务</em></p><p>在这一层中，有一个身上写着 217 的小企鹅，他正满头大汗地看着自己的手表。这只小企鹅就是定时任务（Crontab），他会时刻关注时间，查看是否要去做某个工作。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584321174-174204sqh4o4v94cwpvoib.jpg" alt="管道"></p><p><em>管道</em></p><p>在图片的中部，有两个小企鹅扛着管道（PipeLine）在行走，一只小企鹅可以把自己手上的东西通过这个管道，传递给后面的小企鹅。不过怎么看起来前面这种（男？）企鹅累得满头大汗，而后面那只（女？）企鹅似乎游刃有余——喂喂，前面那个，裤子快掉了~</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584321174-174246utkckjcfj4efbf8z.jpg" alt="Wine"></p><p><em>Wine</em></p><p>在这一层还有另外的一个小企鹅，它手上拿着一杯红酒，身上写着 411，看起来有点不胜酒力。它就是红酒（Wine）小企鹅,它可以干（执行）一些来自 Windows 的任务。</p><h3 id="跃层"><a href="#跃层" class="headerlink" title="跃层"></a>跃层</h3><p>在一层之上，还有一个跃层，这里有很多不同的屏幕，每个屏幕上写着 TTY（这就是对外的终端）。比如说最左边 tty4 上输入了“fre”——这是想输入“freshmeat…”么 ：d ；它旁边的 tty2 和 tty3 就正常多了，看起来是比较正常的命令；tty7 显示的图形界面嗳，对，图形界面（X Window）一般就在 7 号终端；tty5 和 tty6 是空的，这表示这两个终端没人用。等等，tty1 呢？</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584321174-174350fb4ugtub22yd193d.jpg" alt="跃层"></p><p><em>跃层</em></p><p>tty（终端）是对外沟通的渠道之一，但是，不是每一个进程都需要 tty，某些进程可以直接通过其他途径（比如端口）来和外部进行通信，对外提供服务的，所以，这一层不是完整的一层，只是个跃层。</p><p>好了，我们有落下什么吗？</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584321174-174437u57e34zke23nb2e7.jpg" alt="小丑？"></p><p><em>小丑？</em></p><p>这小丑是谁啊？</p><p>啊哈，我也不知道，或许是病毒？你说呢？</p><p>英文：Daniel Stori，解读：LCTT - HuanCheng Bai 转载： <a class="link"   href="https://linux.cn/article-8290-1.html" >https://linux.cn/article-8290-1.html<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="文章" scheme="https://blog.gitiu.com/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="Linux内核" scheme="https://blog.gitiu.com/tags/Linux%E5%86%85%E6%A0%B8/"/>
    
  </entry>
  
  <entry>
    <title>部署Free-HLS – 视频切片后自动上传至国内免费CDN</title>
    <link href="https://blog.gitiu.com/posts/24613/"/>
    <id>https://blog.gitiu.com/posts/24613/</id>
    <published>2020-03-11T01:10:51.000Z</published>
    <updated>2021-03-22T08:23:17.543Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>[toc]</p><p>Free-HLS是一个免费的 HLS 视频解决方案，即所谓的视频床。该项目提供一整套集成化解决方案，囊括了各环节所需的切片、转码、上传、即时分享等套件。让你可以以更方便、更低廉的方式分享你的视频到任意地方。</p><p>这个项目需要搭建服务端和客户端，当然你可以都放到一起。这篇教程就来说说如何利用宝塔面板来搭建一个自己的视频床。</p><h3 id=""><a href="#" class="headerlink" title=""></a></h3><p><strong>1、前言</strong></p><p>Github地址：</p><p>参考视频部署：<a class="link"   href="https://sxyz.gitee.io/free-hls/usage.html" >https://sxyz.gitee.io/free-hls/usage.html<i class="fas fa-external-link-alt"></i></a></p><h2 id="2-安装"><a href="#2-安装" class="headerlink" title="2.安装"></a>2.安装</h2><h3 id="2-1安装python项目管理器（软件商店里安装）"><a href="#2-1安装python项目管理器（软件商店里安装）" class="headerlink" title="2.1安装python项目管理器（软件商店里安装）"></a>2.1安装python项目管理器（软件商店里安装）</h3><p>宝塔面板默认的python版本是python2，但是这个教程是需要python3来部署的，如何解决呢？这里提供一个思路。</p><p>1.<strong>首先安装python项目管理器，这个自己在软件商店里自行安装。</strong></p><p>2.<strong>版本管理中安装python3.7.2。</strong></p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1583890714-httpswww.daniao.orgwp-contentuploads202003free-hls-bt-1.png"></p><h3 id="2-2随便添加一个项目"><a href="#2-2随便添加一个项目" class="headerlink" title="2.2随便添加一个项目"></a>2.2<strong>随便添加一个项目</strong></h3><p>随便添加一个项目，项目添加好后，宝塔会给我们生成一个虚拟环境这个虚拟环境默认就是python3的环境，所以问题就解决了。比如说我们就添加free-hls这个项目。先进入命令模式git项目，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;sxyazi&#x2F;free-hls.git</span><br></pre></td></tr></table></figure><p>之后，我们进入到python项目管理新建一个项目，具体如图：</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1583890714-httpswww.daniao.orgwp-contentuploads202003free-hls-bt-2.png" alt="å®å¡é¢æ¿é¨ç½²Free-HLS - è§é¢åçåèªå¨ä¸ä¼ è³å½ååè´¹CDN"></p><h3 id="2-3-进入虚拟环境安装"><a href="#2-3-进入虚拟环境安装" class="headerlink" title="2.3 进入虚拟环境安装"></a>2.3 <strong>进入虚拟环境安装</strong></h3><p>项目建立之后，会给我们生成一个虚拟环境，进入方法如下，在命令行输入 ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">source 项目路径&#x2F;项目名_venv&#x2F;bin&#x2F;activate</span><br><span class="line">如：source &#x2F;data&#x2F;python&#x2F;project1_venv&#x2F;bin&#x2F;activate</span><br><span class="line">比如这个案列进入方法：</span><br><span class="line"></span><br><span class="line">source &#x2F;www&#x2F;wwwroot&#x2F;ee.daniao.org&#x2F;OneList&#x2F;666666_venv&#x2F;bin&#x2F;activate</span><br></pre></td></tr></table></figure><p>截图：</p><p><a href="https://cdn.gitiu.com/wp-content/uploads/2020/03/1583890715-httpswww.daniao.orgwp-contentuploads202003free-hls-bt-3.png"><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1583890715-httpswww.daniao.orgwp-contentuploads202003free-hls-bt-3.png" alt="宝塔面板部署Free-HLS - 视频切片后自动上传至国内免费CDN"></a></p><p>这样就解决了python的版本问题，而且还是一个单独的虚拟环境，折腾坏了也不影响啥。</p><h3 id="2-4也可以选择命令安装-安装最新的-Python3，以及必要包："><a href="#2-4也可以选择命令安装-安装最新的-Python3，以及必要包：" class="headerlink" title="2.4也可以选择命令安装 安装最新的 Python3，以及必要包："></a>2.4也可以选择命令安装 安装最新的 Python3，以及必要包：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install -y ffmpeg python3 python3-pip</span><br><span class="line">pip3 install requests python-dotenv</span><br></pre></td></tr></table></figure><h2 id="3-搭建服务端"><a href="#3-搭建服务端" class="headerlink" title="3.搭建服务端"></a>3.搭建服务端</h2><p>服务端位于项目的 <code>web</code> 目录，负责向客户端提供视频发布所必要的 API 接口。以及最终目标视频的播放服务。</p><p>3.1 <strong>安装依赖</strong></p><p>ps: 这里命令输入是接着上面，你需要进入到python3的虚拟环境里面执行（这里的命令是centos7系统。）！！！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y python3 python3-pip</span><br><span class="line">yum install Flask gunicorn python-dotenv</span><br></pre></td></tr></table></figure><p>3.2 ** 启动服务**</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd web</span><br><span class="line">gunicorn app:app -b 0.0.0.0:3395 --workers&#x3D;5 --threads&#x3D;2 -D</span><br></pre></td></tr></table></figure><h3 id="3-3访问你的IP-3395"><a href="#3-3访问你的IP-3395" class="headerlink" title="3.3访问你的IP:3395"></a>3.3访问你的IP:3395</h3><p>当看到“hello，world”表示客户端已经搭建成功。</p><h2 id="4-注册语雀"><a href="#4-注册语雀" class="headerlink" title="4.注册语雀"></a>4.注册语雀</h2><p>点击进入 <a class="link"   href="https://www.yuque.com/" >语雀官网<i class="fas fa-external-link-alt"></i></a></p><p>先前往语雀官网注册一个账号，然后获取<code>ctoken</code>和<code>session</code>的值，这里说下大概获取方法，以谷歌浏览器为例。</p><p>登录后，<code>F12</code>进入控制台选择<code>Network</code>，点击<code>dashboard</code>，再选择<code>Cookies</code>即可看到所需要的<code>2</code>个参数。</p><h2 id="5-搭建服务端"><a href="#5-搭建服务端" class="headerlink" title="5.搭建服务端"></a>5.搭建服务端</h2><p>这里注意： 服务端可以在自己电脑上，也可以在服务器上，这就以服务器搭建为列。</p><p>5.1<strong>安装依赖</strong></p><p>依赖包括ffmpeg、python3、python-dotenv，因为在上面我们已经安装过了依赖，唯一的ffmpeg没有安装，这里说下宝塔安装ffmpeg的方法，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;download.bt.cn&#x2F;install&#x2F;ext&#x2F;ffmpeg.sh &amp;&amp; sh ffmpeg.sh</span><br><span class="line">安装完后可输入以下命令是否安装成功。</span><br><span class="line">ffmpeg -version</span><br></pre></td></tr></table></figure><p>在PHP设置中取消掉禁用scandir，exec、system、shell_exec函数</p><p>安装方法2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">1.编译安装升级yum</span><br><span class="line">cd &#x2F;root</span><br><span class="line">yum -y update</span><br><span class="line">2.安装命令如下：#下载ffmpeg（x64二进制文件）</span><br><span class="line">wget https:&#x2F;&#x2F;johnvansickle.com&#x2F;ffmpeg&#x2F;builds&#x2F;ffmpeg-git-amd64-static.tar.xz</span><br><span class="line"> </span><br><span class="line">#解压文件</span><br><span class="line">tar xvf ffmpeg-git-*-static.tar.xz &amp;&amp; rm -rf ffmpeg-git-*-static.tar.xz</span><br><span class="line">#将ffmpeg和ffprobe可执行文件移至&#x2F;usr&#x2F;bin方便系统直接调用</span><br><span class="line">mv ffmpeg-git-*&#x2F;ffmpeg  ffmpeg-git-*&#x2F;ffprobe &#x2F;usr&#x2F;bin&#x2F;</span><br><span class="line"> </span><br><span class="line">#也可以使用ffmpeg一键自动安装包，安装FFMPEG和相关依赖。（如果使用二进制文件，此步略过）</span><br><span class="line">#https:&#x2F;&#x2F;www.ffmpegtoolkit.com&#x2F;</span><br><span class="line">#CentOS 7.* 64bit Latest</span><br><span class="line">yum install git wget -y </span><br><span class="line">cd &#x2F;opt</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;hostsoft&#x2F;ffmpegtoolkit.git ffmpegtoolkit</span><br><span class="line">cd ffmpegtoolkit</span><br><span class="line">sh latest.sh</span><br></pre></td></tr></table></figure><p>安装的过程非常漫长，你需要慢慢等待。安装成功后可以用命令“<code>ffmpeg</code>”或者“<code>ffmpeg -version</code>”来测试是否安装成功</p><h3 id="5-2配置语雀"><a href="#5-2配置语雀" class="headerlink" title="**5.**2配置语雀"></a>**5.**2配置语雀</h3><p>将 <code>.env.example</code> 更名为 <code>.env</code>，修改其中的 <code>YUQUE_CTOKEN</code>、<code>YUQUE_SESSION</code> 配置。操作步骤：</p><ol><li> 登录语雀；</li><li> 打开 Chrome 的开发者工具（F12），切换到 Network 面板；</li><li> 刷新页面，从 Cookie 中抓取 <code>ctoken</code>、<code>_yuque_session</code>，复制并替换到 <code>.env</code> 文件中；</li><li> 将你服务器的域名或 IP 地址修改到 <code>.env</code> 中的 <code>APIURL</code> 配置项。</li></ol><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1583890716-httpswww.daniao.orgwp-contentuploads202003free-hls-bt-5.png" alt="å®å¡é¢æ¿é¨ç½²Free-HLS - è§é¢åçåèªå¨ä¸ä¼ è³å½ååè´¹CDN"></p><h2 id="6-使用"><a href="#6-使用" class="headerlink" title="6.使用"></a>6.使用</h2><p>准备好目标视频文件，输入如下指令开始切片、上传：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">python3 up.py test.mp4               #默认标题</span><br><span class="line">python3 up.py test.mp4 测试哦         #自定义标题</span><br><span class="line">python3 up.py test.mp4 test 5        #自定义分段大小</span><br><span class="line">python3 up.py test.mp4 test LIMITED  #限制码率（需重编码）</span><br><span class="line"></span><br><span class="line">python3 ls.py    #列出已上传视频</span><br><span class="line">python3 ls.py 3  #列出已上传视频（第3页，50每页）</span><br></pre></td></tr></table></figure><p>比如视频在root目录中命名为test,输入 python3 up.py /root/test.mp4开始上传</p><p>成功之后，会显示地址</p><p>最后的下载地址域名绑定使用宝塔面板反向代理IP:3396</p><h2 id="7-最后"><a href="#7-最后" class="headerlink" title="7.最后"></a>7.最后</h2><p>推荐在自己的电脑上设置服务器，不然长时间压缩切片造成服务器资源占用太高，会被服务商关机。</p><p>你要切片视频的话你得上传一个视频到你的服务器，或者自己从别地方download一个过来。</p><p>同样还有很多项目：</p><ul><li>  <a class="link"   href="https://github.com/sxzz/free-hls.js" >https://github.com/sxzz/free-hls.js<i class="fas fa-external-link-alt"></i></a></li><li>  <a class="link"   href="https://github.com/sxzz/free-hls-live" >https://github.com/sxzz/free-hls-live<i class="fas fa-external-link-alt"></i></a></li><li>  <a class="link"   href="https://github.com/MoeClub/Note/tree/master/ffmpeg" >https://github.com/MoeClub/Note/tree/master/ffmpeg<i class="fas fa-external-link-alt"></i></a></li></ul><p>教程绝大部分参考<a class="link"   href="https://www.daniao.org/8407.html" >https://www.daniao.org/8407.html<i class="fas fa-external-link-alt"></i></a> 有部分修改</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="转载" scheme="https://blog.gitiu.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
    <category term="Free-HLS" scheme="https://blog.gitiu.com/tags/Free-HLS/"/>
    
    <category term="视频切片" scheme="https://blog.gitiu.com/tags/%E8%A7%86%E9%A2%91%E5%88%87%E7%89%87/"/>
    
    <category term="视频床" scheme="https://blog.gitiu.com/tags/%E8%A7%86%E9%A2%91%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>宝塔面板安装TCShare – 一款天翼云目录列表程序可以实现天翼云直链解析</title>
    <link href="https://blog.gitiu.com/posts/50649/"/>
    <id>https://blog.gitiu.com/posts/50649/</id>
    <published>2020-03-07T16:29:33.000Z</published>
    <updated>2021-03-22T08:23:17.471Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="由于某些原因我将不在提供任何AK-SK信息，抱歉！！！！"><a href="#由于某些原因我将不在提供任何AK-SK信息，抱歉！！！！" class="headerlink" title="由于某些原因我将不在提供任何AK SK信息，抱歉！！！！"></a>由于某些原因我将不在提供任何AK SK信息，抱歉！！！！</h1><p>[toc]</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>TCShare这个程序是天翼云API目录列表程序，这盘文章说说如何利用宝塔面板来部署TCShare。</p><p>项目地址:</p><p>参考我的安装环境: 宝塔面板 /Nginx1.16/PHP7.3，你也可以用自己的。可能也行吧?</p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>1.新建站点?</p><p>找到配置文件把一下代码填入,可以解决列网盘图片 404??的问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">location ~ .*\.(gifjpgjpegpngbmpswf)$</span><br><span class="line">    &#123;</span><br><span class="line">        expires      30d;</span><br><span class="line">       error_log off;</span><br><span class="line">        access_log off;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>2.在“网站设置”→“伪静态”中设置好伪静态，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">try_files $uri $uri&#x2F; &#x2F;index.php$is_args$args;</span><br><span class="line">location ~ &#x2F;\.env &#123;</span><br><span class="line">    deny all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.使用宝塔上传程序到网站根目录</p><p>或者使用git命令和其他命令例如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;www&#x2F;wwwroot&#x2F;yun.gitiu.com</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;xytoki&#x2F;TCShare.git</span><br><span class="line">mv TCShare&#x2F;* .&#x2F;</span><br><span class="line">rm -rf TCShare</span><br></pre></td></tr></table></figure><p>4.最重要的一步进入网站根目录，新建一个空白文件，命名为.env，填入一下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">XS 是前缀</span><br><span class="line">#    -KEY 是配置种类，可选KEY，APP，SEC</span><br><span class="line">#     - -ct是key的ID（类似config.php）</span><br><span class="line">#     -  - something是配置名称</span><br><span class="line">#     -  -  - - - - value在等号右边</span><br><span class="line">#   XS_KEY_ct_something&#x3D;value</span><br><span class="line"></span><br><span class="line">    XS_KEY_ct&#x3D;ctyun   #必填，值为ctyun</span><br><span class="line">    XS_KEY_ct_FD&#x3D;     #应用文件夹名</span><br><span class="line">    XS_KEY_ct_AK&#x3D;     #AK</span><br><span class="line">    XS_KEY_ct_SK&#x3D;     #SK</span><br><span class="line"></span><br><span class="line">#   这里APP后面的可以是任意值，一般就123456下去</span><br><span class="line">#          ↓</span><br><span class="line">    XS_APP_1&#x3D;&#x2F;              #挂载路径</span><br><span class="line">    XS_APP_1_NAME&#x3D;TCShare   #网盘名称</span><br><span class="line">    XS_APP_1_THEME&#x3D;mdui     #界面主题</span><br><span class="line">    XS_APP_1_BASE&#x3D;&#x2F;         #网盘内路径</span><br><span class="line">    XS_APP_1_KEY&#x3D;ct         #对应上面Key的ID</span><br></pre></td></tr></table></figure><p>5.到软件商店里找到你下载的 PHP ，点击设置找到禁用函数，移除 putenv。不移除可能安装不了composer，?切换到程序目录?，然后执行composer install。注意国内的源可以切换到阿里的?。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer config repo.packagist composer https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;composer&#x2F;</span><br></pre></td></tr></table></figure><p>6.访问域名，点击 Click here to get a token。跳转登录，获取授权。</p><p>7.，登录 天翼云盘 APP，在 我的应用 目录创建 safebox。可以把自己想分享的文件移动过来。</p><p>8.访问域名即可看到文件list??</p><h2 id="重要提示"><a href="#重要提示" class="headerlink" title="重要提示??"></a>重要提示??</h2><p>请每个月手动为每个网盘的token续期。如，你的网盘安装在<a class="link"   href="http://tcshare.website/%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6%81%E6%AF%8F%E4%B8%AA%E6%9C%88%E8%AE%BF%E9%97%AE%E4%B8%80%E6%AC%A1http://tcshare.website/-renew%E3%80%82%E5%8F%AF%E4%BB%A5%E5%9C%A8%E5%AE%9D%E5%A1%94%E7%9A%84%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E8%AE%BE%E7%BD%AE%E4%B8%80%E4%B8%8B%E6%AF%8F%E6%9C%88%E5%AE%9A%E6%97%B6%E8%AE%BF%E9%97%AE" >http://tcshare.website/，你需要每个月访问一次http://tcshare.website/-renew。可以在宝塔的计划任务设置一下每月定时访问<i class="fas fa-external-link-alt"></i></a> /-renew ，以延长 token 的有效期。</p><h4 id="可能你有多个天翼账号想加多块盘的"><a href="#可能你有多个天翼账号想加多块盘的" class="headerlink" title="可能你有多个天翼账号想加多块盘的"></a>可能你有多个天翼账号想加多块盘的</h4><p>在之前的.env配置中加入一下代码，需要自己修改一些相关的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">XS_KEY_ct2&#x3D;ctyun   #必填，值为ctyun</span><br><span class="line">XS_KEY_ct2_FD&#x3D;     #应用文件夹名</span><br><span class="line">XS_KEY_ct2_AK&#x3D;     #AK</span><br><span class="line">XS_KEY_ct2_SK&#x3D;     #SK</span><br><span class="line"> </span><br><span class="line">XS_APP_2&#x3D;&#x2F;disk2         #挂载路径</span><br><span class="line">XS_APP_2_NAME&#x3D;TCSecond  #网盘名称</span><br><span class="line">XS_APP_2_THEME&#x3D;mdui     #界面主题</span><br><span class="line">XS_APP_2_BASE&#x3D;&#x2F;         #网盘内路径</span><br><span class="line">XS_APP_2_KEY&#x3D;ct2        #对应上面Key的ID</span><br></pre></td></tr></table></figure><p>这里我们将第二个网盘挂载到/disk2，但是你只能通过/disk2访问。一个小技巧?是：在第一个网盘里新建一个disk2文件夹，就能点击进入了，以此类推，第三块第四块……</p><p>注意：????除非你知道自己在做什么，不要把两个网盘或者多个网盘挂载到相同路径。</p><p>多盘用户可根据挂载路径进行授权，续期token。比如授权访问<a class="link"   href="http://tcshare.website/disk2/%EF%BC%88%E6%94%B9%E4%B8%BA%E4%BD%A0%E7%9A%84%E5%9F%9F%E5%90%8D%E5%B0%B1%E8%A1%8C%EF%BC%8C%E6%B3%A8%E6%84%8F%E5%90%8E%E9%9D%A2%E7%9A%84%E8%B7%AF%E5%BE%84%E4%B8%8D%E8%A6%81%E5%BF%98%E8%AE%B0%EF%BC%89%EF%BC%8C%E7%BB%AD%E6%9C%9F%E4%B9%9F%E6%98%AF%E4%B8%80%E6%A0%B7%E5%9C%A8%E5%90%8E%E9%9D%A2%E5%8A%A0%E5%85%A5/-renew" >http://tcshare.website/disk2/（改为你的域名就行，注意后面的路径不要忘记），续期也是一样在后面加入/-renew<i class="fas fa-external-link-alt"></i></a></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后?"></a>最后?</h2><p>关于AK SK FD天翼云盘已经关闭api开发者申请，目前能用的没有几个。而且极有可能后期api失效，感觉也是必然如果,实在有困难可以给我私密留言获取！！</p><h1 id="由于某些原因我将不在提供任何AK-SK信息，抱歉！！！！-1"><a href="#由于某些原因我将不在提供任何AK-SK信息，抱歉！！！！-1" class="headerlink" title="由于某些原因我将不在提供任何AK SK信息，抱歉！！！！"></a>由于某些原因我将不在提供任何AK SK信息，抱歉！！！！</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="分享" scheme="https://blog.gitiu.com/categories/%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="TCShare" scheme="https://blog.gitiu.com/tags/TCShare/"/>
    
    <category term="天翼云盘目录列表" scheme="https://blog.gitiu.com/tags/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98%E7%9B%AE%E5%BD%95%E5%88%97%E8%A1%A8/"/>
    
    <category term="程序" scheme="https://blog.gitiu.com/tags/%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>goorm.io一款来自韩国的免费在线Web IDE平台</title>
    <link href="https://blog.gitiu.com/posts/40018/"/>
    <id>https://blog.gitiu.com/posts/40018/</id>
    <published>2020-03-07T03:38:30.000Z</published>
    <updated>2021-03-22T08:23:17.535Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>对于类似的在线的WEB IDE之前也介绍过几款<a class="link"   href="https://51.ruyo.net/3446.html" >Cloud9<i class="fas fa-external-link-alt"></i></a> ,<a class="link"   href="https://51.ruyo.net/3380.html" >Coding.net<i class="fas fa-external-link-alt"></i></a> ！这里给大家分享一款韩国思密达的一款<a class="link"   href="https://www.gitiu.com/reprinted_articles/free-web-ide-from-goorm-io/%EF%BC%88%E5%9C%A8%E6%96%B0%E7%AA%97%E5%8F%A3%E4%B8%AD%E6%89%93%E5%BC%80%EF%BC%89" >Web IDE<i class="fas fa-external-link-alt"></i></a>！</p><p>[toc]</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584502824-goorm.io_.png"></p><h2 id="官网地址"><a href="#官网地址" class="headerlink" title="官网地址"></a>官网地址</h2><p><a class="link"   href="https://www.goorm.io/" >https://www.goorm.io/<i class="fas fa-external-link-alt"></i></a></p><p>账号登录：<a class="link"   href="https://accounts.goorm.io/signup" >https://accounts.goorm.io/signup<i class="fas fa-external-link-alt"></i></a></p><p>登录地址：<a class="link"   href="https://51.ruyo.net/go/index.html?u=https://accounts.goorm.io/login" >https://account<i class="fas fa-external-link-alt"></i></a><a class="link"   href="https://accounts.goorm.io/login" >s.goorm.io/login<i class="fas fa-external-link-alt"></i></a></p><p>控制面板：<a class="link"   href="https://ide.goorm.io/my" >https://ide.goorm.io/my<i class="fas fa-external-link-alt"></i></a></p><h2 id="免费额度"><a href="#免费额度" class="headerlink" title="免费额度"></a>免费额度</h2><p>CPU使用率： 低</p><p>内存：1GB</p><p>储存：10GB</p><p>容器数量：5</p><p>协作者：5个/容器</p><p>宾客：3/容器</p><p>域名：3/容器</p><p>虚拟化：KVM</p><p><strong>同时在线运行1个容器</strong></p><p>不支持永久在线运行</p><p>不支持自定义域名</p><p>付费套餐：<a class="link"   href="https://ide.goorm.io/pricing" >https://ide.goorm.io/pricing<i class="fas fa-external-link-alt"></i></a></p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>1）访问【<a class="link"   href="https://accounts.goorm.io/signup" >注册地址<i class="fas fa-external-link-alt"></i></a>】，填写相关信息注册账号！</p><p>先需要邮箱接受验证URL，然后完成注册。</p><p>2）访问【<a class="link"   href="https://ide.goorm.io/my" >控制面板<i class="fas fa-external-link-alt"></i></a>】，点击【New container】可以新建一个容器！</p><p>3）填写相关内容！直接创建即可！</p><p>Region ：美国，韩国，德国，印度</p><p>Stack：包含目前主流的开发语言以及框架！</p><p>支持添加Mysql，MangoDB！</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584503172-0170451ad5f67c12d2a0b1159eec9ec6.png"></p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584503172-902051ef77060a089264a5e284245649.png"></p><p>4）点击容器右上角的【⚙】可以看见的配置信息！</p><p>Basic Information（基本信息）</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584503173-3d31e4faed7be9d7e6d9c14d87cddda0.png"></p><p>Setting（设置信息）</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584503173-19805c15e287fa2e0e3cc65642419669.png"></p><p>网络端口映射设置</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584503173-dfd98a08990afaf347d9beb6c173c22a.png"></p><p>剩下的是一些协作的配置，这里不多做说明了！</p><p>4）终端中可以编写代码了~</p><p>测试命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m http.server 443</span><br></pre></td></tr></table></figure><p>然后访问域名机可以了！</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1584503173-bea34f3e4e077facf74c37352eda3c07.png"></p><h2 id="测试IP"><a href="#测试IP" class="headerlink" title="测试IP"></a>测试IP</h2><p>54.180.119.192 （韩国）</p><h2 id="性能跑分"><a href="#性能跑分" class="headerlink" title="性能跑分"></a>性能跑分</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">----------------------------------------------------------------------</span><br><span class="line">CPU model            : Intel(R) Xeon(R) Platinum 8175M CPU @ 2.50GHz</span><br><span class="line">Number of cores      : 2</span><br><span class="line">CPU frequency        : 2500.000 MHz</span><br><span class="line">Total size of Disk   : 77.9 GB (63.0 GB Used)</span><br><span class="line">Total amount of Mem  : 7687 MB (2408 MB Used)</span><br><span class="line">Total amount of Swap : 8191 MB (18 MB Used)</span><br><span class="line">System uptime        : 0 days, 2 hour 24 min</span><br><span class="line">Load average         : 0.38, 0.80, 1.20</span><br><span class="line">OS                   : Ubuntu 18.04.2 LTS</span><br><span class="line">Arch                 : x86_64 (64 Bit)</span><br><span class="line">Kernel               : 4.4.0-1102-aws</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">I&#x2F;O speed(1st run)   : 68.2 MB&#x2F;s</span><br><span class="line">I&#x2F;O speed(2nd run)   : 51.2 MB&#x2F;s</span><br><span class="line">I&#x2F;O speed(3rd run)   : 45.5 MB&#x2F;s</span><br><span class="line">Average I&#x2F;O speed    : 55.0 MB&#x2F;s</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">Node Name                       IPv4 address            Download Speed</span><br><span class="line">CacheFly                        204.93.150.152          53.0MB&#x2F;s</span><br><span class="line">Linode, Tokyo2, JP              139.162.65.37           75.5MB&#x2F;s</span><br><span class="line">Linode, Singapore, SG           139.162.23.4            24.6MB&#x2F;s</span><br><span class="line">Linode, London, UK              176.58.107.39           9.25MB&#x2F;s</span><br><span class="line">Linode, Frankfurt, DE           139.162.130.8           8.87MB&#x2F;s</span><br><span class="line">Linode, Fremont, CA             50.116.14.9             17.6MB&#x2F;s</span><br><span class="line">Softlayer, Dallas, TX           173.192.68.18           14.6MB&#x2F;s</span><br><span class="line">Softlayer, Seattle, WA          67.228.112.250          17.6MB&#x2F;s</span><br><span class="line">Softlayer, Frankfurt, DE        159.122.69.4            4.93MB&#x2F;s</span><br><span class="line">Softlayer, Singapore, SG        119.81.28.170           25.5MB&#x2F;s</span><br><span class="line">Softlayer, HongKong, CN         119.81.130.170          37.0MB&#x2F;s</span><br><span class="line">----------------------------------------------------------------------</span><br></pre></td></tr></table></figure><h2 id="最后说明"><a href="#最后说明" class="headerlink" title="最后说明"></a>最后说明</h2><p>该免费的WEBIDE适合测试学习使用，不太适合酸酸等！CPU使用率不能太高，否则有封号的风险！</p><p>容器能在线多久？目测是只要你链的终端就不会离线！</p><p>摘自：<a class="link"   href="https://51.ruyo.net/15623.html" >goorm.io一款来自韩国的免费在线Web IDE平台<i class="fas fa-external-link-alt"></i></a> 在此感谢</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="转载" scheme="https://blog.gitiu.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
    <category term="goorm.io" scheme="https://blog.gitiu.com/tags/goorm-io/"/>
    
    <category term="Web IDE平台" scheme="https://blog.gitiu.com/tags/Web-IDE%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>首款iOS虚拟机UTM-免越狱在iPhone iPad 上安装 Windows/Linux/安卓系统</title>
    <link href="https://blog.gitiu.com/posts/32512/"/>
    <id>https://blog.gitiu.com/posts/32512/</id>
    <published>2020-03-04T08:00:00.000Z</published>
    <updated>2021-03-22T08:23:17.571Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>[toc]</p><p>话说在 iPad、iPhone (iOS) 上安装和运行 Windows / Linux / Android 系统一直是很多人的梦想。以前我们只能通过“远程桌面控制”的方式来曲线圆梦，但这始终没那味儿。</p><p>在 Mac 和 PC 上，我们知道有 Parallels Desktop 和 VMWare 等虚拟机软件，能让我们轻松安装并模拟运行各种不同操作系统的软件和游戏。而苹果的 iOS 设备尽管性能卓越，却一直缺少了虚拟机这样的神器，直到「<strong>UTM 虚拟机</strong>」的出现，iOS 终于被赋予了新的能力…</p><h2 id="1-UTM-虚拟机-在-iPhone、iPad-上安装-Windows！"><a href="#1-UTM-虚拟机-在-iPhone、iPad-上安装-Windows！" class="headerlink" title="1. UTM 虚拟机 - 在 iPhone、iPad 上安装 Windows！"></a>1. <strong>UTM 虚拟机 - 在 iPhone、iPad 上安装 Windows！</strong></h2><p>作为业界性能第一梯队的移动设备，苹果的 iPhone 和 iPad 用途和生产力一直在被发掘和拓展，而这次可爱的开发者们又为大家带来了一款梦寐以求的工具——iOS 上的 UTM 虚拟机软件！这应该也是 iOS 有史以来首款具有操作实用性的模拟器软件了，他们真的做到了！</p><p><strong>UTM 虚拟机</strong>基于 QEMU 项目开发而来，完全免费开源。它能让你在 iPhone、iPad 等 iOS 设备上安装其他操作系统，包括 Windows、Linux，甚至是 Android 安卓系统！而且 UTM 还<strong>不需要 iOS 越狱</strong>就能安装 (但要想办法给 .ipa 签名)，使用难度和门槛都比较低，适合广大喜欢搞机的朋友折腾。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/utm_ipad_win7.jpg?x-oss-process=image/resize,m_fill,w_300,h_225#" alt="utm_ipad_win7"></p><p>iPad 使用 UTM 虚拟机安装运行 Windows7</p><p>而虚拟机软件不像“刷固件”或原生安装系统那样，它不会对原有设备的系统造成任何修改和影响，腻了就删掉 APP 即可，所以随意玩玩也不会有什么后果，不必担心把手机或 iPad 搞坏。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/utm_iphone_win10.jpg?x-oss-process=image/resize,m_fill,w_300,h_193#" alt="utm_iphone_win10"></p><p>UTM 虚拟机在 iPhone 上安装运行 Windows 10</p><p>看到这里，你的 iPhone 和 iPad 是不是已经在蠢蠢欲动了呀？！毕竟 iOS 这次终于可以真正安装和运行 .exe 了！ 那下面我们看看实测情况怎么样吧。</p><h2 id="2-iOS-UTM-虚拟机运行速度-已具有可用性"><a href="#2-iOS-UTM-虚拟机运行速度-已具有可用性" class="headerlink" title="2. iOS UTM 虚拟机运行速度 - 已具有可用性"></a>2. iOS UTM 虚拟机运行速度 - 已具有可用性</h2><p>实际上手测试 UTM 虚拟机，无论是安装过程还是运行 Windows7、XP 等系统都已经具有“可用性”了，甚至也能装上 Windows 10！虽不能说它有多快多流畅，但“基本能用”就已经让无数人泪流满面了吧，这也是 iOS 虚拟化跨出的伟大一步啊，下面我们看看运行效果如何。</p><h2 id="3-iPad-用-UTM-虚拟机运行-WinXP-玩-CS-游戏-半条命-Half-Life-演示视频："><a href="#3-iPad-用-UTM-虚拟机运行-WinXP-玩-CS-游戏-半条命-Half-Life-演示视频：" class="headerlink" title="3. iPad 用 UTM 虚拟机运行 WinXP 玩 CS 游戏 (半条命 / Half-Life) 演示视频："></a>3. iPad 用 UTM 虚拟机运行 WinXP 玩 CS 游戏 (半条命 / Half-Life) 演示视频：</h2><p>当然，由于 iOS 设备本身缺少了硬件虚拟化的支持，它没办法完全利用好自己全部的硬件性能，很多时候无硬件加速，因此虚拟机的运行速度一般，与 Parallels Desktop、VMWare 之流的肯定没法比，也无法直接使用 KVM 之类的虚拟化解决方案。</p><h2 id="4-iPad-安装-Windows-7"><a href="#4-iPad-安装-Windows-7" class="headerlink" title="4. iPad 安装 Windows 7"></a>4. iPad 安装 Windows 7</h2><p>点击开始播放视频</p><p>UTM 官方表示，由于代码上的限制目前非越狱版本的 UTM 最多仅能利用硬件 70% 的性能，如果日后推出越狱版的 UTM，或许可以 100% 利用硬件性能。目前官方推荐你使用 UTM 虚拟机跑一些分辨率低且 UI 较为简单的系统 (比如 Linux 命令行) 来获得更好的体验。</p><p>从视频可以看出，用 UTM 在新款的 iOS 设备上运行 Windows 和 Linux 都勉强能算可一用，但似乎还无法联网有点可惜。而比较贪心的朋友还想在 iPhone 上流畅运行 Android 系统，但因为 UTM 仅能跑 x86 版的安卓系统，目前跑是能跑起来，但速度比较感人，视频来自<a class="link"   href="https://space.bilibili.com/217440425" >一銘劉學珄<i class="fas fa-external-link-alt"></i></a>。</p><h2 id="5-在-iPhone-上安装运行-Android-系统"><a href="#5-在-iPhone-上安装运行-Android-系统" class="headerlink" title="5. 在 iPhone 上安装运行 Android 系统"></a>5. 在 iPhone 上安装运行 Android 系统</h2><p>点击开始播放视频</p><p>总之，有条件的，尽量用最新款的 iPhone 和 iPad 测试以获得最佳的运行效果，老旧的型号性能肯定会吃力一些。另外，玩虚拟机时，也需要确保设备有足够的剩余存储空间 (比如 Windows 可能要预留 30GB) 来保存镜像和虚拟机使用哦。</p><h2 id="6-iOS-安装-UTM-虚拟机方法教程："><a href="#6-iOS-安装-UTM-虚拟机方法教程：" class="headerlink" title="6. iOS 安装 UTM 虚拟机方法教程："></a>6. iOS 安装 UTM 虚拟机方法教程：</h2><p>由于 UTM 虚拟机涉及到版权和代码问题，是无法上架 AppStore 的，因此只能通过其他方法安装。有两种方法，要么是给 iOS 设备越狱，要么需要第三方签名工具。</p><h3 id="选择-1：iOS-越狱"><a href="#选择-1：iOS-越狱" class="headerlink" title="选择 1：iOS 越狱"></a>选择 1：iOS 越狱</h3><p>刚好之前已有黑客团队发布了 iOS 13.1 的越狱工具 unc0ver，如果你的设备符合条件，而你又是个越狱党的话，那么给 iPhone / iPad 越狱了，再借助 <strong>Cydia Impactor</strong> 和 <strong>ReProvision</strong> 等工具来安装未签名的 ipa，就能使用 UTM 的安装包了。</p><h3 id="选择-2：使用开发者证书给-ipa-签名"><a href="#选择-2：使用开发者证书给-ipa-签名" class="headerlink" title="选择 2：使用开发者证书给 .ipa 签名"></a>选择 2：使用开发者证书给 .ipa 签名</h3><p>对于没有越狱的设备，只能通过给 .ipa 安装包签名的方式将 UTM 安装到你的设备上了。但这里也有门槛，按「正常途径」来说，你需要注册为“<a class="link"   href="https://developer.apple.com/cn/programs/" >苹果开发者<i class="fas fa-external-link-alt"></i></a>”(区分免费账号和支付$99/每年的付费账号)，才能获得“开发者证书”来给 IPA 签名。</p><ul><li>  免费苹果开发者账号，给 IPA 签名一次有效 7 天，之后需要续签才能继续运行</li><li>  付费苹果开发者账号，给 IPA 签名一次有效 1 年，之后需要续签才能继续运行</li><li>  注意：iOS 13.3.1 加了限制，免费开发者已无法签名，如果你还是 13.3 并希望使用免费帐号签名，那么请不要升级！已升 13.3.1 的同学只能用付费账号签名。</li></ul><p>当有开发者证书之后，你就可以使用 <a class="link"   href="https://dantheman827.github.io/ios-app-signer/" >iOS App Signer 工具<i class="fas fa-external-link-alt"></i></a>给 UTM .ipa 安装包签名，就能愉快地使用了。当然，如果你有朋友是付费开发者，也可以让别人帮自己签名，大家各显神通吧。</p><h3 id="选择-3：使用第三方签名工具"><a href="#选择-3：使用第三方签名工具" class="headerlink" title="选择 3：使用第三方签名工具"></a>选择 3：使用第三方签名工具</h3><p>如果你没有开发者账号/证书，也不想越狱，那还可以考虑试试网上其他的一些“第三方 iOS 签名工具/服务”，比如 <strong>AppCake</strong>。这类工具涉及到版权和安全性问题，他们会记录你的设备 UDID 或收集一些统计数据什么的，不好说会否影响系统安全或有没任何其他副作用，只能说见仁见智了，反正就像使用盗版一样，自己斟酌呗。</p><p>AppCake 就像一个“黑市版”的商店（类似 PP 助手之类的），它本身无需越狱即可安装，你可以借助它来安装其他未签名的 IPA。首先<strong>使用 iOS 设备去下载 AppCake.ipa 进行安装</strong>。之后，就可以通过 AppCake 的 APP 来安装 UTM 虚拟机了。</p><p><a class="link"   href="itms-services://?action=download-manifest&url=https://www.iphonecake.com/app/appcake.plist" >立即安装 AppCake (iOS)<i class="fas fa-external-link-alt"></i></a><br>请使用 iOS 设备点击此按钮</p><p>注意：AppCake 需要信任描述文件后才能使用，大家可以参考的<a class="link"   href="https://space.bilibili.com/38921931" >欢喜糖伈<i class="fas fa-external-link-alt"></i></a>同学的制作的视频教程进行操作。</p><h4 id="通过-AppCake-免越狱-iOS-安装-UTM-虚拟机教程："><a href="#通过-AppCake-免越狱-iOS-安装-UTM-虚拟机教程：" class="headerlink" title="通过 AppCake 免越狱 iOS 安装 UTM 虚拟机教程："></a>通过 AppCake 免越狱 iOS 安装 UTM 虚拟机教程：</h4><p>点击开始播放视频</p><h4 id="另一英文版教程，同样是通过-AppCake-安装-UTM："><a href="#另一英文版教程，同样是通过-AppCake-安装-UTM：" class="headerlink" title="另一英文版教程，同样是通过 AppCake 安装 UTM："></a>另一英文版教程，同样是通过 AppCake 安装 UTM：</h4><p>点击开始播放视频</p><h4 id="iOS-安装-UTM-虚拟机总结："><a href="#iOS-安装-UTM-虚拟机总结：" class="headerlink" title="iOS 安装 UTM 虚拟机总结："></a>iOS 安装 UTM 虚拟机总结：</h4><p>总之，iOS 安装 UTM 虚拟机最麻烦的地方在于给 ipa 签名，否则不越狱是无法安装使用的。最安全合规的做法是使用“付费的开发者账号”给 UTM 签名，这毕竟是苹果官方的途径，可靠性最高，只是 iOS 13.3.1 上会有成本 (iOS 13.3 可以免费 7 天不断重签)。而使用第三方的签名工具虽然免费，但安全性就只能由大家斟酌了。</p><h3 id="写在后面："><a href="#写在后面：" class="headerlink" title="写在后面："></a>写在后面：</h3><p>目前 UTM 虚拟机还只是预览版，可能闪退 Bug 还比较多，性能优化也还有很长的路要走。但毕竟这是第一个具有可用性的 <strong>iOS 虚拟机软件</strong>，而且开源免费，确实还是值得一赞的。</p><p>当然，iOS 除了玩虚拟机外，其实以往“远程”的方式也有很多可玩性，除常见的控制电脑桌面，你甚至还能使用 Moonlight、Steam Link 等让 iPad / iPhone 远程串流玩 PC 游戏。</p><p>甚至 PS4、XBox 游戏机也都各自推出了串流客户端可让 iOS 设备作为显示器无线游玩，加上新版 iOS 还能连接蓝牙手柄了，所以可折腾的乐趣还是很多的。</p><p>本文链接：<a class="link"   href="https://www.iplaysoft.com/utm.html" >https://www.iplaysoft.com/utm.html<i class="fas fa-external-link-alt"></i></a></p><h3 id="相关文件下载地址"><a href="#相关文件下载地址" class="headerlink" title="相关文件下载地址"></a>相关文件下载地址</h3><p>官方网站：<a class="link"   href="https://getutm.app/" >访问<i class="fas fa-external-link-alt"></i></a><br>软件性质：免费开源</p><p>UTM ipa文件下载</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="转载" scheme="https://blog.gitiu.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
    <category term="iOS虚拟机" scheme="https://blog.gitiu.com/tags/iOS%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    <category term="UTM" scheme="https://blog.gitiu.com/tags/UTM/"/>
    
  </entry>
  
  <entry>
    <title>解决宝塔面板安装php拓展失败的问题</title>
    <link href="https://blog.gitiu.com/posts/46585/"/>
    <id>https://blog.gitiu.com/posts/46585/</id>
    <published>2020-03-03T03:14:22.000Z</published>
    <updated>2021-03-22T08:23:17.479Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>[toc]</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>作为一个只有一点基础，甚至没有基础的Linux初学者来说使用宝塔面板无疑是一个更好的选择，方便实施管理预览，安装一些常用的软件环境，部署一些项目快速，当然缺点还是有的，比如说对小内存机器不友好，不去设置后台甚至不安全，但是总的来说，使用起来还是很稳定。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>其中我们对于安装php拓展时会遇到编译出错，运行日志报错，这甚至十分常见。</p><p>比如说安装fileinfo， exif ，imagemagick， memcached 等等</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/1583203623-bt1.png?x-oss-process=image/resize,m_fill,w_640,h_241#"></p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/bt2.png"></p><p>可能会去多安装几次，但是显示成功实际上并未安装成功。</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/bt4.png"></p><h2 id="思考解决"><a href="#思考解决" class="headerlink" title="思考解决"></a>思考解决</h2><p>多半是编译环境有问题，比如说安装 memcached 时，可能就是服务器编译器的问题，你可以试试这些代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc-c++</span><br><span class="line">yum -y install glibc-headers</span><br><span class="line">yum -y install m4</span><br><span class="line">yum -y install autoconf</span><br></pre></td></tr></table></figure><p>这时多半就会解决问题</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/bt7.png"></p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/bt6.png"></p><p>也可以通过phpinfo查看</p><p><img src="https://cdn.gitiu.com/wp-content/uploads/2020/03/bt5-phpinfo.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="文章" scheme="https://blog.gitiu.com/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="btpanel" scheme="https://blog.gitiu.com/tags/btpanel/"/>
    
    <category term="memcached安装失败" scheme="https://blog.gitiu.com/tags/memcached%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5/"/>
    
    <category term="php拓展" scheme="https://blog.gitiu.com/tags/php%E6%8B%93%E5%B1%95/"/>
    
    <category term="宝塔面板" scheme="https://blog.gitiu.com/tags/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/"/>
    
  </entry>
  
</feed>
